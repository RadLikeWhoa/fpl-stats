{"version":3,"sources":["serviceWorker.ts","components/Button/Button.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/api.ts","utilities/arrays.ts","utilities/chips.ts","utilities/events.ts","utilities/history.ts","utilities/numbers.ts","utilities/settings.ts","utilities/stats.ts","utilities/strings.ts","components/Modal/Modal.tsx","components/ModalInput/ModalInput.tsx","components/TeamModal/TeamModal.tsx","reducers/loading.ts","reducers/entry.ts","reducers/history.ts","reducers/milestones.ts","reducers/stats.ts","reducers/bootstrap.ts","reducers/settings.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/Player/Player.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/ChangeBadge/ChangeBadge.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/WidgetWithModal/WidgetWithModal.tsx","components/BasePlayerWidget/BasePlayerWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/MissedPointsShareWidget/MissedPointsShareWidget.tsx","components/NearMissesWidget/NearMissesWidget.tsx","components/StreakWidget/StreakWidget.tsx","components/Checkbox/Checkbox.tsx","components/SegmentedControl/SegmentedControl.tsx","components/SettingsModal/SettingsModal.tsx","components/MilestonesWidget/MilestonesWidget.tsx","components/PlayerOverview/PlayerOverview.tsx","components/FormWidget/FormWidget.tsx","components/PriceChangeWidget/PriceChangeWidget.tsx","components/InjuryWidget/InjuryWidget.tsx","components/ExpectedPointsWidget/ExpectedPointsWidget.tsx","components/PopularityWidget/PopularityWidget.tsx","components/TransfersWidget/TransfersWidget.tsx","components/StatComparison/StatComparison.tsx","components/PlayerComparisonWidget/PlayerComparisonWidget.tsx","components/DoubleDigitHaulsWidget/DoubleDigitHaulsWidget.tsx","components/PlayerGWReturnWidget/PlayerGWReturnWidget.tsx","components/TeamGWReturnWidget/TeamGWReturnWidget.tsx","components/TeamContributionWidget/TeamContributionWidget.tsx","components/PointsImprovementsWidget/PointsImprovementsWidget.tsx","components/BonusPointsWidget/BonusPointsWidget.tsx","components/CaptainPointsWidget/CaptainPointsWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","reportWebVitals.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","Button","props","className","type","onClick","disabled","label","Widget","id","useSelector","state","settings","classNames","cssClasses","title","onClose","aria-label","children","Spinner","fetchApi","endpoint","a","fetch","encodeURIComponent","response","JSON","json","contents","parse","sort","series","comparator","direction","b","head","length","last","reduce","extractor","initialValue","acc","curr","chips","bboost","freehit","wildcard","getPastEvents","events","timestamp","Date","now","filter","event","deadline_time_epoch","getShortName","name","split","pop","filterHistoryData","history","range","current","slice","start","end","thousandsSeparator","value","toString","replace","thousandsShorthand","round","sumNumbers","el","precision","formatted","toFixed","test","validateTeamId","number","Number","isNaN","isInteger","getTotalSelections","statData","data","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalRawPoints","rawPoints","getTotalBenchPoints","getTotalDoubleDigitHauls","getAllPlayers","stats","Object","values","concat","getPlayerAggregate","player","key","getTopStatAggregate","players","aggregates","totals","getStreak","comparison","ignoreBlanks","getPoints","gw","streaks","max","Math","map","index","streak","totalPoints","getSelectionStreak","getStartStreak","getBenchStreak","getNonBlankStreak","getDoubleDigitHaulStreak","getBonusStreak","bonusPoints","bonus","getTeamOfTheSeason","gk","def","mid","fwd","top","rest","xi","element","element_type","bench","emptyAggregates","redCards","yellowCards","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","timesInDreamteam","bps","captaincies","benchPoints","selections","starts","benched","doubleDigitHauls","selection","nonBlank","doubleDigitHaul","filterStatData","rawStats","bootstrap","forEach","active_chip","entry_history","picks","item","elements","find","position","live","total_points","keys","tots","initialCaps","charAt","toUpperCase","toLowerCase","pluralise","singular","plural","parsedValue","getGWCountLabel","verbose","getPointsLabel","normaliseDiacritics","normalize","Modal","footer","ModalInput","htmlFor","placeholder","onChange","e","target","ref","innerRef","TeamModal","useState","setValue","isLoading","loading","useHistory","recentTeams","useMemo","localStorage","getItem","close","useCallback","cancel","team","push","useEffect","listener","document","addEventListener","removeEventListener","callbackRef","inputElement","focus","onSubmit","preventDefault","options","option","styles","menu","provided","zIndex","width","createSlice","initialState","reducers","startLoading","finishLoading","actions","fetchEntry","createAsyncThunk","thunkAPI","dispatch","fetchEntryStart","fetchEntrySuccess","entry","undefined","action","payload","setItem","stringify","Array","from","Set","fetchHistory","fetchHistoryStart","fetchHistorySuccess","fetchStanding","page","fetchMilestones","arg","fetchMilestonesStart","Promise","all","results","standings","fetchMilestonesSuccess","milestones","fetchStatData","fetchStatsStart","fetchGameweekInformation","gameweeks","fetchStatsSuccess","fetchPicks","fetchEvent","fetchBootstrap","fetchBootstrapStart","fetchBootstrapSuccess","latestFetch","fetchDataWithId","setId","meanStrategy","theme","hiddenSections","setMeanStrategy","setTheme","addHiddenSection","removeHiddenSection","section","useMeanLabel","strategy","suffix","useMeanValue","filtered","average","sorted","ceil","median","TITLE","HistoryWidget","useContext","FilteredDataContext","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","rankData","season_name","height","margin","right","bottom","left","dataKey","fill","fillOpacity","stroke","reversed","tickFormatter","domain","interval","tickCount","hide","angle","textAnchor","isAnimationActive","formatter","separator","TotsPlayer","teams","element_types","src","code","singular_name_short","alt","web_name","TotsWidget","Fragment","explanations","ppg","ppp","ppw","Metric","metric","Player","extended","short_name","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","inDreamteam","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","idealCaptain","entries","week","returner","renderTopBenchGWReturner","formatFormation","formation","FormationWidget","formations","val","formationData","join","count","information","CaptainWidget","captains","captain","add","size","ChangeBadge","renderer","abs","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","plural_name","getAggregateValues","SeasonWidget","rawHistory","totalTransfers","event_transfers","totalHits","event_transfers_cost","largestHit","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","totalPlays","summary_overall_points","Team","TeamsWidget","counts","positionPlayers","data-position","plural_name_short","SwapIcon","xmlns","viewBox","d","CaptainOpportunityWidget","improvements","improvement","missedPoints","captainData","topData","renderList","list","renderItem","getItemKey","render","WidgetWithModal","showExtended","setShowExtended","filteredData","matchesFilter","isStatData","isElement","query","includes","BasePlayerWidget","SelectionWidget","DifferenceWidget","benchedPercentage","startsPercentage","starters","percentageDiff","benchwarmers","OverallRankWidget","overall_rank","PointsWidget","pointsData","ValueWidget","valueData","bank","WrongCaptainWidget","timesUsed","totalMisses","ContributionWidget","latestPoints","contributions","getPointsShare","MissedPointsShareWidget","NearMissesWidget","totsIds","StreakWidget","showDetailedStats","localeCompare","Checkbox","checked","SegmentedControl","selected","setSelected","meanOptions","SettingsModal","setChecked","setStrategy","useDispatch","MilestonesWidget","total","sortings","alphabet","charCodeAt","PlayerOverview","sorting","renderPlayerList","FormWidget","form","GAINS_TITLE","DROPS_TITLE","PriceChangeWidget","cost_change_event","cost_change_event_fall","input","InjuryWidget","chance_of_playing_next_round","CURRENT_TITLE","NEXT_TITLE","ExpectedPointsWidget","ep_next","event_points","ep_this","PopularityWidget","selected_by_percent","IN_TITLE","OUT_TITLE","TransfersWidget","transfers_in_event","transfers_out_event","StatComparison","leftValue","stat","rightValue","columnClass","compare","PlayerComparisonWidget","leftSide","setLeftSide","rightSide","setRightSide","playerOptions","leftSideData","rightSideData","leftKey","rightKey","container","DoubleDigitHaulsWidget","POINTS_TITLE","BENCH_TITLE","PlayerGWReturnWidget","TeamGWReturnWidget","teamData","TeamContributionWidget","isValidXi","defenders","p","midfielders","forwards","getFormation","PointsImprovementsWidget","outfieldXi","outfieldBench","subsPerformed","subs","newBench","lowestScore","possibleSubs","sub","proposedXi","xiPlayer","proposedBench","benchPlayer","originalMultiplier","in","out","benchGk","temp","rotatedPlayers","actualCaptain","initialCaptain","subCheck","actualPoints","idealPoints","actualFormation","idealFormation","idealTotalPoints","totalImprovement","data-category","BonusPointsWidget","CaptainPointsWidget","sortOptions","React","createContext","Dashboard","setSort","isSettingsOpen","setIsSettingsOpen","setRange","setFilteredData","rawStatsData","useParams","browserHistory","isModalOpen","setIsModalOpen","documentElement","setAttribute","debouncedFiltering","useRef","debounce","filteredStatData","filteredHistoryData","renderSection","isHidden","toggleHiddenSection","Provider","Helmet","content","getComputedStyle","getPropertyValue","summary_overall_rank","total_players","ReactSlider","min","renderThumb","valueNow","pearling","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","storage","mostRecentTeamId","preloadedState","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","subscribe","getState","configureAppStore","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7824af6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button className=\"button\" type={props.type || 'button'} onClick={props.onClick} disabled={props.disabled}>\n        {props.label}\n    </button>\n)\n\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Button } from '../Button'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    cssClasses?: string\n    onClose?: () => void\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div\n            className={classNames('widget', props.cssClasses, {\n                'widget--cloaked': !id,\n            })}\n        >\n            {props.title && (\n                <h3 className=\"widget__title\">\n                    {props.title}{' '}\n                    {props.onClose && <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />}\n                </h3>\n            )}\n            <div className=\"widget__content\">\n                {props.children || <div className=\"widget__empty\">No data available.</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget\n","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner\n","export const fetchApi = async (endpoint: string): Promise<any> => {\n    const response = await fetch(\n        `https://api.allorigins.win/get?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/${endpoint}`)}`\n    )\n\n    return JSON.parse((await response.json()).contents)\n}\n","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return series ? [...series].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1)) : []\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series?.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series?.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series?.reduce((acc, curr) => acc + extractor(curr), initialValue) || 0\n}\n","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null\n","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}\n","import { History, Range } from '../types'\n\nexport const filterHistoryData = async (history: History, range: Range): Promise<History> => {\n    return {\n        ...history,\n        current: history.current?.slice(range.start, range.end + 1) || [],\n    }\n}\n","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number | string): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: (number | null)[]): number => {\n    return reduce(series, el => el || 0)\n}\n\nexport const average = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null)\n\n    return filtered.length ? sumNumbers(filtered) / filtered.length : 0\n}\n\nexport const median = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null) as number[]\n    const sorted = sort(filtered, el => el)\n    const mid = Math.ceil(filtered.length / 2)\n\n    if (sorted.length === 0) {\n        return 0\n    }\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid - 1] + sorted[mid]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}\n","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}\n","import {\n    ElementStats,\n    StatData,\n    Stats,\n    StatDataGameweek,\n    Streak,\n    Picks,\n    LiveEvent,\n    Bootstrap,\n    Range,\n    StatAggregateTotals,\n} from '../types'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalCaptaincies = (statData: StatData): number => {\n    return statData.data.filter(data => (data.multiplier || 0) > 1).length\n}\n\nexport const getTotalRawPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.rawPoints || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => (el.multiplier === 0 ? el.rawPoints || 0 : 0))\n}\n\nexport const getTotalDoubleDigitHauls = (statData: StatData): number => {\n    return statData.data.filter(data => (data.rawPoints || 0) > 9).length\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const getPlayerAggregate = (player: StatData, key: keyof ElementStats): number =>\n    player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof StatAggregateTotals): StatData | null =>\n    head(sort(players, el => el.aggregates.totals[key]))\n\nconst getStreak = (\n    statData: StatData,\n    comparison: (gw: StatDataGameweek) => boolean,\n    ignoreBlanks: boolean = false,\n    getPoints: (event: StatDataGameweek) => number | null = gw => gw.rawPoints\n): Streak[] | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [...acc.slice(0, acc.length - 1), (acc[acc.length - 1] || 0) + 1]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [...acc, 1]\n            }\n\n            return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n        }\n\n        return ignoreBlanks ? [...acc, ...(acc.length && acc[acc.length - 1] === 0 ? [0] : [0, 0])] : [...acc, 0]\n    }, [] as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    return streaks\n        .map((length, index) => {\n            if (length < 2) {\n                return null\n            }\n\n            const start = sumNumbers(streaks.slice(0, index).map(streak => (streak > 0 ? streak : 1)))\n            const end = start - 1 + length\n\n            const points = (start === end ? statData.data : statData.data.slice(start, end + 1)).map(\n                event => getPoints(event) || 0\n            )\n\n            return {\n                start: statData.data[start].event,\n                end: statData.data[end].event,\n                length,\n                points,\n                totalPoints: sumNumbers(points),\n            }\n        })\n        .filter(el => el !== null) as Streak[]\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak[] | null =>\n    getStreak(statData, gw => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak[] | null =>\n    getStreak(statData, gw => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak[] | null =>\n    getStreak(statData, gw => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak[] | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 3)\n\nexport const getDoubleDigitHaulStreak = (statData: StatData): Streak[] | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 9)\n\nexport const getBonusStreak = (statData: StatData): Streak[] | null =>\n    getStreak(\n        statData,\n        gw => (gw.bonusPoints || 0) > 0,\n        false,\n        gw => gw.stats?.bonus || null\n    )\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nexport const getTeamOfTheSeason = (stats: Stats): { xi: StatData[]; bench: StatData[] } => {\n    const gk = sort(stats[1], el => el.aggregates.totals.points).slice(0, MAX_GK)\n    const def = sort(stats[2], el => el.aggregates.totals.points).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => el.aggregates.totals.points).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => el.aggregates.totals.points).slice(0, MAX_FWD)\n\n    const top = gk\n        .slice(0, MIN_GK)\n        .concat(def.slice(0, MIN_DEF))\n        .concat(mid.slice(0, MIN_MID))\n        .concat(fwd.slice(0, MIN_FWD))\n\n    const rest = sort(\n        def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)),\n        el => el.aggregates.totals.points\n    )\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = gk.slice(MIN_GK).concat(sort(rest.slice(4), el => el.aggregates.totals.points, 'desc'))\n\n    return {\n        xi,\n        bench,\n    }\n}\n\nconst emptyAggregates = {\n    totals: {\n        redCards: 0,\n        yellowCards: 0,\n        goals: 0,\n        assists: 0,\n        cleanSheets: 0,\n        goalsConceded: 0,\n        ownGoals: 0,\n        saves: 0,\n        minutes: 0,\n        penaltiesMissed: 0,\n        penaltiesSaved: 0,\n        timesInDreamteam: 0,\n        bps: 0,\n        bonus: 0,\n        captaincies: 0,\n        points: 0,\n        rawPoints: 0,\n        benchPoints: 0,\n        selections: 0,\n        starts: 0,\n        benched: 0,\n        doubleDigitHauls: 0,\n    },\n    streaks: {\n        selection: null,\n        start: null,\n        bench: null,\n        nonBlank: null,\n        doubleDigitHaul: null,\n        bonus: null,\n    },\n}\n\nexport const filterStatData = async (\n    rawStats: {\n        pick: Picks\n        live: LiveEvent\n    }[],\n    bootstrap: Bootstrap,\n    range: Range\n): Promise<{\n    data: Stats\n    chips: {\n        [key: number]: string\n    }\n    tots: {\n        xi: StatData[]\n        bench: StatData[]\n    }\n}> => {\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    rawStats.slice(range.start, range.end + 1).forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.slice(range.start, gw.pick.entry_history.event - 1).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        benchPoints: null,\n                        bonusPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                    aggregates: emptyAggregates,\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n            const bonus = gw.live.elements.find(el => el.id === item.element)?.stats.bonus || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        benchPoints: item.multiplier === 0 ? points : 0,\n                        bonusPoints: bonus,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    },\n                ],\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event - range.start) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            benchPoints: null,\n                            bonusPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    Object.keys(stats).forEach(id => {\n        const player = stats[Number(id)]\n\n        stats[Number(id)].aggregates = {\n            totals: {\n                redCards: getPlayerAggregate(player, 'red_cards'),\n                yellowCards: getPlayerAggregate(player, 'yellow_cards'),\n                goals: getPlayerAggregate(player, 'goals_scored'),\n                assists: getPlayerAggregate(player, 'assists'),\n                cleanSheets: getPlayerAggregate(player, 'clean_sheets'),\n                goalsConceded: getPlayerAggregate(player, 'goals_conceded'),\n                ownGoals: getPlayerAggregate(player, 'own_goals'),\n                saves: getPlayerAggregate(player, 'saves'),\n                minutes: getPlayerAggregate(player, 'minutes'),\n                penaltiesMissed: getPlayerAggregate(player, 'penalties_missed'),\n                penaltiesSaved: getPlayerAggregate(player, 'penalties_saved'),\n                timesInDreamteam: getPlayerAggregate(player, 'in_dreamteam'),\n                bps: getPlayerAggregate(player, 'bps'),\n                bonus: getPlayerAggregate(player, 'bonus'),\n                captaincies: getTotalCaptaincies(player),\n                points: getTotalPoints(player),\n                rawPoints: getTotalRawPoints(player),\n                benchPoints: getTotalBenchPoints(player),\n                selections: getTotalSelections(player),\n                starts: getTotalStarts(player),\n                benched: getTotalBenched(player),\n                doubleDigitHauls: getTotalDoubleDigitHauls(player),\n            },\n            streaks: {\n                selection: getSelectionStreak(player),\n                start: getStartStreak(player),\n                bench: getBenchStreak(player),\n                nonBlank: getNonBlankStreak(player),\n                doubleDigitHaul: getDoubleDigitHaulStreak(player),\n                bonus: getBonusStreak(player),\n            },\n        }\n    })\n\n    const data = Object.values(stats).reduce(\n        (acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [...(acc[curr.element.element_type] || []), curr],\n        }),\n        {}\n    )\n\n    return {\n        data,\n        chips,\n        tots: getTeamOfTheSeason(data),\n    }\n}\n","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`\n\nexport const pluralise = (value: number | string, singular: string, plural: string) => {\n    const parsedValue = typeof value === 'number' ? value : Number(value.replace(/,/g, ''))\n\n    return `${value} ${parsedValue === 1 ? singular : plural}`\n}\n\nexport const getGWCountLabel = (value: number | string, verbose: boolean = false): string =>\n    verbose ? pluralise(value, 'Gameweek', 'Gameweeks') : pluralise(value, 'GW', 'GWs')\n\nexport const getPointsLabel = (value: number | string): string => pluralise(value, 'pt', 'pts')\n\nexport const normaliseDiacritics = (value: string): string => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './Modal.scss'\n\ntype Props = {\n    title: string\n    children?: React.ReactNode\n    onClose?: () => void\n    footer?: React.ReactNode\n    cssClasses?: string\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    return (\n        <div className={classNames('modal', props.cssClasses)}>\n            <div className=\"modal__backdrop\" onClick={() => props.onClose?.()}></div>\n            <div className=\"modal__element\">\n                <h3 className=\"modal__header\">\n                    {props.title}\n                    <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />\n                </h3>\n                <div className=\"modal__body\">{props.children}</div>\n                {props.footer && <footer className=\"modal__footer\">{props.footer}</footer>}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","import React from 'react'\nimport './ModalInput.scss'\n\ntype Props = {\n    label: string\n    value: string\n    onChange: (value: string) => void\n    placeholder?: string\n    id?: string\n    innerRef?: (element: any) => any\n    type?: 'text' | 'number'\n}\n\nconst ModalInput: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"modal-input\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                className=\"modal-input__element\"\n                id={props.id}\n                type={props.type || 'text'}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={e => props.onChange(e.target.value)}\n                ref={props.innerRef}\n            />\n        </div>\n    )\n}\n\nexport default ModalInput\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button } from '../Button'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport { Modal } from '../Modal'\nimport { ModalInput } from '../ModalInput'\nimport { OptionType } from '../Dashboard/Dashboard'\nimport './TeamModal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst TeamModal: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useHistory()\n\n    const recentTeams: string[] = useMemo(() => JSON.parse(localStorage.getItem('recentTeams') || '[]') || [], [])\n\n    const close = useCallback(\n        (cancel: boolean, team?: OptionType) => {\n            if (!cancel) {\n                history.push(`/${team?.value || value}/`)\n            } else if (id) {\n                props.onClose?.()\n            }\n        },\n        [id, value, history, props]\n    )\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    return (\n        <form\n            onSubmit={e => {\n                close(false)\n                e.preventDefault()\n            }}\n        >\n            <Modal\n                title=\"Select Team\"\n                cssClasses=\"team-modal\"\n                onClose={() => close(true)}\n                footer={\n                    recentTeams.length > 0 ? (\n                        <Select\n                            className=\"team-modal__select\"\n                            options={recentTeams.map(team => ({ value: team.split(' — ')[0], label: team }))}\n                            onChange={option => close(false, option as OptionType)}\n                            placeholder=\"Recent Team IDs…\"\n                            styles={{\n                                menu: provided => ({ ...provided, zIndex: 20, width: 'calc(100% - 2rem)' }),\n                            }}\n                        />\n                    ) : null\n                }\n            >\n                <ModalInput\n                    label=\"Team ID\"\n                    placeholder=\"Enter your team ID\"\n                    value={value}\n                    onChange={value => setValue(value)}\n                    type=\"number\"\n                    innerRef={callbackRef}\n                />\n                <Button\n                    label=\"Show Stats\"\n                    type=\"submit\"\n                    disabled={!validateTeamId(value) || value === `${id}` || isLoading}\n                />\n            </Modal>\n        </form>\n    )\n}\n\nexport default TeamModal\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Entry } from '../types'\nimport { fetchApi } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchEntry = createAsyncThunk('entry/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchEntryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const data = await fetchApi(`entry/${id}/`)\n\n    thunkAPI.dispatch(fetchEntrySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n\n            const recentTeams = JSON.parse(localStorage.getItem('recentTeams') || '[]') || []\n            const entry = action.payload as Entry\n\n            localStorage.setItem(\n                'recentTeams',\n                JSON.stringify(Array.from(new Set([`${entry.id} — ${entry.name}`, ...recentTeams])))\n            )\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport default entry.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { fetchApi } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchHistory = createAsyncThunk('history/fetch', async (entry: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchHistoryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const data = await fetchApi(`entry/${entry}/history/`)\n\n    thunkAPI.dispatch(fetchHistorySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport default history.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Standings } from '../types'\nimport { fetchApi, head, last } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst OVERALL_ID = 314\n\nconst fetchStanding = async (page: number): Promise<Standings> => {\n    return await fetchApi(`leagues-classic/${OVERALL_ID}/standings?page_standings=${page}`)\n}\n\nexport const fetchMilestones = createAsyncThunk('milestones/fetch', async (arg: undefined, thunkAPI) => {\n    thunkAPI.dispatch(fetchMilestonesStart())\n    thunkAPI.dispatch(startLoading())\n\n    const results = await Promise.all([\n        fetchStanding(1),\n        fetchStanding(20),\n        fetchStanding(200),\n        fetchStanding(2000),\n        fetchStanding(20000),\n    ])\n\n    const data = results.map((standings, index) =>\n        index === 0 ? head(standings.standings.results) : last(standings.standings.results)\n    )\n\n    thunkAPI.dispatch(fetchMilestonesSuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst milestones = createSlice({\n    name: 'milestones',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchMilestonesStart(state) {\n            state.data = undefined\n        },\n        fetchMilestonesSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchMilestonesStart, fetchMilestonesSuccess } = milestones.actions\n\nexport default milestones.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, LiveEvent } from '../types'\nimport { fetchApi, getPastEvents } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchStatData = createAsyncThunk(\n    'stats/fetch',\n    async (arg: { bootstrap: Bootstrap; entry: number }, thunkAPI) => {\n        thunkAPI.dispatch(fetchStatsStart())\n        thunkAPI.dispatch(startLoading())\n\n        const gameweeks = await Promise.all(\n            getPastEvents(arg.bootstrap.events).map(async event => await fetchGameweekInformation(event.id, arg.entry))\n        )\n\n        thunkAPI.dispatch(fetchStatsSuccess(gameweeks))\n        thunkAPI.dispatch(finishLoading())\n    }\n)\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchStatsStart(state) {\n            state.data = undefined\n        },\n        fetchStatsSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchStatsStart, fetchStatsSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    return await fetchApi(`entry/${entry}/event/${event}/picks/`)\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    return await fetchApi(`event/${event}/live/`)\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks; live: LiveEvent }> => {\n    const [pick, live] = await Promise.all([fetchPicks(event, entry), fetchEvent(event)])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport default stats.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { fetchApi } from '../utilities'\nimport { fetchEntry } from './entry'\nimport { fetchHistory } from './history'\nimport { finishLoading, startLoading } from './loading'\nimport { fetchMilestones } from './milestones'\nimport { fetchStatData } from './stats'\n\nexport const fetchBootstrap = createAsyncThunk('bootstrap/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchBootstrapStart())\n    thunkAPI.dispatch(startLoading())\n\n    const data = await fetchApi('bootstrap-static/')\n\n    await Promise.all([\n        thunkAPI.dispatch(fetchStatData({ bootstrap: data, entry: id })),\n        thunkAPI.dispatch(fetchHistory(id)),\n        thunkAPI.dispatch(fetchEntry(id)),\n        thunkAPI.dispatch(fetchMilestones()),\n    ])\n\n    thunkAPI.dispatch(finishLoading())\n    thunkAPI.dispatch(fetchBootstrapSuccess(data))\n})\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n        latestFetch: null,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            localStorage.setItem('latestFetch', `${Date.now()}`)\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport default bootstrap.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetchBootstrap } from './bootstrap'\n\nexport type SettingsState = {\n    id: number | undefined\n    meanStrategy: 'average' | 'median'\n    theme: 'light' | 'dark'\n    hiddenSections: string[]\n}\n\nexport const fetchDataWithId = createAsyncThunk('settings/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(setId(id))\n    thunkAPI.dispatch(fetchBootstrap(id))\n})\n\nconst initialState: SettingsState = {\n    id: undefined,\n    meanStrategy: 'average',\n    theme: 'light',\n    hiddenSections: [],\n}\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n        },\n        setTheme(state, action) {\n            state.theme = action.payload\n        },\n        addHiddenSection(state, action) {\n            state.hiddenSections.push(action.payload)\n        },\n        removeHiddenSection(state, action) {\n            state.hiddenSections = state.hiddenSections.filter(section => section !== action.payload)\n        },\n    },\n})\n\nexport const { setId, setMeanStrategy, setTheme, addHiddenSection, removeHiddenSection } = settings.actions\n\nexport default settings.reducer\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: (number | null)[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: (number | null)[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue\n","import React, { useContext } from 'react'\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { useSelector } from 'react-redux'\nimport { head, last, round, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { RootState } from '../../reducers'\nimport './HistoryWidget.scss'\n\nconst TITLE = 'Historical Data'\n\nconst HistoryWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    let rankData = history.past.map(season => ({\n        name: season.season_name,\n        value: season.rank,\n    }))\n\n    const max = (head(sort([...rankData], el => el.value))?.value || 0) * 1.05\n\n    rankData = [...rankData].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title={TITLE} cssClasses=\"history-widget\">\n            {rankData.length > 1 && (\n                <ResponsiveContainer height={100} width=\"100%\">\n                    <AreaChart data={rankData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <Area\n                            type=\"monotone\"\n                            dataKey=\"value\"\n                            stroke=\"#177B47\"\n                            fill={theme === 'dark' ? '#3a4556' : '#fff'}\n                            fillOpacity=\"1\"\n                        />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                            hide={true}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" hide={true} />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            )}\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestRankedSeason.rank)}</b> ({bestRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstRankedSeason.rank)}</b> ({worstRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(bestPointSeason.total_points)}</b> ({bestPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(worstPointSeason.total_points)}</b> ({worstPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <b>\n                        {thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map(season => season.rank)), 0)))}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <b>\n                        {thousandsSeparator(\n                            Number(round(meanValue(pastSeasonsByPoints.map(season => season.total_points)), 0))\n                        )}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <b>{top1k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <b>{top10k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <b>{top100k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <b>{top1m}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">{props.points}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer\n","import React, { useContext } from 'react'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst TITLE = 'Team of the Season'\n\nconst TotsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data || !data.stats.tots.xi.length) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE} cssClasses=\"tots-widget\">\n            <div className=\"tots\">\n                {[...Array(4)].map((el, index) => (\n                    <React.Fragment key={index}>\n                        {data && (\n                            <div className=\"tots__row\">\n                                {data.stats.tots.xi\n                                    .filter(el => el.element.element_type === index + 1)\n                                    .map(player => (\n                                        <TotsPlayer\n                                            key={player.element.id}\n                                            id={player.element.id}\n                                            points={player.aggregates.totals.points}\n                                        />\n                                    ))}\n                            </div>\n                        )}\n                    </React.Fragment>\n                ))}\n                <div className=\"tots__row tots__row--bench\">\n                    {data.stats.tots.bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={player.aggregates.totals.points}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget\n","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    ppg: 'Points per Game',\n    ppp: 'Points per Player',\n    ppw: 'Points per Week',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp' | 'ppw'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>\n            {props.metric}\n        </abbr>\n    )\n}\n\nexport default Metric\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    extended?: boolean\n    reversed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div\n            className={classNames('player', {\n                'player--condensed': !props.extended,\n                'player--reversed': props.reversed,\n            })}\n        >\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>\n                        {props.suffix && !props.extended ? <b>{player?.web_name}</b> : player?.web_name}\n                        {typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}\n                    </span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>\n                        {team?.short_name}\n                    </span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink\n","import React, { useContext } from 'react'\nimport { StatData } from '../../types'\nimport {\n    getAllPlayers,\n    getTopStatAggregate,\n    thousandsSeparator,\n    round,\n    sort,\n    head,\n    getPointsLabel,\n} from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Player Stats'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            ({getPointsLabel(week.rawPoints || 0)}, <SiteLink event={week.event.id} />)\n                        </>\n                    )}\n                    reversed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    if (!allPlayers.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const reds = getTopStatAggregate(allPlayers, 'redCards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellowCards')\n    const goals = getTopStatAggregate(allPlayers, 'goals')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'cleanSheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goalsConceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'ownGoals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'timesInDreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(allPlayers, el => el.aggregates.totals.captaincies))\n\n    const topReturner = head(\n        sort(\n            allPlayers.map(player => ({\n                ...player,\n                data: sort([...player.data], el => el.rawPoints || 0),\n            })),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topBenchGWReturner = head(\n        sort(\n            allPlayers\n                .map(player => ({\n                    ...player,\n                    data: sort(\n                        player.data.filter(data => data.multiplier === 0),\n                        el => el.rawPoints || 0\n                    ),\n                }))\n                .filter(player => player.data.length),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topSeasonReturner = head(sort(allPlayers, el => el.aggregates.totals.points))\n    const topBenchReturner = head(sort(allPlayers, el => el.aggregates.totals.benchPoints))\n\n    const weeks = data.history.current.length\n\n    const idealCaptain = head(\n        sort(\n            Object.entries(\n                Array.from(Array(weeks).keys())\n                    .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n                    .reduce(\n                        (acc, curr) =>\n                            curr\n                                ? {\n                                      ...acc,\n                                      [curr.element.id]: (acc[curr.element.id] ? acc[curr.element.id] : 0) + 1,\n                                  }\n                                : acc,\n                        {} as Record<number, number>\n                    )\n            ),\n            el => el[1]\n        )\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            ({getPointsLabel(week.points || 0)}, <SiteLink event={week.event.id} />)\n                                        </>\n                                    )\n                                }}\n                                reversed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        {topSeasonReturner.aggregates.totals.starts > 0 && (\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topSeasonReturner.aggregates.totals.points)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topSeasonReturner.data\n                                                    .filter(data => (data.multiplier || 0) > 0)\n                                                    .map(data => data.points)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        {topBenchReturner.aggregates.totals.benched > 0 && (\n                            <Player\n                                id={topBenchReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topBenchReturner.aggregates.totals.benchPoints)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topBenchReturner.data\n                                                    .filter(data => data.multiplier === 0)\n                                                    .map(data => data.rawPoints)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {goals && goals.aggregates.totals.goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.element.id} suffix={`${goals.aggregates.totals.goals}`} reversed />\n                    </li>\n                )}\n                {assists && assists.aggregates.totals.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.element.id} suffix={`${assists.aggregates.totals.assists}`} reversed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.aggregates.totals.ownGoals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.element.id} suffix={`${ownGoals.aggregates.totals.ownGoals}`} reversed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.aggregates.totals.goalsConceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player\n                            id={goalsConceded.element.id}\n                            suffix={`${goalsConceded.aggregates.totals.goalsConceded}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.aggregates.totals.cleanSheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player\n                            id={cleanSheets.element.id}\n                            suffix={`${cleanSheets.aggregates.totals.cleanSheets}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {saves && saves.aggregates.totals.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.element.id} suffix={`${saves.aggregates.totals.saves}`} reversed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.aggregates.totals.penaltiesMissed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player\n                            id={penaltiesMissed.element.id}\n                            suffix={`${penaltiesMissed.aggregates.totals.penaltiesMissed}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.aggregates.totals.penaltiesSaved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player\n                            id={penaltiesSaved.element.id}\n                            suffix={`${penaltiesSaved.aggregates.totals.penaltiesSaved}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {minutes && minutes.aggregates.totals.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player\n                            id={minutes.element.id}\n                            suffix={`${thousandsSeparator(minutes.aggregates.totals.minutes as number)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {reds && reds.aggregates.totals.redCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.element.id} suffix={`${reds.aggregates.totals.redCards}`} reversed />\n                    </li>\n                )}\n                {yellows && yellows.aggregates.totals.yellowCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.element.id} suffix={`${yellows.aggregates.totals.yellowCards}`} reversed />\n                    </li>\n                )}\n                {bonus && bonus.aggregates.totals.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.element.id} suffix={`${bonus.aggregates.totals.bonus}`} reversed />\n                    </li>\n                )}\n                {bps && bps.aggregates.totals.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player\n                            id={bps.element.id}\n                            suffix={`${thousandsSeparator(bps.aggregates.totals.bps)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.aggregates.totals.timesInDreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player\n                            id={inDreamteam.element.id}\n                            suffix={`${inDreamteam.aggregates.totals.timesInDreamteam}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.aggregates.totals.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player\n                            id={mostCaptaincies.element.id}\n                            suffix={`${mostCaptaincies.aggregates.totals.captaincies}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} reversed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype FormationInformation = {\n    count: number\n    points: (number | null)[]\n}\n\nconst TITLE = 'Formations'\n\nexport const formatFormation = (formation: string) =>\n    sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const weeks = history.current.length\n\n    const formations = Object.values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map(\n                (el, index) => selections.map(player => (player[index] || 0) > 0).filter(val => !!val).length\n            )\n        })\n        .slice(1)\n\n    const formationData = Array.from(Array(weeks).keys())\n        .map((el, index) => formations.map(entries => entries[index]).join('-'))\n        .reduce(\n            (acc, formation, index) => ({\n                ...acc,\n                [formation]: {\n                    count: (acc[formation] ? acc[formation].count : 0) + 1,\n                    points: [\n                        ...(acc[formation] ? acc[formation].points : ([] as number[])),\n                        history.current[index].points,\n                    ],\n                },\n            }),\n            {} as Record<string, FormationInformation>\n        )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(formationData).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(formationData), el => el[1].count).map(([formation, information]) => {\n                        return (\n                            <li className=\"widget__list__item\" key={formation}>\n                                <span>{formatFormation(formation)}</span>\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(information.count)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(information.points)))},{' '}\n                                        {round(meanValue(information.points))} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default FormationWidget\n","import React, { useContext } from 'react'\nimport {\n    thousandsSeparator,\n    sumNumbers,\n    round,\n    sort,\n    getPointsLabel,\n    getGWCountLabel,\n    pluralise,\n} from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Captains'\n\nconst CaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const captains = sort(\n        Object.values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    const teams = captains.reduce((acc, captain) => {\n        acc.add(captain.player.element.team)\n        return acc\n    }, new Set())\n\n    return (\n        <Widget title={TITLE}>\n            {captains.length > 0 && (\n                <>\n                    <div className=\"widget__detail\">\n                        Selected a total of <b>{pluralise(captains.length, 'captain', 'captains')}</b> accross{' '}\n                        <b>{pluralise(teams.size, 'team', 'teams')}</b>.\n                    </div>\n                    <ul className=\"widget__list\">\n                        {captains.map(captain => {\n                            const points = captain.data.map(data => data.points)\n\n                            return (\n                                <li className=\"widget__list__item\" key={captain.player.element.id}>\n                                    <Player id={captain.player.element.id} />\n                                    <div>\n                                        <div>\n                                            <b>{getGWCountLabel(captain.data.length)}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(thousandsSeparator(sumNumbers(points)))},{' '}\n                                            {round(meanValue(points))} <Metric metric=\"ppg\" />\n                                        </div>\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainWidget\n","import React from 'react'\nimport classNames from 'classnames'\nimport { getPointsLabel, round, thousandsSeparator } from '../../utilities'\nimport './ChangeBadge.scss'\n\ntype Props = {\n    value: number\n    renderer?: (input: number) => string\n}\n\nconst ChangeBadge: React.FC<Props> = (props: Props) => {\n    return (\n        <div\n            className={classNames('change-badge', {\n                'change-badge--negative': props.value < 0,\n                'change-badge--neutral': props.value === 0,\n            })}\n        >\n            {props.value > 0 ? '+' : props.value < 0 ? '-' : '='}{' '}\n            {props.renderer\n                ? props.renderer(props.value)\n                : getPointsLabel(thousandsSeparator(round(Math.abs(props.value))))}\n        </div>\n    )\n}\n\nexport default ChangeBadge\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst TITLE = 'Gameweeks'\n\nconst GameweekWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const differences = history.current.map(\n        week => week.points - (bootstrap.events.find(el => el.id === week.event)?.average_entry_score || 0)\n    )\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <ChangeBadge value={meanValue(differences)} />\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <b>{differences.filter(diff => diff >= 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <b>{differences.filter(diff => diff < 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <b>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</b>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(bestGW.points)}</b> (\n                            <SiteLink event={bestGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(worstGW.points)}</b> (\n                            <SiteLink event={worstGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestGWRank.rank)}</b> (\n                            <SiteLink event={bestGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstGWRank.rank)}</b> (\n                            <SiteLink event={worstGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, reduce, getPointsLabel, pluralise } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Positions'\n\nconst PositionsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const positions: Record<string, number> = Object.entries(stats).reduce(\n        (acc, [elementType, elements]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }),\n        {}\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(positions).length > 0 && (\n                <ul className=\"widget__list\">\n                    <li className=\"widget__list__item\">\n                        <span>Total</span>\n                        <b>\n                            {pluralise(\n                                reduce(Object.values(positions), el => el),\n                                'Player',\n                                'Players'\n                            )}\n                        </b>\n                    </li>\n                    {Object.entries(positions).map(([elementType, elements]) => {\n                        const totalPoints = stats[Number(elementType)].map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={elementType}>\n                                <span>\n                                    {bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}\n                                </span>\n                                <div>\n                                    <div>\n                                        <b>{pluralise(elements, 'Player', 'Players')}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(totalPoints)))},{' '}\n                                        {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default PositionsWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport {\n    getAllPlayers,\n    head,\n    thousandsSeparator,\n    sumNumbers,\n    reduce,\n    round,\n    getPointsLabel,\n    last,\n    sort,\n} from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { StatData } from '../../types'\nimport { StatAggregateTotals } from '../../types'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Season'\n\nconst getAggregateValues = (players: StatData[], key: keyof StatAggregateTotals): number =>\n    sumNumbers(players.map(player => player.aggregates.totals[key]))\n\nconst SeasonWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!data || !entry || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const reds = getAggregateValues(allPlayers, 'redCards')\n    const yellows = getAggregateValues(allPlayers, 'yellowCards')\n    const goals = getAggregateValues(allPlayers, 'goals')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'cleanSheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goalsConceded')\n    const ownGoals = getAggregateValues(allPlayers, 'ownGoals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getAggregateValues(allPlayers, 'timesInDreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const largestHit = head(sort(history.current, el => el.event_transfers_cost))\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => [...player.data].findIndex(data => data.multiplier === 3) !== -1)\n        ?.data.find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(data.stats.chips).find(([gw, chip]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(\n              allPlayers\n                  .filter(player => ([...player.data][Number(bbWeek) - 1]?.position || 0) > 11)\n                  .map(player => [...player.data][Number(bbWeek) - 1]?.points || 0)\n          )\n        : null\n\n    const doubleDigitHauls = reduce(\n        allPlayers.map(player => [...player.data].filter(data => (data.points || 0) > 9).length),\n        el => el\n    )\n\n    const totalPlays = reduce(\n        allPlayers.map(player => player.data.filter(data => data.multiplier !== null && data.multiplier > 0).length),\n        el => el\n    )\n\n    const totalPoints =\n        (last(history.current)?.total_points || 0) -\n        (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1) - 1)?.total_points || 0)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>\n                        <b>{totalHits}</b> ({getPointsLabel(totalHits * -4)},{' '}\n                        {entry.summary_overall_points > 0 ? round(((totalHits * 4) / totalPoints) * 100) : 0}\n                        %)\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Largest Hit</span>\n                    <b>{getPointsLabel(largestHit?.event_transfers_cost || 0)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalPoints))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalBenched))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>\n                        <b>{doubleDigitHauls}</b>\n                        {totalPlays > 0 && ` (${round((doubleDigitHauls / totalPlays) * 100)}%)`}\n                    </span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel((tc.points || 0) / 3)}</b> (\n                            <SiteLink event={tc.event.id} />)\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel(bbPoints)}</b> (\n                            <SiteLink event={Number(bbWeek)} />)\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <b>{goals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <b>{assists}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <b>{ownGoals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <b>{goalsConceded}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <b>{cleanSheets}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <b>{saves}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <b>{penaltiesMissed}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <b>{penaltiesSaved}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <b>{thousandsSeparator(minutes)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <b>{reds}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <b>{yellows}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <b>{thousandsSeparator(bonus)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <b>{thousandsSeparator(bps)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <b>{inDreamteam}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget\n","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport './TeamsWidget.scss'\n\nconst TITLE = 'Teams'\n\nconst TeamsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [...acc, ...curr.map(el => el.element.team)], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"teams-widget\">\n            {teams.length > 0 && (\n                <ul className=\"widget__list\">\n                    {teams.map(team => {\n                        const players = allPlayers.filter(player => player.element.team === team.id)\n                        const points = players.map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"teams-widget__item\" key={team.id}>\n                                <div className=\"teams-widget__header\">\n                                    <Team team={team} />\n                                    <div>\n                                        <div>\n                                            <b>{counts[team.id] || 0}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(sumNumbers(points))},{' '}\n                                            {players.length > 0 ? round(meanValue(points)) : 0} <Metric metric=\"ppp\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    {Object.entries(stats).map(([position, players]) => {\n                                        const positionPlayers = players.filter(\n                                            player => player.element.team === team.id\n                                        )\n\n                                        if (!positionPlayers.length) {\n                                            return null\n                                        }\n\n                                        return (\n                                            <div\n                                                className=\"teams-widget__position\"\n                                                data-position={\n                                                    bootstrap.element_types.find(el => el.id === Number(position))\n                                                        ?.plural_name_short\n                                                }\n                                                key={position}\n                                            >\n                                                {sort(\n                                                    positionPlayers.filter(player => player.element.team === team.id),\n                                                    el => el.aggregates.totals.points\n                                                ).map(player => (\n                                                    <div key={player.element.id}>\n                                                        {player.element.web_name} (\n                                                        {getPointsLabel(player.aggregates.totals.points)})\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default TeamsWidget\n","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#aaa\"\n            className=\"swap-icon\"\n        >\n            <path d=\"M21 12l-18 12v-24z\" />\n        </svg>\n    )\n}\n\nexport default SwapIcon\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport './CaptainOpportunityWidget.scss'\n\nconst TITLE = 'Missed Captaincies'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n\n    const improvements = history.current\n        .map((el, index) => ({\n            event: el.event,\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .filter(\n            (improvement, index) =>\n                improvement.top &&\n                improvement.captain &&\n                improvement.captain.data[index].rawPoints !== improvement.top.data[index].rawPoints\n        )\n\n    const missedPoints = improvements.reduce((acc, improvement) => {\n        const captainData = improvement.captain?.data.find(el => el.event.id === improvement.event)\n        const topData = improvement.top?.data.find(el => el.event.id === improvement.event)\n\n        return acc + ((topData?.rawPoints || 0) - (captainData?.rawPoints || 0))\n    }, 0)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"captain-opportunity-widget\">\n            {improvements.length > 0 && (\n                <>\n                    <div className=\"widget__detail\">\n                        Missed a total of <b>{getPointsLabel(missedPoints)}</b> accross{' '}\n                        <b>{getGWCountLabel(improvements.length, true)}</b>.\n                    </div>\n                    <ul className=\"widget__list\">\n                        {improvements.map(improvement => {\n                            const captainData = improvement.captain?.data.find(el => el.event.id === improvement.event)\n                            const topData = improvement.top?.data.find(el => el.event.id === improvement.event)\n\n                            return (\n                                <li className=\"widget__list__item\" key={captainData?.event.id}>\n                                    <div className=\"captain-opportunity-widget__group\">\n                                        <Player id={improvement.captain?.element.id || 0} />\n                                        <SwapIcon />\n                                        <Player id={improvement.top?.element.id || 0} />\n                                    </div>\n                                    <div className=\"captain-opportunity-widget__swap-info\">\n                                        <b>{getPointsLabel((captainData?.rawPoints || 0) * 2)}</b>\n                                        <SwapIcon />\n                                        <b>{getPointsLabel((topData?.rawPoints || 0) * 2)} </b>\n                                        <div>\n                                            <SiteLink event={captainData?.event.id} />\n                                        </div>\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Widget } from '../Widget'\nimport { ModalInput } from '../ModalInput'\nimport { Button } from '../Button'\nimport './WidgetWithModal.scss'\n\ntype Props<T> = {\n    data: T[]\n    title: string\n    max: number\n    matchesFilter: (item: T, query: string) => boolean\n    renderItem: (list: T) => JSX.Element | null\n    getItemKey: (item: T) => string | undefined\n}\n\nconst renderList = <T,>(\n    list: T[],\n    renderItem: (item: T) => JSX.Element | null,\n    getItemKey: (item: T) => string | undefined\n): JSX.Element => {\n    return (\n        <ul className=\"widget__list\">\n            {list.map(item => {\n                const render = renderItem(item)\n\n                if (!render) {\n                    return null\n                }\n\n                return (\n                    <li className=\"widget__list__item\" key={getItemKey(item)}>\n                        {render}\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nconst WidgetWithModal = <T,>(props: Props<T>): React.ReactElement<Props<T>> | null => {\n    const [value, setValue] = useState<string>('')\n    const [showExtended, setShowExtended] = useState<boolean>(false)\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    const close = useCallback(() => {\n        setShowExtended(false)\n        setValue('')\n    }, [setShowExtended, setValue])\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const topData = props.data.slice(0, props.max)\n    const filteredData = value ? props.data.filter(item => props.matchesFilter(item, value)) : props.data\n\n    return (\n        <>\n            <Widget title={props.title} cssClasses=\"widget-with-modal\">\n                {topData.length > 0 && (\n                    <>\n                        {renderList(topData, props.renderItem, props.getItemKey)}\n                        {props.data.length > props.max && (\n                            <Button label=\"Show all\" onClick={() => setShowExtended(true)} />\n                        )}\n                    </>\n                )}\n            </Widget>\n            {showExtended && (\n                <div className=\"modal modal--list-widget\">\n                    <div className=\"modal__backdrop\" onClick={() => close()}></div>\n                    <Widget title={props.title} onClose={() => close()}>\n                        <ModalInput\n                            label=\"Name\"\n                            placeholder=\"Filter by name\"\n                            id=\"query\"\n                            value={value}\n                            onChange={value => setValue(value)}\n                            innerRef={callbackRef}\n                        />\n                        <div className=\"widget__scroller\">\n                            {filteredData.length > 0 ? (\n                                renderList(filteredData, props.renderItem, props.getItemKey)\n                            ) : (\n                                <div className=\"widget__empty\">No data available.</div>\n                            )}\n                        </div>\n                    </Widget>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default WidgetWithModal\n","import React from 'react'\nimport { Element, StatData } from '../../types'\nimport { normaliseDiacritics } from '../../utilities'\nimport { WidgetWithModal } from '../WidgetWithModal'\n\ntype PlayerLike = StatData | Element\n\ntype Props<T extends PlayerLike> = {\n    title: string\n    max: number\n    players: T[]\n    renderItem: (player: T) => JSX.Element | null\n    cssClasses?: string\n}\n\nconst isStatData = (element: PlayerLike): element is StatData => (element as StatData).element !== undefined\n\nconst isElement = (element: PlayerLike): element is Element => (element as Element).id !== undefined\n\nconst getItemKey = <T extends PlayerLike>(player: T): string | undefined => {\n    if (isStatData(player)) {\n        if (player.data.length > 1) {\n            return `${player.element.id}`\n        } else {\n            return `${player.element.id}-${player.data[0].event.id}`\n        }\n    } else if (isElement(player)) {\n        return `${player.id}`\n    }\n\n    return undefined\n}\n\nconst matchesFilter = <T extends PlayerLike>(item: T, query: string): boolean => {\n    return normaliseDiacritics(isStatData(item) ? item.element.web_name : isElement(item) ? item.web_name : '')\n        .toLowerCase()\n        .includes(normaliseDiacritics(query).toLowerCase())\n}\n\nconst BasePlayerWidget = <T extends PlayerLike>(props: Props<T>): React.ReactElement<Props<T>> | null => {\n    return (\n        <WidgetWithModal\n            title={props.title}\n            max={props.max}\n            data={props.players}\n            renderItem={props.renderItem}\n            getItemKey={getItemKey}\n            matchesFilter={matchesFilter}\n        />\n    )\n}\n\nexport default BasePlayerWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: 'selections' | 'starts' | 'benched'\n}\n\nconst SelectionWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(\n        getAllPlayers(stats).filter(el => el.aggregates.totals[props.metric] > 0),\n        el => el.aggregates.totals[props.metric]\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals[props.metric])}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default SelectionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, round } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 5\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = getAllPlayers(stats).map(element => {\n        const selections = element.aggregates.totals.selections\n        const starts = element.aggregates.totals.starts\n        const benched = element.aggregates.totals.benched\n\n        return {\n            ...element,\n            benched,\n            benchedPercentage: (benched / selections) * 100,\n            starts,\n            startsPercentage: (starts / selections) * 100,\n        }\n    })\n\n    const starters = [...elements]\n        .sort((a, b) => {\n            const percentageDiff = b.startsPercentage - a.startsPercentage\n            return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n        })\n        .filter(el => el.starts > 0)\n\n    const benchwarmers = [...elements]\n        .sort((a, b) => {\n            const percentageDiff = b.benchedPercentage - a.benchedPercentage\n            return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n        })\n        .filter(el => el.benched > 0)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={props.top ? starters : benchwarmers}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>\n                                {round(\n                                    ((props.top\n                                        ? element.aggregates.totals.starts\n                                        : element.aggregates.totals.benched) /\n                                        element.aggregates.totals.selections) *\n                                        100\n                                )}\n                                %\n                            </b>\n                        </div>\n                        <div className=\"muted\">\n                            {getGWCountLabel(\n                                props.top ? element.aggregates.totals.starts : element.aggregates.totals.benched\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DifferenceWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Overall Rank Evolution'\n\nconst OverallRankWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    let rankData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([...rankData], el => el.value))?.value || 0) * 1.05\n\n    rankData = [...rankData].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={200} width=\"100%\">\n                    <AreaChart data={rankData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <Area\n                            type=\"monotone\"\n                            dataKey=\"value\"\n                            stroke=\"#177B47\"\n                            fill={theme === 'dark' ? '#3a4556' : '#fff'}\n                            fillOpacity=\"1\"\n                        />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                            hide={true}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" hide={true} />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Gameweek Points'\n\nconst PointsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pointsData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={200} width=\"100%\">\n                    <AreaChart data={pointsData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"0.75\" />\n                        <YAxis interval=\"preserveStartEnd\" hide={true} />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" hide={true} />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default PointsWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Team Value Evolution'\n\nconst ValueWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const valueData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={200} width=\"100%\">\n                    <AreaChart data={valueData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <YAxis\n                            tickFormatter={value => `£${value / 10}`}\n                            domain={['auto', 'auto']}\n                            interval=\"preserveStartEnd\"\n                            hide={true}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" hide={true} />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [`£${Number(value) / 10}`, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getGWCountLabel, head, round, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Wrong Captains'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .reduce(\n            (acc, curr, index) =>\n                curr.captain && curr.top\n                    ? {\n                          ...acc,\n                          [curr.captain.element.id]:\n                              (acc[curr.captain.element.id] ? acc[curr.captain.element.id] : 0) +\n                              ((curr.captain.data[index].rawPoints || 0) < (curr.top.data[index].rawPoints || 0)\n                                  ? 1\n                                  : 0),\n                      }\n                    : acc,\n            {} as Record<number, number>\n        )\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.aggregates.totals.captaincies,\n        }\n    }, {} as Record<number, number>)\n\n    const totalMisses = Object.values(improvements).reduce((acc, curr) => acc + curr, 0)\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(improvements).length > 0 && (\n                <>\n                    <div className=\"widget__detail\">\n                        Selected the wrong captain in <b>{getGWCountLabel(totalMisses, true)}</b> (\n                        {round((totalMisses / weeks) * 100)}%).\n                    </div>\n                    <ul className=\"widget__list\">\n                        {sort(Object.entries(improvements), el => el[1]).map(([player, count]) => (\n                            <li className=\"widget__list__item\" key={player}>\n                                <Player id={Number(player)} />\n                                <div>\n                                    <div>\n                                        <b>\n                                            {count} / {getGWCountLabel(timesUsed[Number(player)])}\n                                        </b>\n                                    </div>\n                                    <div className=\"muted\">{round((count / timesUsed[Number(player)]) * 100, 1)}%</div>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, head, last, round, sort } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 5\nconst TITLE = 'Total Points Contribution by Player'\n\nconst ContributionWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    if (!entry || !data || !rawHistory) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const latestPoints = last(history.current)?.total_points || 0\n    const totalPoints =\n        history.current.length > 1\n            ? latestPoints -\n              (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1))?.total_points ||\n                  0)\n            : latestPoints\n\n    const contributions = sort(getAllPlayers(stats), el => el.aggregates.totals.points)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={contributions}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <div>\n                        <div>\n                            <b>{round((player.aggregates.totals.points / totalPoints) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(player.aggregates.totals.points)}</div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ContributionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 5\n\nconst getPointsShare = (player: StatData): number =>\n    100 - (player.aggregates.totals.rawPoints / player.element.total_points) * 100\n\nconst MissedPointsShareWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const elements = sort(\n        getAllPlayers(stats).filter(player => player.aggregates.totals.points > 0),\n        el => getPointsShare(el),\n        props.top ? 'desc' : 'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>{element.element.total_points > 0 && `${round(getPointsShare(element))}%`}</b>\n                        </div>\n                        <div className=\"muted\">\n                            {getPointsLabel(element.element.total_points - element.aggregates.totals.rawPoints)} in{' '}\n                            {getGWCountLabel(history.current.length - element.aggregates.totals.selections)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default MissedPointsShareWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, sort, thousandsSeparator } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 15\nconst TITLE = 'Other Players'\n\nconst NearMissesWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const totsIds = data.stats.tots.xi.concat(data.stats.tots.bench).map(player => player.element.id)\n    const players = sort(\n        getAllPlayers(data.stats.data).filter(player => !totsIds.includes(player.element.id)),\n        el => el.aggregates.totals.points\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={players}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <b>{getPointsLabel(thousandsSeparator(player.aggregates.totals.points))}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default NearMissesWidget\n","import React, { useContext } from 'react'\nimport { useMeanValue } from '../../hooks'\nimport { StatAggregateStreaks, Streak, Element } from '../../types'\nimport { getAllPlayers, getGWCountLabel, getPointsLabel, normaliseDiacritics, round } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\nimport { WidgetWithModal } from '../WidgetWithModal'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    title: string\n    metric: keyof StatAggregateStreaks\n    showDetailedStats?: boolean\n}\n\ntype PlayerStreak = Streak & {\n    player: Element\n}\n\nconst getItemKey = (streak: PlayerStreak) => `${streak.player.id}-${streak.start.id}`\n\nconst matchesFilter = (streak: PlayerStreak, query: string) =>\n    streak.player.web_name.toLowerCase().includes(normaliseDiacritics(query).toLowerCase())\n\nconst StreakWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const streaks = getAllPlayers(stats)\n        .reduce(\n            (acc, player) => [\n                ...acc,\n                ...(player.aggregates.streaks[props.metric] || [])?.map(streak => ({\n                    ...streak,\n                    player: player.element,\n                })),\n            ],\n            [] as PlayerStreak[]\n        )\n        .sort((a, b) => {\n            if (a.length !== b.length) {\n                return b.length - a.length\n            }\n\n            if (props.showDetailedStats && a.totalPoints !== b.totalPoints) {\n                return b.totalPoints - a.totalPoints\n            }\n\n            return a.player.web_name.localeCompare(b.player.web_name)\n        })\n\n    return (\n        <WidgetWithModal\n            title={props.title}\n            max={MAX_ITEMS}\n            data={streaks}\n            renderItem={streak => {\n                return (\n                    <>\n                        <Player id={streak.player.id} />\n                        <div>\n                            <div className=\"duration\">\n                                <SiteLink event={streak.start.id} />\n                                {streak.start.id !== streak.end.id && (\n                                    <>\n                                        {' '}\n                                        - <SiteLink event={streak.end.id} />\n                                    </>\n                                )}\n                            </div>\n                            <div className=\"muted\">\n                                {props.showDetailedStats ? (\n                                    <>\n                                        {getGWCountLabel(streak.length)}, {getPointsLabel(streak.totalPoints || 0)},{' '}\n                                        {round(meanValue(streak.points || []))} <Metric metric=\"ppg\" />\n                                    </>\n                                ) : (\n                                    <div className=\"muted\">{getGWCountLabel(streak.length)}</div>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n            getItemKey={getItemKey}\n            matchesFilter={matchesFilter}\n        />\n    )\n}\n\nexport default StreakWidget\n","import React, { ChangeEvent } from 'react'\nimport classNames from 'classnames'\nimport './Checkbox.scss'\n\ntype Props = {\n    label: string\n    checked: boolean\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n    reversed?: boolean\n}\n\nconst Checkbox: React.FC<Props> = (props: Props) => (\n    <div className={classNames('checkbox', { 'checkbox--reversed': props.reversed })}>\n        <label className=\"checkbox__label\">\n            <input type=\"checkbox\" className=\"checkbox__element\" checked={props.checked} onChange={props.onChange} />\n            <div className=\"checkbox__visual\"></div>\n            {props.label}\n        </label>\n    </div>\n)\n\nexport default Checkbox\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './SegmentedControl.scss'\n\ntype SegmentedOption = {\n    label: string\n    value: string\n}\n\ntype Props = {\n    label: string\n    options: SegmentedOption[]\n    selected: string\n    setSelected: (value: string) => void\n}\n\nconst SegmentedControl: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"segmented-control\">\n            <label>{props.label}</label>\n            {props.options.length > 0 && (\n                <div className=\"segmented-control__options\">\n                    {props.options.map(option => (\n                        <div\n                            className={classNames('segmented-control__option', {\n                                'segmented-control__option--selected': props.selected === option.value,\n                            })}\n                        >\n                            <Button label={option.label} onClick={() => props.setSelected(option.value)} />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SegmentedControl\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Checkbox } from '../Checkbox'\nimport { RootState } from '../../reducers'\nimport { setMeanStrategy, setTheme } from '../../reducers/settings'\nimport { SegmentedControl } from '../SegmentedControl'\nimport { Modal } from '../Modal'\nimport './SettingsModal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst meanOptions = [\n    { label: 'Average', value: 'average' },\n    { label: 'Median', value: 'median' },\n]\n\nconst SettingsModal: React.FC<Props> = (props: Props) => {\n    const settings = useSelector((state: RootState) => state.settings)\n    const [checked, setChecked] = useState<boolean>(settings.theme === 'dark')\n    const [strategy, setStrategy] = useState<string>(settings.meanStrategy)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                props.onClose?.()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [props])\n\n    useEffect(() => {\n        if ((checked && settings.theme === 'light') || (!checked && settings.theme === 'dark')) {\n            dispatch(setTheme(checked ? 'dark' : 'light'))\n        }\n    }, [checked, dispatch, settings.theme])\n\n    useEffect(() => {\n        if (strategy !== settings.meanStrategy) {\n            dispatch(setMeanStrategy(strategy))\n        }\n    }, [dispatch, settings.meanStrategy, strategy])\n\n    return (\n        <Modal title=\"Settings\" onClose={() => props.onClose?.()} cssClasses=\"modal--settings\">\n            <SegmentedControl\n                label=\"Display values as\"\n                options={meanOptions}\n                selected={strategy}\n                setSelected={value => setStrategy(value)}\n            />\n            <Checkbox label=\"Use dark mode\" checked={checked} onChange={e => setChecked(e.target.checked)} reversed />\n        </Modal>\n    )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Widget } from '../Widget'\nimport { RootState } from '../../reducers'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst TITLE = 'Milestones'\n\nconst MilestonesWidget: React.FC = () => {\n    const milestones = useSelector((state: RootState) => state.milestones.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!milestones || !entry) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>First Place</span>\n                    <ChangeBadge value={entry.summary_overall_points - milestones[0].total} />\n                </li>\n                {milestones.length >= 2 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 1K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[1].total} />\n                    </li>\n                )}\n                {milestones.length >= 3 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 10K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[2].total} />\n                    </li>\n                )}\n                {milestones.length >= 4 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 100K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[3].total} />\n                    </li>\n                )}\n                {milestones.length === 5 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 1M</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[4].total} />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default MilestonesWidget\n","import classNames from 'classnames'\nimport React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ValueType } from 'react-select'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { getChipAbbreviation, round, sort } from '../../utilities'\nimport { FilteredDataContext, OptionType } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport './PlayerOverview.scss'\n\ntype Props = {\n    sort: ValueType<OptionType>\n}\n\nconst sortings: { [key: string]: (statData: StatData) => number } = {\n    points: el => el.aggregates.totals.points,\n    selection: el => el.aggregates.totals.selections,\n    start: el => el.aggregates.totals.starts,\n    bench: el => el.aggregates.totals.benched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    },\n}\n\nconst renderPlayerList = (\n    stats: Stats,\n    bootstrap: Bootstrap,\n    sorting: OptionType,\n    meanValue: (series: (number | null)[]) => number\n): JSX.Element[] =>\n    Object.entries(stats).map(([elementType, statData]) => (\n        <div key={elementType}>\n            <li className=\"player-overview__category\">\n                <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                <span>{statData.length}</span>\n            </li>\n            {sort(\n                statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length),\n                el => sortings[sorting.value](el)\n            ).map(element => (\n                <li key={element.element.id} className=\"player-overview__item\">\n                    <div className=\"player-overview__player\">\n                        <Player id={element.element.id} extended />\n                    </div>\n                    <div className=\"player-overview__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('player-overview__stat', {\n                                    'player-overview__stat--benched': item.multiplier === 0,\n                                    'player-overview__stat--captain': item.multiplier === 2,\n                                    'player-overview__stat--triple': item.multiplier === 3,\n                                    'player-overview__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"player-overview__totals\">\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.selections}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.selections / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.starts}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.starts / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.benched}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.benched / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.points}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {round(\n                                        meanValue(\n                                            element.data\n                                                .filter(data => (data.multiplier || 0) > 0)\n                                                .map(data => data.points)\n                                        )\n                                    )}{' '}\n                                    <Metric metric=\"ppg\" />)\n                                </span>\n                            </div>\n                        </span>\n                    </div>\n                </li>\n            ))}\n        </div>\n    ))\n\nexport const PlayerOverview: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    return (\n        <div\n            className={classNames('player-overview', {\n                'player-overview--cloaked': !id,\n            })}\n        >\n            <div className=\"player-overview__container\">\n                {data && bootstrap && Object.keys(data.stats.data).length > 0 ? (\n                    <>\n                        <header className=\"player-overview__header\">\n                            <span className=\"player-overview__heading\">Player</span>\n                            {data?.history.current?.map(event => (\n                                <span className=\"player-overview__stat\" key={event.event}>\n                                    GW {event.event}\n                                    {data?.stats.chips[event.event] && (\n                                        <div>{getChipAbbreviation(data.stats.chips[event.event])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"player-overview__totals\">\n                                <span className=\"player-overview__stat\">Selected</span>\n                                <span className=\"player-overview__stat\">Starting</span>\n                                <span className=\"player-overview__stat\">Benched</span>\n                                <span className=\"player-overview__stat\">Points</span>\n                            </div>\n                        </header>\n                        <ul className=\"player-overview__list\">\n                            {renderPlayerList(data.stats.data, bootstrap, props.sort as OptionType, meanValue)}\n                        </ul>\n                    </>\n                ) : (\n                    <div className=\"player-overview__empty\">No data available.</div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getPointsLabel, last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Form Breakdown'\nconst MAX_ITEMS = 15\n\nconst FormWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(el.form)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{getPointsLabel(element.form)}</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default FormWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst GAINS_TITLE = 'Price Gains'\nconst DROPS_TITLE = 'Price Drops'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    type: 'gains' | 'drops'\n}\n\nconst PriceChangeWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.type === 'gains' ? GAINS_TITLE : DROPS_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(\n            el =>\n                picks?.includes(el.id) &&\n                ((props.type === 'gains' && el.cost_change_event > 0) ||\n                    (props.type === 'drops' && el.cost_change_event_fall > 0))\n        ),\n        el => Number(props.type === 'gains' ? el.cost_change_event : el.cost_change_event_fall)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.type === 'gains' ? GAINS_TITLE : DROPS_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <ChangeBadge\n                            value={\n                                props.type === 'gains' ? element.cost_change_event : element.cost_change_event_fall * -1\n                            }\n                            renderer={input => `£ ${Math.abs(input) / 10}`}\n                        />\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default PriceChangeWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Players in Doubt'\nconst MAX_ITEMS = 5\n\nconst InjuryWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(\n            el =>\n                picks?.includes(el.id) &&\n                el.chance_of_playing_next_round !== null &&\n                el.chance_of_playing_next_round !== 100\n        ),\n        el => Number(el.chance_of_playing_next_round),\n        'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{element.chance_of_playing_next_round} %</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default InjuryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getPointsLabel, last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { ChangeBadge } from '../ChangeBadge'\nimport './ExpectedPointsWidget.scss'\n\nconst CURRENT_TITLE = 'Expected Points – This GW'\nconst NEXT_TITLE = 'Expected Points – Next GW'\n\nconst MAX_ITEMS = 15\n\ntype Props = {\n    gw: 'current' | 'next'\n}\n\nconst ExpectedPointsWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.gw === 'current' ? CURRENT_TITLE : NEXT_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el =>\n            Number(\n                props.gw === 'next'\n                    ? el.ep_next\n                    : el.event_points !== null\n                    ? el.event_points - Number(el.ep_this)\n                    : el.ep_this\n            )\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.gw === 'current' ? CURRENT_TITLE : NEXT_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div className=\"expected-points-widget__data\">\n                        <b>{getPointsLabel(props.gw === 'current' ? element.ep_this : element.ep_next)}</b>\n                        {props.gw === 'current' && element.event_points !== null && (\n                            <>\n                                <ChangeBadge value={element.event_points - Number(element.ep_this)} />\n                            </>\n                        )}\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ExpectedPointsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Popularity Breakdown'\nconst MAX_ITEMS = 5\n\nconst PopularityWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(el.selected_by_percent)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{element.selected_by_percent} %</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default PopularityWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { thousandsSeparator } from '../../utilities/numbers'\n\nconst IN_TITLE = 'Transfers IN'\nconst OUT_TITLE = 'Transfers OUT'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    type: 'in' | 'out'\n}\n\nconst TransfersWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.type === 'in' ? IN_TITLE : OUT_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(props.type === 'in' ? el.transfers_in_event : el.transfers_out_event)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.type === 'in' ? IN_TITLE : OUT_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <b>\n                        {thousandsSeparator(\n                            props.type === 'in' ? element.transfers_in_event : element.transfers_out_event\n                        )}\n                    </b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default TransfersWidget\n","import React from 'react'\nimport classNames from 'classnames'\nimport { StatAggregateTotals, StatData } from '../../types'\nimport './StatComparison.scss'\n\ninterface Props {\n    left: StatData\n    right: StatData\n    label: string\n    columnClass?: string\n    stat: keyof StatAggregateTotals\n    compare: (left: number, right: number) => boolean\n}\n\nconst StatComparison: React.FC<Props> = (props: Props) => {\n    const leftValue = props.left.aggregates.totals[props.stat]\n    const rightValue = props.right.aggregates.totals[props.stat]\n\n    return (\n        <li className=\"stat-comparison\">\n            <div className={classNames('stat-comparison__label', props.columnClass)}>{props.label}</div>\n            <div\n                className={classNames('stat-comparison__left', props.columnClass, {\n                    'stat-comparison__left--highlight': props.compare(leftValue, rightValue),\n                })}\n            >\n                <span>{leftValue}</span>\n            </div>\n            <div\n                className={classNames('stat-comparison__right', props.columnClass, {\n                    'stat-comparison__right--highlight': props.compare(rightValue, leftValue),\n                })}\n            >\n                <span>{rightValue}</span>\n            </div>\n        </li>\n    )\n}\n\nexport default StatComparison\n","import React, { useContext, useState } from 'react'\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport { useSelector } from 'react-redux'\nimport { getPointsLabel, getAllPlayers } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { FilteredDataContext, OptionType } from '../Dashboard/Dashboard'\nimport { RootState } from '../../reducers'\nimport { StatComparison } from '../StatComparison'\nimport './PlayerComparisonWidget.scss'\n\nconst TITLE = 'Player Comparison'\n\nconst PlayerComparisonWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const [leftSide, setLeftSide] = useState<ValueType<OptionType>>()\n    const [rightSide, setRightSide] = useState<ValueType<OptionType>>()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const playerOptions = allPlayers\n        .sort((a, b) => a.element.web_name.localeCompare(b.element.web_name))\n        .map(player => ({\n            value: `${player.element.id}`,\n            label: `${player.element.web_name} (${\n                bootstrap.element_types.find(type => type.id === player.element.element_type)?.singular_name_short\n            }, ${bootstrap.teams.find(team => team.id === player.element.team)?.short_name})`,\n        }))\n\n    const leftSideData = leftSide\n        ? allPlayers.find(el => el.element.id === Number((leftSide as OptionType).value))\n        : null\n\n    const rightSideData = rightSide\n        ? allPlayers.find(el => el.element.id === Number((rightSide as OptionType).value))\n        : null\n\n    const leftKey = leftSideData?.element.web_name || 'valueLeft'\n    const rightKey = rightSideData?.element.web_name || 'valueRight'\n\n    const pointsData = data.history.current.map(gw => {\n        return {\n            name: `GW ${gw.event}`,\n            [leftKey]: leftSideData?.data.find(d => d.event.id === gw.event)?.rawPoints || 0,\n            [rightKey]: rightSideData?.data.find(d => d.event.id === gw.event)?.rawPoints || 0,\n        }\n    })\n\n    return (\n        <Widget title={TITLE} cssClasses=\"player-comparison-widget\">\n            <div className=\"player-comparison-widget__selection\">\n                <div className=\"player-comparison-widget__column\" />\n                <div className=\"player-comparison-widget__column\">\n                    <Select\n                        options={playerOptions}\n                        className=\"player-comparison-widget__select\"\n                        value={leftSide}\n                        onChange={option => setLeftSide(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                </div>\n                <div className=\"player-comparison-widget__column\">\n                    <Select\n                        options={playerOptions}\n                        className=\"player-comparison-widget__select\"\n                        value={rightSide}\n                        onChange={option => setRightSide(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                </div>\n            </div>\n            {leftSideData && rightSideData && (\n                <>\n                    <ul className=\"comparison-list\">\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Goals Scored\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"goals\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Assists\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"assists\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Yellow Cards\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"yellowCards\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Red Cards\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"redCards\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Clean Sheets\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"cleanSheets\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Goals Conceded\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"goalsConceded\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Own Goals\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"ownGoals\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Saves\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"saves\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Minutes\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"minutes\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Penalties Missed\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"penaltiesMissed\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Penalties Saved\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"penaltiesSaved\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Times in Dreamteam\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"timesInDreamteam\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"BPS\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"bps\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Bonus Points\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"bonus\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Captaincies\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"captaincies\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Points\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"points\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Points on Bench\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"benchPoints\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Selections\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"selections\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Starts\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"starts\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Times on Bench\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"benched\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                    </ul>\n                    {pointsData && (\n                        <div className=\"player-comparison-widget__chart\">\n                            <ResponsiveContainer height={200} width=\"100%\">\n                                <AreaChart data={pointsData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey={leftKey}\n                                        stroke=\"#177B47\"\n                                        fill=\"#177B47\"\n                                        fillOpacity=\"0.75\"\n                                    />\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey={rightKey}\n                                        stroke=\"#00FF87\"\n                                        fill=\"#00FF87\"\n                                        fillOpacity=\"0.75\"\n                                    />\n                                    <YAxis\n                                        tickFormatter={value => getPointsLabel(value)}\n                                        domain={['auto', 'auto']}\n                                        interval=\"preserveStartEnd\"\n                                        hide={true}\n                                    />\n                                    <XAxis\n                                        dataKey=\"name\"\n                                        angle={-90}\n                                        textAnchor=\"end\"\n                                        interval=\"preserveStartEnd\"\n                                        hide={true}\n                                    />\n                                    <Tooltip\n                                        isAnimationActive={false}\n                                        formatter={(value, name) => [getPointsLabel(Number(value)), name]}\n                                        separator=\": \"\n                                    />\n                                </AreaChart>\n                            </ResponsiveContainer>\n                        </div>\n                    )}\n                </>\n            )}\n        </Widget>\n    )\n}\n\nexport default PlayerComparisonWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Double Digit Hauls'\nconst MAX_ITEMS = 10\n\nconst DoubleDigitHaulsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(\n        getAllPlayers(stats).filter(el => el.aggregates.totals.doubleDigitHauls > 0),\n        el => el.aggregates.totals.doubleDigitHauls\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals.doubleDigitHauls)}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DoubleDigitHaulsWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\n\nconst POINTS_TITLE = 'Top GW Points'\nconst BENCH_TITLE = 'Top GW Bench Points'\nconst MAX_ITEMS = 10\n\ntype Props = {\n    stat: 'rawPoints' | 'benchPoints'\n}\n\nconst PlayerGWReturnWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.stat === 'rawPoints' ? POINTS_TITLE : BENCH_TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(\n        getAllPlayers(stats).reduce(\n            (acc, curr) => [\n                ...acc,\n                ...curr.data\n                    .filter(item => (props.stat === 'rawPoints' ? (item.multiplier || 0) > 0 : item.multiplier === 0))\n                    .map(item => ({\n                        ...curr,\n                        data: [item],\n                    })),\n            ],\n            [] as StatData[]\n        ),\n        el => el.data[0][props.stat] || 0\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.stat === 'rawPoints' ? POINTS_TITLE : BENCH_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <b>{getPointsLabel(element.data[0][props.stat] || 0)}</b>\n                        <div>\n                            <SiteLink event={element.data[0].event.id} />\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default PlayerGWReturnWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { SiteLink } from '../SiteLink'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Metric } from '../Metric'\nimport { CurrentHistory, Team as TeamType } from '../../types'\nimport { WidgetWithModal } from '../WidgetWithModal'\n\nconst TITLE = 'Top GW Teams'\nconst MAX_ITEMS = 10\n\ntype TeamData = {\n    team: TeamType\n    event: CurrentHistory\n    points: number | null\n    players: number\n}\n\nconst renderItem = (item: TeamData): JSX.Element => {\n    return (\n        <>\n            <Team team={item.team} />\n            <div>\n                <b>{getPointsLabel(item.points || 0)}</b>\n                <div>\n                    <SiteLink event={item.event.event} />, {round((item.points || 0) / item.players)}{' '}\n                    <Metric metric=\"ppp\" />\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst getItemKey = (item: TeamData): string => {\n    return `${item.team.id}-${item.event.event}`\n}\n\nconst matchesFilter = (item: TeamData, query: string): boolean => {\n    return item.team.name.toLowerCase().includes(query.toLowerCase())\n}\n\nconst TeamGWReturnWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const allPlayers = getAllPlayers(stats)\n\n    const teamData = sort(\n        data.history.current\n            .map(event => {\n                return bootstrap.teams\n                    .map(team => {\n                        let players = 0\n\n                        return {\n                            team,\n                            event,\n                            points: allPlayers\n                                .filter(player => player.element.team === team.id)\n                                .reduce((acc: number | null, curr) => {\n                                    const points = curr.data.find(item => item.event.id === event.event)?.rawPoints\n\n                                    if (points !== undefined && points !== null) {\n                                        players += 1\n                                        return (acc || 0) + points\n                                    }\n\n                                    return acc\n                                }, null),\n                            players,\n                        }\n                    })\n                    .filter(team => team.points !== null)\n            })\n            .reduce((acc, curr) => [...acc, ...curr]),\n        el => el.points || 0\n    )\n\n    return (\n        <WidgetWithModal\n            title={TITLE}\n            max={MAX_ITEMS}\n            data={teamData}\n            renderItem={renderItem}\n            getItemKey={getItemKey}\n            matchesFilter={matchesFilter}\n        />\n    )\n}\n\nexport default TeamGWReturnWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team as TeamType } from '../../types'\nimport { getAllPlayers, getPointsLabel, head, last, round, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { WidgetWithModal } from '../WidgetWithModal'\n\nconst MAX_ITEMS = 5\nconst TITLE = 'Total Points Contribution by Team'\n\ntype TeamContribution = {\n    team: TeamType\n    points: number\n}\n\nconst getItemKey = (item: TeamContribution): string => {\n    return `${item.team.id}`\n}\n\nconst matchesFilter = (item: TeamContribution, query: string): boolean => {\n    return item.team.name.toLowerCase().includes(query.toLowerCase())\n}\n\nconst TeamContributionWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!entry || !data || !rawHistory || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const latestPoints = last(history.current)?.total_points || 0\n    const totalPoints =\n        history.current.length > 1\n            ? latestPoints -\n              (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1))?.total_points ||\n                  0)\n            : latestPoints\n\n    const contributions = sort(\n        Object.entries(\n            getAllPlayers(stats).reduce(\n                (acc, player) => ({\n                    ...acc,\n                    [player.element.team]: (acc[player.element.team] || 0) + player.aggregates.totals.points,\n                }),\n                {} as Record<number, number>\n            )\n        ).reduce((acc, curr) => {\n            const team = bootstrap.teams.find(team => team.id === Number(curr[0]))\n\n            if (!team) {\n                return acc\n            }\n\n            return [\n                ...acc,\n                {\n                    team,\n                    points: curr[1],\n                },\n            ]\n        }, [] as TeamContribution[]),\n        el => el.points\n    )\n\n    return (\n        <WidgetWithModal\n            title={TITLE}\n            data={contributions}\n            max={MAX_ITEMS}\n            renderItem={team => (\n                <>\n                    <Team team={team.team} />\n                    <div>\n                        <div>\n                            <b>{round((team.points / totalPoints) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(team.points)}</div>\n                    </div>\n                </>\n            )}\n            getItemKey={getItemKey}\n            matchesFilter={matchesFilter}\n        />\n    )\n}\n\nexport default TeamContributionWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, sort, head, last, reduce, getPointsLabel, thousandsSeparator, round } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { StatData } from '../../types'\nimport { ChangeBadge } from '../ChangeBadge'\nimport { SiteLink } from '../SiteLink'\nimport { Player } from '../Player'\nimport { SwapIcon } from '../SwapIcon'\nimport { formatFormation } from '../FormationWidget/FormationWidget'\nimport { Metric } from '../Metric'\nimport './PointsImprovementsWidget.scss'\n\nconst TITLE = 'Points Improvements'\n\nconst isValidXi = (players: StatData[]) => {\n    const defenders = players.filter(p => p.element.element_type === 2).length >= 3\n    const midfielders = players.filter(p => p.element.element_type === 3).length >= 2\n    const forwards = players.filter(p => p.element.element_type === 4).length >= 1\n\n    return defenders && midfielders && forwards\n}\n\nconst getFormation = (positions: string[], players: StatData[]) => {\n    return positions\n        .slice(1)\n        .map(\n            position =>\n                players.filter(\n                    player => player.element.element_type === Number(position) && (player.data[0]?.multiplier || 0) > 0\n                ).length\n        )\n        .join('-')\n}\n\nconst PointsImprovementsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const weeks = data.history.current.map(event => {\n        const players = allPlayers\n            .filter(player => player.data?.find(el => el.event.id === event.event)?.multiplier !== null)\n            .map(player => ({ ...player, data: [player.data?.find(el => el.event.id === event.event)!] }))\n\n        let outfieldXi: StatData[] = players\n            .filter(player => (player.data[0]?.multiplier || 0) > 0 && player.element.element_type !== 1)\n            .map(player => JSON.parse(JSON.stringify(player)))\n\n        let outfieldBench: StatData[] = players\n            .filter(player => (player.data[0]?.multiplier || 0) === 0 && player.element.element_type !== 1)\n            .map(player => JSON.parse(JSON.stringify(player)))\n\n        let subsPerformed = 0\n        let subs: { in: StatData; out: StatData }[] = []\n\n        do {\n            subsPerformed = 0\n\n            let newBench = outfieldBench\n\n            for (let player of outfieldBench) {\n                const lowestScore =\n                    last(\n                        sort(\n                            outfieldXi.filter(el => el.data[0].rawPoints !== null),\n                            el => el.data[0]?.rawPoints || 0\n                        )\n                    )?.data[0]?.rawPoints || 0\n\n                if ((player.data[0]?.rawPoints || 0) <= lowestScore) {\n                    continue\n                }\n\n                const possibleSubs = outfieldXi.filter(player => player.data[0]?.rawPoints === lowestScore)\n\n                for (let sub of possibleSubs) {\n                    const proposedXi = [\n                        ...outfieldXi.filter(xiPlayer => xiPlayer.element.id !== sub.element.id),\n                        player,\n                    ]\n\n                    const proposedBench = [\n                        ...newBench.filter(benchPlayer => benchPlayer.element.id !== player.element.id),\n                        sub,\n                    ]\n\n                    if (isValidXi(proposedXi)) {\n                        outfieldXi = proposedXi\n                        newBench = proposedBench\n                        subsPerformed += 1\n\n                        const originalMultiplier = player.data[0]?.multiplier\n\n                        player.data[0].multiplier = sub.data[0].multiplier\n                        sub.data[0].multiplier = originalMultiplier\n\n                        subs = [...subs, { in: player, out: sub }]\n\n                        break\n                    }\n                }\n            }\n\n            outfieldBench = newBench\n        } while (subsPerformed > 0)\n\n        let gk: StatData = JSON.parse(\n            JSON.stringify(\n                players.find(player => (player.data[0]?.multiplier || 0) > 0 && player.element.element_type === 1)\n            )\n        )\n\n        let benchGk: StatData = JSON.parse(\n            JSON.stringify(\n                players.find(player => (player.data[0]?.multiplier || 0) === 0 && player.element.element_type === 1)\n            )\n        )\n\n        if ((benchGk.data[0]?.rawPoints || 0) > (gk.data[0]?.rawPoints || 0)) {\n            const temp = gk\n            const originalMultiplier = gk.data[0]?.multiplier\n\n            gk = benchGk\n            benchGk = temp\n\n            gk.data[0].multiplier = benchGk.data[0].multiplier\n            benchGk.data[0].multiplier = originalMultiplier\n\n            subs = [{ in: gk, out: benchGk }, ...subs]\n        }\n\n        const rotatedPlayers = [gk, ...outfieldXi]\n\n        const actualCaptain = players.find(player => (player.data[0]?.multiplier || 0) > 1)\n        const initialCaptain = rotatedPlayers.find(player => (player.data[0]?.multiplier || 0) > 1)\n        const idealCaptain = head(sort(rotatedPlayers, el => el.data[0]?.rawPoints || 0))\n\n        subs = subs.filter(sub => subs.filter(subCheck => subCheck.out.element.id === sub.in.element.id).length === 0)\n\n        return {\n            event,\n            actualPoints: event.points,\n            idealPoints:\n                reduce(rotatedPlayers, player => (player.data[0].rawPoints || 0) * (player.data[0].multiplier || 0)) +\n                (idealCaptain?.data[0]?.rawPoints || 0) -\n                (initialCaptain?.data[0]?.rawPoints || 0),\n            actualFormation: getFormation(Object.keys(data.stats.data), players),\n            idealFormation: getFormation(Object.keys(data.stats.data), rotatedPlayers),\n            actualCaptain,\n            idealCaptain,\n            subs,\n        }\n    })\n\n    const totalHits = reduce(data.history.current, el => el.event_transfers_cost)\n\n    const idealTotalPoints = reduce(weeks, week => week.idealPoints) - totalHits\n    const totalImprovement = reduce(weeks, week => week.idealPoints - week.actualPoints)\n\n    return (\n        <Widget cssClasses=\"point-improvements-widget\" title={TITLE}>\n            <div className=\"widget__detail\">\n                With optimised rotation and captain picks, you would have improved by{' '}\n                <b>{getPointsLabel(thousandsSeparator(totalImprovement))}</b> (\n                {round(totalImprovement / data.history.current.length, 1)} <Metric metric=\"ppw\" />\n                ), resulting in a total of <b>{getPointsLabel(thousandsSeparator(idealTotalPoints))}</b>.\n            </div>\n            <ul className=\"widget__list\">\n                {weeks.map(week => (\n                    <li className=\"widget__list__item\" key={week.event.event}>\n                        <div className=\"point-improvements-widget__detail\">\n                            <SiteLink event={week.event.event} />\n                            <div className=\"point-improvements-widget__swap\">\n                                <span>{getPointsLabel(week.actualPoints)}</span>\n                                <SwapIcon />\n                                <span>{getPointsLabel(week.idealPoints)}</span>\n                                <ChangeBadge value={week.idealPoints - week.actualPoints} />\n                            </div>\n                        </div>\n                        {(week.idealCaptain?.data[0].rawPoints || 0) > (week.actualCaptain?.data[0].rawPoints || 0) && (\n                            <div className=\"point-improvements-widget__category\" data-category=\"Captaincy\">\n                                <div className=\"point-improvements-widget__swap\">\n                                    {week.actualCaptain && <Player id={week.actualCaptain.element.id} />}\n                                    <SwapIcon />\n                                    {week.idealCaptain && <Player id={week.idealCaptain.element.id} />}\n                                </div>\n                            </div>\n                        )}\n                        {week.subs.length > 0 && (\n                            <div className=\"point-improvements-widget__category\" data-category=\"Substitutes\">\n                                {week.actualFormation !== week.idealFormation && (\n                                    <div className=\"point-improvements-widget__swap point-improvements-widget__formation\">\n                                        {formatFormation(week.actualFormation)}\n                                        <SwapIcon />\n                                        {formatFormation(week.idealFormation)}\n                                    </div>\n                                )}\n                                {week.subs.map(sub => (\n                                    <div\n                                        className=\"point-improvements-widget__swap\"\n                                        key={`${sub.out.element.id}-${sub.in.element.id}`}\n                                    >\n                                        <Player id={sub.out.element.id} />\n                                        <SwapIcon />\n                                        <Player id={sub.in.element.id} />\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PointsImprovementsWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { getGWCountLabel } from '../../utilities/strings'\n\nconst TITLE = 'Bonus Points'\nconst MAX_ITEMS = 10\n\nconst BonusPointsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(getAllPlayers(stats), el => el.aggregates.totals.bonus)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => {\n                const count = element.data.filter(gw => (gw.bonusPoints || 0) > 0).length\n\n                return (\n                    <>\n                        <Player id={element.element.id} />\n                        <div>\n                            <b>{getPointsLabel(element.aggregates.totals.bonus)}</b> ({getGWCountLabel(count)},{' '}\n                            {round(element.aggregates.totals.bonus / count)} <Metric metric=\"ppg\" />)\n                        </div>\n                    </>\n                )\n            }}\n        />\n    )\n}\n\nexport default BonusPointsWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Captain Points'\n\nconst CaptainPointsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const players = getAllPlayers(data.stats.data)\n\n    const pointsData = history.current.map((entry, index) => {\n        const captain = players.find(player => (player.data?.[index]?.multiplier || 0) > 1)\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: captain?.data[index].points || 0,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={200} width=\"100%\">\n                    <AreaChart data={pointsData} margin={{ top: 0, right: 0, bottom: 0, left: 0 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <YAxis interval=\"preserveStartEnd\" hide={true} />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" hide={true} />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default CaptainPointsWidget\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport { useParams, useHistory } from 'react-router-dom'\nimport debounce from 'lodash/debounce'\nimport ReactSlider from 'react-slider'\nimport { Helmet } from 'react-helmet'\nimport { StatData, Stats, History, Range } from '../../types'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport {\n    thousandsSeparator,\n    validateTeamId,\n    getPointsLabel,\n    last,\n    filterStatData,\n    filterHistoryData,\n    head,\n    getPastEvents,\n    round,\n} from '../../utilities'\nimport { TeamModal } from '../TeamModal'\nimport { addHiddenSection, fetchDataWithId, removeHiddenSection } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport { MissedPointsShareWidget } from '../MissedPointsShareWidget'\nimport { NearMissesWidget } from '../NearMissesWidget'\nimport { StreakWidget } from '../StreakWidget'\nimport { SettingsModal } from '../SettingsModal'\nimport { MilestonesWidget } from '../MilestonesWidget'\nimport { PlayerOverview } from '../PlayerOverview/PlayerOverview'\nimport { FormWidget } from '../FormWidget'\nimport { PriceChangeWidget } from '../PriceChangeWidget'\nimport { InjuryWidget } from '../InjuryWidget'\nimport { ExpectedPointsWidget } from '../ExpectedPointsWidget'\nimport { PopularityWidget } from '../PopularityWidget'\nimport { TransfersWidget } from '../TransfersWidget'\nimport { PlayerComparisonWidget } from '../PlayerComparisonWidget'\nimport { DoubleDigitHaulsWidget } from '../DoubleDigitHaulsWidget'\nimport { PlayerGWReturnWidget } from '../PlayerGWReturnWidget'\nimport { TeamGWReturnWidget } from '../TeamGWReturnWidget'\nimport { TeamContributionWidget } from '../TeamContributionWidget'\nimport { PointsImprovementsWidget } from '../PointsImprovementsWidget'\nimport { BonusPointsWidget } from '../BonusPointsWidget'\nimport { CaptainPointsWidget } from '../CaptainPointsWidget'\nimport './Dashboard.scss'\n\nexport type OptionType = {\n    value: string\n    label: string\n}\n\ntype DashboardParams = {\n    team?: string\n}\n\nexport type FilteredData = {\n    history: History\n    stats: {\n        data: Stats\n        chips: {\n            [key: number]: string\n        }\n        tots: {\n            xi: StatData[]\n            bench: StatData[]\n        }\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nexport const FilteredDataContext = React.createContext<FilteredData | undefined>(undefined)\n\nconst Dashboard: React.FC = () => {\n    const [sort, setSort] = useState<ValueType<OptionType>>(sortOptions[0])\n    const [isSettingsOpen, setIsSettingsOpen] = useState<boolean>(false)\n    const [range, setRange] = useState<Range>({ start: 0, end: 37 })\n    const [filteredData, setFilteredData] = useState<FilteredData | undefined>(undefined)\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const rawStatsData = useSelector((state: RootState) => state.stats.data)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n    const hiddenSections = useSelector((state: RootState) => state.settings.hiddenSections)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    const { team } = useParams<DashboardParams>()\n    const browserHistory = useHistory()\n\n    const [isModalOpen, setIsModalOpen] = useState(!team)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme)\n    }, [theme])\n\n    useEffect(() => {\n        if (id && !team) {\n            browserHistory.push(`/${id}/`)\n        } else if (team && validateTeamId(team)) {\n            setIsModalOpen(false)\n\n            if (Number(team) !== entry?.id && !isLoading) {\n                dispatch(fetchDataWithId(Number(team)))\n            }\n        } else {\n            browserHistory.push('/')\n        }\n    }, [team, browserHistory, dispatch, id, isLoading, entry])\n\n    useEffect(() => {\n        setIsModalOpen(!team)\n    }, [team])\n\n    useEffect(() => {\n        setIsModalOpen(!entry?.name)\n    }, [entry])\n\n    const debouncedFiltering = useRef(\n        debounce(async (rawStatsData, rawHistory, bootstrap, range) => {\n            const [filteredStatData, filteredHistoryData] = await Promise.all([\n                filterStatData(rawStatsData, bootstrap, range),\n                filterHistoryData(rawHistory, range),\n            ])\n\n            setFilteredData({\n                stats: filteredStatData,\n                history: filteredHistoryData,\n            })\n        }, 300)\n    ).current\n\n    useEffect(() => {\n        if (!rawStatsData || !bootstrap || !rawHistory) {\n            return\n        }\n\n        debouncedFiltering(rawStatsData, rawHistory, bootstrap, range)\n    }, [rawStatsData, bootstrap, rawHistory, range, debouncedFiltering, dispatch])\n\n    const totalPoints = filteredData\n        ? (last(filteredData.history.current)?.total_points || 0) -\n          (rawHistory?.current?.find(event => event.event === (head(filteredData.history.current)?.event || 1) - 1)\n              ?.total_points || 0)\n        : 0\n\n    const toggleHiddenSection = (section: string) => {\n        if (hiddenSections.includes(section)) {\n            dispatch(removeHiddenSection(section))\n        } else {\n            dispatch(addHiddenSection(section))\n        }\n    }\n\n    const isSectionHidden = (section: string) => hiddenSections.includes(section)\n\n    const renderSection = (title: string, children: JSX.Element) => {\n        const id = title.toLowerCase().replace(/ /g, '-')\n        const isHidden = isSectionHidden(id)\n\n        return (\n            <>\n                <h2 className=\"dashboard__section\">\n                    <div className=\"dashboard__section__toggle\">\n                        <button\n                            type=\"button\"\n                            title={isHidden ? `Expand \"${title}\"` : `Collapse \"${title}\"`}\n                            onClick={() => toggleHiddenSection(id)}\n                        ></button>\n                        {isHidden ? (\n                            <>\n                                <div className=\"toggle-icon\"></div>\n                                <div className=\"toggle-icon\"></div>\n                            </>\n                        ) : (\n                            <div className=\"toggle-icon\"></div>\n                        )}\n                    </div>\n                    <span>{title}</span>\n                </h2>\n                {!isHidden && children}\n            </>\n        )\n    }\n\n    return (\n        <FilteredDataContext.Provider value={filteredData}>\n            <Helmet>\n                <meta\n                    name=\"theme-color\"\n                    content={getComputedStyle(document.documentElement).getPropertyValue('--body-background-color')}\n                />\n            </Helmet>\n            <div className=\"dashboard\">\n                {isModalOpen && <TeamModal onClose={() => setIsModalOpen(false)} />}\n                {isSettingsOpen && <SettingsModal onClose={() => setIsSettingsOpen(false)} />}\n                <div\n                    className={classNames('dashboard__loading', {\n                        'dashboard__loading--hidden': !isLoading,\n                    })}\n                >\n                    <Spinner />\n                </div>\n                <div className=\"dashboard__content\">\n                    {entry && (\n                        <header className=\"dashboard__entry\">\n                            <Widget>\n                                <h1 className=\"dashboard__title\">\n                                    <SiteLink label={entry.name} />\n                                    <div className=\"small muted\">\n                                        {getPointsLabel(thousandsSeparator(totalPoints))}\n                                        {entry.summary_overall_rank && bootstrap && (\n                                            <>\n                                                {' '}\n                                                — Rank {thousandsSeparator(entry.summary_overall_rank)} (Top{' '}\n                                                {round((entry.summary_overall_rank / bootstrap.total_players) * 100)}%)\n                                            </>\n                                        )}\n                                    </div>\n                                </h1>\n                                <div>\n                                    <Button onClick={() => setIsSettingsOpen(true)} label=\"Settings\" />\n                                    {id !== undefined && (\n                                        <Button\n                                            onClick={() => setIsModalOpen(true)}\n                                            label=\"Change Team\"\n                                            disabled={isLoading}\n                                        />\n                                    )}\n                                </div>\n                            </Widget>\n                        </header>\n                    )}\n                    {renderSection(\n                        'Overview',\n                        <div className=\"dashboard__widgets\">\n                            <FormWidget />\n                            <ExpectedPointsWidget gw=\"current\" />\n                            <ExpectedPointsWidget gw=\"next\" />\n                            <InjuryWidget />\n                            <PriceChangeWidget type=\"gains\" />\n                            <PriceChangeWidget type=\"drops\" />\n                            <PopularityWidget />\n                            <TransfersWidget type=\"in\" />\n                            <TransfersWidget type=\"out\" />\n                        </div>\n                    )}\n                    {renderSection(\n                        'Season',\n                        <>\n                            <div className=\"dashboard__widgets dashboard__widgets--split\">\n                                <TotsWidget />\n                                <NearMissesWidget />\n                            </div>\n                            {bootstrap && getPastEvents(bootstrap.events).length > 1 && (\n                                <div className=\"dashboard__graphs\">\n                                    <OverallRankWidget />\n                                    <PointsWidget />\n                                    <ValueWidget />\n                                </div>\n                            )}\n                            <div className=\"dashboard__widgets\">\n                                <PlayerStatsWidget />\n                                <SeasonWidget />\n                                <HistoryWidget />\n                                <GameweekWidget />\n                                <MilestonesWidget />\n                            </div>\n                        </>\n                    )}\n                    {renderSection(\n                        'Improvements',\n                        <div className=\"dashboard__widgets dashboard__widgets--single\">\n                            <PointsImprovementsWidget />\n                        </div>\n                    )}\n                    {renderSection(\n                        'Players',\n                        <>\n                            <div className=\"dashboard__meta\">\n                                <label className=\"dashboard__meta__label\">Sort by</label>\n                                <Select\n                                    options={sortOptions}\n                                    value={sort}\n                                    onChange={option => setSort(option)}\n                                    styles={{\n                                        container: provided => ({ ...provided, width: '100%' }),\n                                        menu: provided => ({ ...provided, zIndex: 20 }),\n                                    }}\n                                />\n                                <div className=\"dashboard__legend\">\n                                    <div className=\"dashboard__color\">\n                                        <div className=\"dashboard__color__indicator dashboard__color__indicator--started\"></div>\n                                        Started\n                                    </div>\n                                    <div className=\"dashboard__color\">\n                                        <div className=\"dashboard__color__indicator dashboard__color__indicator--benched\"></div>\n                                        Benched\n                                    </div>\n                                    <div className=\"dashboard__color\">\n                                        <div className=\"dashboard__color__indicator dashboard__color__indicator--captain\"></div>\n                                        Captain\n                                    </div>\n                                    <div className=\"dashboard__color\">\n                                        <div className=\"dashboard__color__indicator dashboard__color__indicator--triple\"></div>\n                                        TC\n                                    </div>\n                                    <div className=\"dashboard__color\">\n                                        <div className=\"dashboard__color__indicator\"></div>\n                                        Not Selected\n                                    </div>\n                                </div>\n                            </div>\n                            <PlayerOverview sort={sort} />\n                            <div className=\"dashboard__widgets dashboard__widgets--single\">\n                                <PlayerComparisonWidget />\n                            </div>\n                            <div className=\"dashboard__widgets\">\n                                <PositionsWidget />\n                                <FormationWidget />\n                                <SelectionWidget title=\"Frequent Selections\" metric=\"selections\" />\n                                <SelectionWidget title=\"Frequent Starters\" metric=\"starts\" />\n                                <SelectionWidget title=\"Frequent Bench Players\" metric=\"benched\" />\n                                <DifferenceWidget title=\"Consistent Starters\" top />\n                                <DifferenceWidget title=\"Consistent Bench Players\" />\n                            </div>\n                        </>\n                    )}\n                    {renderSection(\n                        'Returns',\n                        <div className=\"dashboard__widgets\">\n                            <PlayerGWReturnWidget stat=\"rawPoints\" />\n                            <PlayerGWReturnWidget stat=\"benchPoints\" />\n                            <BonusPointsWidget />\n                            <DoubleDigitHaulsWidget />\n                            <TeamGWReturnWidget />\n                        </div>\n                    )}\n                    {renderSection(\n                        'Teams',\n                        <div className=\"dashboard__widgets dashboard__widgets--single\">\n                            <TeamsWidget />\n                        </div>\n                    )}\n                    {renderSection(\n                        'Captains',\n                        <>\n                            <div className=\"dashboard__graphs\">\n                                <CaptainPointsWidget />\n                            </div>\n                            <div className=\"dashboard__widgets\">\n                                <CaptainWidget />\n                                <CaptainOpportunityWidget />\n                                <WrongCaptainWidget />\n                            </div>\n                        </>\n                    )}\n                    {renderSection(\n                        'Streaks',\n                        <div className=\"dashboard__widgets\">\n                            <StreakWidget title=\"Non-Blank Streaks\" metric=\"nonBlank\" showDetailedStats />\n                            <StreakWidget\n                                title=\"Double-Digit Haul Streaks\"\n                                metric=\"doubleDigitHaul\"\n                                showDetailedStats\n                            />\n                            <StreakWidget title=\"Bonus Streaks\" metric=\"bonus\" showDetailedStats />\n                            <StreakWidget title=\"Selection Streaks\" metric=\"selection\" showDetailedStats />\n                            <StreakWidget title=\"Start Streaks\" metric=\"start\" showDetailedStats />\n                            <StreakWidget title=\"Bench Appearance Streaks\" metric=\"bench\" />\n                        </div>\n                    )}\n                    {renderSection(\n                        'Contributions',\n                        <div className=\"dashboard__widgets\">\n                            <ContributionWidget />\n                            <TeamContributionWidget />\n                            {(range.end - range.start + 1 === rawHistory?.current?.length ||\n                                range.end - range.start === 37) && (\n                                <>\n                                    <MissedPointsShareWidget title=\"Most Points Scored Outside of Team\" top />\n                                    <MissedPointsShareWidget title=\"Fewest Points Scored Outside of Team\" />\n                                </>\n                            )}\n                        </div>\n                    )}\n                    <div className=\"dashboard__legal\">\n                        <p>\n                            FPL Stats uses data from the official Premier League Fantasy API. This site is not\n                            affiliated with the Premier League.\n                        </p>\n                    </div>\n                </div>\n                {bootstrap && getPastEvents(bootstrap.events).length > 1 && (\n                    <div className=\"dashboard__slider-wrapper\">\n                        <ReactSlider\n                            className=\"dashboard__slider\"\n                            value={[range.start, range.end]}\n                            min={(head(getPastEvents(bootstrap.events))?.id || 1) - 1}\n                            max={(last(getPastEvents(bootstrap.events))?.id || 38) - 1}\n                            onChange={([start, end]) => setRange({ start, end })}\n                            renderThumb={(props, state) => <div {...props}>GW {state.valueNow + 1}</div>}\n                            pearling\n                        />\n                    </div>\n                )}\n            </div>\n        </FilteredDataContext.Provider>\n    )\n}\n\nexport default Dashboard\n","import { combineReducers } from 'redux'\nimport { Bootstrap, History, Entry, Picks, LiveEvent, StandingsPlayer } from '../types'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings, { SettingsState } from './settings'\nimport entry from './entry'\nimport history from './history'\nimport loading from './loading'\nimport milestones from './milestones'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data:\n            | {\n                  pick: Picks\n                  live: LiveEvent\n              }[]\n            | undefined\n    }\n    settings: SettingsState\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n    milestones: {\n        data: StandingsPlayer[] | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n    milestones,\n})\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport reportWebVitals from './reportWebVitals'\nimport './index.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureAppStore()}>\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/:team/\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <Dashboard />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n\nreportWebVitals()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nconst STORAGE_VERSION = '2.1'\n\nconst isStale = () => localStorage.getItem('storageVersion') !== STORAGE_VERSION\n\nexport default function configureAppStore() {\n    const storage = localStorage.getItem('applicationSettings')\n    const recentTeams = localStorage.getItem('recentTeams')\n\n    const mostRecentTeamId = recentTeams ? JSON.parse(recentTeams)?.[0].split(' — ')?.[0] : undefined\n    const preloadedState = storage !== null && !isStale() ? JSON.parse(storage) : {}\n\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n        preloadedState: {\n            settings: {\n                theme: 'light',\n                meanStrategy: 'average',\n                hiddenSections: [],\n                id: mostRecentTeamId ? Number(mostRecentTeamId) : undefined,\n                range: {\n                    start: 0,\n                    end: 38,\n                },\n                ...preloadedState,\n            },\n        },\n    })\n\n    store.subscribe(() => {\n        const state = store.getState().settings\n\n        localStorage.setItem('storageVersion', STORAGE_VERSION)\n        localStorage.setItem(\n            'applicationSettings',\n            JSON.stringify({\n                theme: state.theme,\n                meanStrategy: state.meanStrategy,\n                hiddenSections: state.hiddenSections,\n            })\n        )\n    })\n\n    return store\n}\n"],"sourceRoot":""}