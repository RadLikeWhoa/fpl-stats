{"version":3,"sources":["serviceWorker.ts","components/Button/Button.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/arrays.ts","utilities/chips.ts","utilities/events.ts","utilities/history.ts","utilities/numbers.ts","utilities/settings.ts","utilities/stats.ts","utilities/strings.ts","components/Modal/Modal.tsx","components/ModalInput/ModalInput.tsx","components/TeamModal/TeamModal.tsx","reducers/loading.ts","reducers/entry.ts","reducers/history.ts","reducers/stats.ts","reducers/bootstrap.ts","reducers/settings.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/Player/Player.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/BasePlayerWidget/BasePlayerWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/MissedPointsShareWidget/MissedPointsShareWidget.tsx","components/NearMissesWidget/NearMissesWidget.tsx","components/StreakWidget/StreakWidget.tsx","components/Checkbox/Checkbox.tsx","components/SegmentedControl/SegmentedControl.tsx","components/SettingsModal/SettingsModal.tsx","components/MilestonesWidget/MilestonesWidget.tsx","components/PlayerOverview/PlayerOverview.tsx","components/Dashboard/Dashboard.tsx","reducers/milestones.ts","reducers/index.ts","reportWebVitals.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","Button","props","className","type","onClick","disabled","label","Widget","id","useSelector","state","settings","classNames","cssClasses","title","onClose","aria-label","children","Spinner","sort","series","comparator","direction","a","b","head","length","last","reduce","extractor","initialValue","acc","curr","chips","bboost","freehit","wildcard","getPastEvents","events","timestamp","Date","now","filter","event","deadline_time_epoch","getShortName","name","split","pop","filterHistoryData","history","range","current","slice","start","end","thousandsSeparator","value","toString","replace","sumNumbers","el","round","precision","formatted","toFixed","test","validateTeamId","number","Number","isNaN","isInteger","getTotalSelections","statData","data","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalRawPoints","rawPoints","getTotalBenchPoints","getAllPlayers","stats","Object","values","concat","getPlayerAggregate","player","key","getTopStatAggregate","players","aggregates","totals","getStreak","comparison","ignoreBlanks","streaks","max","Math","indexOf","map","streak","totalPoints","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getTeamOfTheSeason","gk","def","mid","fwd","top","rest","xi","element","element_type","bench","emptyAggregates","redCards","yellowCards","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","timesInDreamteam","bps","bonus","captaincies","benchPoints","selections","starts","benched","selection","nonBlank","filterStatData","rawStats","bootstrap","forEach","active_chip","entry_history","picks","item","elements","find","position","live","total_points","keys","index","tots","initialCaps","charAt","toUpperCase","toLowerCase","pluralise","singular","plural","parsedValue","getGWCountLabel","getPointsLabel","normaliseDiacritics","normalize","TeamModal","footer","ModalInput","htmlFor","placeholder","onChange","e","target","ref","innerRef","useState","setValue","isLoading","loading","useHistory","close","useCallback","cancel","push","useEffect","listener","document","addEventListener","removeEventListener","callbackRef","inputElement","focus","onSubmit","preventDefault","createSlice","initialState","reducers","startLoading","finishLoading","actions","fetchEntry","createAsyncThunk","thunkAPI","dispatch","fetchEntryStart","fetch","encodeURIComponent","response","json","fetchEntrySuccess","entry","undefined","action","payload","fetchHistory","fetchHistoryStart","fetchHistorySuccess","fetchStatData","arg","fetchStatsStart","Promise","all","fetchGameweekInformation","gameweeks","fetchStatsSuccess","fetchPicks","fetchEvent","fetchBootstrap","fetchBootstrapStart","fetchBootstrapSuccess","latestFetch","localStorage","setItem","fetchDataWithId","setId","meanStrategy","theme","setMeanStrategy","setTheme","useMeanLabel","strategy","suffix","useMeanValue","filtered","average","sorted","ceil","median","TITLE","HistoryWidget","useContext","FilteredDataContext","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","TotsPlayer","team","teams","element_types","src","code","singular_name_short","alt","web_name","TotsWidget","Array","explanations","ppg","ppp","Metric","metric","Player","extended","reversed","short_name","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","inDreamteam","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","idealCaptain","entries","from","week","returner","renderTopBenchGWReturner","FormationWidget","formations","val","formationData","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","plural_name","getAggregateValues","SeasonWidget","rawHistory","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","doubleDigitHauls","totalPlays","summary_overall_points","Team","TeamsWidget","counts","positionPlayers","data-position","plural_name_short","SwapIcon","xmlns","width","height","viewBox","fill","d","CaptainOpportunityWidget","improvements","improvement","captainData","topData","renderList","renderItem","BasePlayerWidget","showExtended","setShowExtended","filteredPlayers","includes","topPlayers","SelectionWidget","DifferenceWidget","benchedPercentage","startsPercentage","starters","percentageDiff","benchwarmers","OverallRankWidget","rankData","overall_rank","margin","bottom","left","right","dataKey","fillOpacity","stroke","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","pointsData","ValueWidget","valueData","bank","WrongCaptainWidget","timesUsed","ContributionWidget","contributions","getPointsShare","MissedPointsShareWidget","NearMissesWidget","totsIds","StreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","showDetailedStats","Checkbox","checked","SegmentedControl","options","option","selected","setSelected","meanOptions","SettingsModal","setChecked","setStrategy","useDispatch","MilestonesWidget","milestones","total","sortings","alphabet","charCodeAt","PlayerOverview","sorting","renderPlayerList","sortOptions","React","createContext","Dashboard","setSort","isSettingsOpen","setIsSettingsOpen","setRange","filteredData","setFilteredData","rawStatsData","useParams","browserHistory","isModalOpen","setIsModalOpen","playerOverviewRef","useRef","documentElement","setAttribute","setTimeout","scrollTo","scrollWidth","debouncedFiltering","debounce","filteredStatData","filteredHistoryData","Provider","summary_overall_rank","styles","container","provided","menu","zIndex","PointsWidget","ReactSlider","min","renderThumb","valueNow","pearling","fetchStanding","page","fetchMilestonesStart","results","standings","fetchMilestonesSuccess","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","storage","getItem","preloadedState","JSON","parse","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","subscribe","getState","stringify","configureAppStore","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94e4f3e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button className=\"button\" type={props.type || 'button'} onClick={props.onClick} disabled={props.disabled}>\n        {props.label}\n    </button>\n)\n\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Button } from '../Button'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    cssClasses?: string\n    onClose?: () => void\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div\n            className={classNames('widget', props.cssClasses, {\n                'widget--cloaked': !id,\n            })}\n        >\n            {props.title && (\n                <h3 className=\"widget__title\">\n                    {props.title}{' '}\n                    {props.onClose && <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />}\n                </h3>\n            )}\n            <div className=\"widget__content\">\n                {props.children || <div className=\"widget__empty\">No data available.</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget\n","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner\n","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return series ? [...series].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1)) : []\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series?.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series?.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series?.reduce((acc, curr) => acc + extractor(curr), initialValue) || 0\n}\n","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null\n","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}\n","import { History, Range } from '../types'\n\nexport const filterHistoryData = async (history: History, range: Range): Promise<History> => {\n    return {\n        ...history,\n        current: history.current?.slice(range.start, range.end + 1) || [],\n    }\n}\n","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: (number | null)[]): number => {\n    return reduce(series, el => el || 0)\n}\n\nexport const average = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null)\n\n    return filtered.length ? sumNumbers(filtered) / filtered.length : 0\n}\n\nexport const median = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null) as number[]\n    const sorted = sort(filtered, el => el)\n    const mid = Math.ceil(filtered.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}\n","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}\n","import {\n    ElementStats,\n    StatData,\n    Stats,\n    StatDataGameweek,\n    Streak,\n    Picks,\n    LiveEvent,\n    Bootstrap,\n    Range,\n    StatAggregateTotals,\n} from '../types'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalCaptaincies = (statData: StatData): number => {\n    return statData.data.filter(data => (data.multiplier || 0) > 1).length\n}\n\nexport const getTotalRawPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.rawPoints || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => (el.multiplier === 0 ? el.rawPoints || 0 : 0))\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const getPlayerAggregate = (player: StatData, key: keyof ElementStats): number =>\n    player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof StatAggregateTotals): StatData | null =>\n    head(sort(players, el => el.aggregates.totals[key]))\n\nconst getStreak = (\n    statData: StatData,\n    comparison: (gw: StatDataGameweek) => boolean,\n    ignoreBlanks: boolean = false\n): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [...acc, 1]\n            }\n\n            return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n        }\n\n        return [...acc, 0]\n    }, (ignoreBlanks ? [0] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start = sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => (streak > 0 ? streak : 1)))\n    const end = start - 1 + max\n\n    const points = statData.data.slice(start, end).map(event => event.points || 0)\n\n    return {\n        start: statData.data[start].event,\n        end: statData.data[end].event,\n        length: max,\n        points,\n        totalPoints: sumNumbers(points),\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 2)\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nexport const getTeamOfTheSeason = (stats: Stats): { xi: StatData[]; bench: StatData[] } => {\n    const gk = sort(stats[1], el => el.aggregates.totals.points).slice(0, MAX_GK)\n    const def = sort(stats[2], el => el.aggregates.totals.points).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => el.aggregates.totals.points).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => el.aggregates.totals.points).slice(0, MAX_FWD)\n\n    const top = gk\n        .slice(0, MIN_GK)\n        .concat(def.slice(0, MIN_DEF))\n        .concat(mid.slice(0, MIN_MID))\n        .concat(fwd.slice(0, MIN_FWD))\n\n    const rest = sort(\n        def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)),\n        el => el.aggregates.totals.points\n    )\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = sort(gk.slice(MIN_GK).concat(rest.slice(4)), el => el.element.element_type, 'asc')\n\n    return {\n        xi,\n        bench,\n    }\n}\n\nconst emptyAggregates = {\n    totals: {\n        redCards: 0,\n        yellowCards: 0,\n        goals: 0,\n        assists: 0,\n        cleanSheets: 0,\n        goalsConceded: 0,\n        ownGoals: 0,\n        saves: 0,\n        minutes: 0,\n        penaltiesMissed: 0,\n        penaltiesSaved: 0,\n        timesInDreamteam: 0,\n        bps: 0,\n        bonus: 0,\n        captaincies: 0,\n        points: 0,\n        rawPoints: 0,\n        benchPoints: 0,\n        selections: 0,\n        starts: 0,\n        benched: 0,\n    },\n    streaks: {\n        selection: null,\n        start: null,\n        bench: null,\n        nonBlank: null,\n    },\n}\n\nexport const filterStatData = async (\n    rawStats: {\n        pick: Picks\n        live: LiveEvent\n    }[],\n    bootstrap: Bootstrap,\n    range: Range\n): Promise<{\n    data: Stats\n    chips: {\n        [key: number]: string\n    }\n    tots: {\n        xi: StatData[]\n        bench: StatData[]\n    }\n}> => {\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    rawStats.slice(range.start, range.end + 1).forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.slice(range.start, gw.pick.entry_history.event - 1).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                    aggregates: emptyAggregates,\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    },\n                ],\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event - range.start) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    Object.keys(stats).forEach(id => {\n        const player = stats[Number(id)]\n\n        stats[Number(id)].aggregates = {\n            totals: {\n                redCards: getPlayerAggregate(player, 'red_cards'),\n                yellowCards: getPlayerAggregate(player, 'yellow_cards'),\n                goals: getPlayerAggregate(player, 'goals_scored'),\n                assists: getPlayerAggregate(player, 'assists'),\n                cleanSheets: getPlayerAggregate(player, 'clean_sheets'),\n                goalsConceded: getPlayerAggregate(player, 'goals_conceded'),\n                ownGoals: getPlayerAggregate(player, 'own_goals'),\n                saves: getPlayerAggregate(player, 'saves'),\n                minutes: getPlayerAggregate(player, 'minutes'),\n                penaltiesMissed: getPlayerAggregate(player, 'penalties_missed'),\n                penaltiesSaved: getPlayerAggregate(player, 'penalties_saved'),\n                timesInDreamteam: getPlayerAggregate(player, 'in_dreamteam'),\n                bps: getPlayerAggregate(player, 'bps'),\n                bonus: getPlayerAggregate(player, 'bonus'),\n                captaincies: getTotalCaptaincies(player),\n                points: getTotalPoints(player),\n                rawPoints: getTotalRawPoints(player),\n                benchPoints: getTotalBenchPoints(player),\n                selections: getTotalSelections(player),\n                starts: getTotalStarts(player),\n                benched: getTotalBenched(player),\n            },\n            streaks: {\n                selection: getSelectionStreak(player),\n                start: getStartStreak(player),\n                bench: getBenchStreak(player),\n                nonBlank: getNonBlankStreak(player),\n            },\n        }\n    })\n\n    const data = Object.values(stats).reduce(\n        (acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [...(acc[curr.element.element_type] || []), curr],\n        }),\n        {}\n    )\n\n    return {\n        data,\n        chips,\n        tots: getTeamOfTheSeason(data),\n    }\n}\n","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`\n\nexport const pluralise = (value: number | string, singular: string, plural: string) => {\n    const parsedValue = typeof value === 'number' ? value : Number(value.replace(/,/g, ''))\n\n    return `${value} ${parsedValue === 1 ? singular : plural}`\n}\n\nexport const getGWCountLabel = (value: number | string): string => pluralise(value, 'GW', 'GWs')\n\nexport const getPointsLabel = (value: number | string): string => pluralise(value, 'pt', 'pts')\n\nexport const normaliseDiacritics = (value: string): string => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './Modal.scss'\n\ntype Props = {\n    title: string\n    children?: React.ReactNode\n    onClose?: () => void\n    footer?: React.ReactNode\n    cssClasses?: string\n}\n\nconst TeamModal: React.FC<Props> = (props: Props) => {\n    return (\n        <div className={classNames('modal', props.cssClasses)}>\n            <div className=\"modal__backdrop\" onClick={() => props.onClose?.()}></div>\n            <div className=\"modal__element\">\n                <h3 className=\"modal__header\">\n                    {props.title}\n                    <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />\n                </h3>\n                <div className=\"modal__body\">{props.children}</div>\n                {props.footer && <footer className=\"modal__footer\">{props.footer}</footer>}\n            </div>\n        </div>\n    )\n}\n\nexport default TeamModal\n","import React from 'react'\nimport './ModalInput.scss'\n\ntype Props = {\n    label: string\n    value: string\n    onChange: (value: string) => void\n    placeholder?: string\n    id?: string\n    innerRef?: (element: any) => any\n}\n\nconst ModalInput: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"modal-input\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                className=\"modal-input__element\"\n                id={props.id}\n                type=\"text\"\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={e => props.onChange(e.target.value)}\n                ref={props.innerRef}\n            />\n        </div>\n    )\n}\n\nexport default ModalInput\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '../Button'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport { Modal } from '../Modal'\nimport { ModalInput } from '../ModalInput'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst TeamModal: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useHistory()\n\n    const close = useCallback(\n        (cancel: boolean) => {\n            if (!cancel) {\n                history.push(`/${value}/`)\n            } else if (id) {\n                props.onClose?.()\n            }\n        },\n        [value, history, props, id]\n    )\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    return (\n        <form\n            onSubmit={e => {\n                close(false)\n                e.preventDefault()\n            }}\n        >\n            <Modal\n                title=\"Select Team\"\n                onClose={() => close(true)}\n                footer={\n                    <Button\n                        label=\"Show Stats\"\n                        type=\"submit\"\n                        disabled={!validateTeamId(value) || value === `${id}` || isLoading}\n                    />\n                }\n            >\n                <ModalInput\n                    label=\"Team ID\"\n                    placeholder=\"Enter your team ID\"\n                    value={value}\n                    onChange={value => setValue(value)}\n                    innerRef={callbackRef}\n                />\n            </Modal>\n        </form>\n    )\n}\n\nexport default TeamModal\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchEntry = createAsyncThunk('entry/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchEntryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`\n    )\n\n    const data = await response.json()\n\n    thunkAPI.dispatch(fetchEntrySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport default entry.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchHistory = createAsyncThunk('history/fetch', async (entry: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchHistoryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/history/`\n        )}`\n    )\n\n    const data = await response.json()\n\n    thunkAPI.dispatch(fetchHistorySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport default history.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchStatData = createAsyncThunk(\n    'stats/fetch',\n    async (arg: { bootstrap: Bootstrap; entry: number }, thunkAPI) => {\n        thunkAPI.dispatch(fetchStatsStart())\n        thunkAPI.dispatch(startLoading())\n\n        const gameweeks = await Promise.all(\n            getPastEvents(arg.bootstrap.events).map(async event => await fetchGameweekInformation(event.id, arg.entry))\n        )\n\n        thunkAPI.dispatch(fetchStatsSuccess(gameweeks))\n        thunkAPI.dispatch(finishLoading())\n    }\n)\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchStatsStart(state) {\n            state.data = undefined\n        },\n        fetchStatsSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchStatsStart, fetchStatsSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/event/${event}/live/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks; live: LiveEvent }> => {\n    const [pick, live] = await Promise.all([fetchPicks(event, entry), fetchEvent(event)])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport default stats.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { fetchEntry } from './entry'\nimport { fetchHistory } from './history'\nimport { finishLoading, startLoading } from './loading'\nimport { fetchStatData } from './stats'\n\nexport const fetchBootstrap = createAsyncThunk('bootstrap/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchBootstrapStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`\n    )\n\n    const data = await response.json()\n\n    await Promise.all([\n        thunkAPI.dispatch(fetchStatData({ bootstrap: data, entry: id })),\n        thunkAPI.dispatch(fetchHistory(id)),\n        thunkAPI.dispatch(fetchEntry(id)),\n    ])\n\n    thunkAPI.dispatch(finishLoading())\n    thunkAPI.dispatch(fetchBootstrapSuccess(data))\n})\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n        latestFetch: null,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            localStorage.setItem('latestFetch', `${Date.now()}`)\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport default bootstrap.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetchBootstrap } from './bootstrap'\n\nexport const fetchDataWithId = createAsyncThunk('settings/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(setId(id))\n    thunkAPI.dispatch(fetchBootstrap(id))\n})\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: undefined,\n        meanStrategy: 'average',\n        theme: 'light',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n        },\n        setTheme(state, action) {\n            state.theme = action.payload\n        },\n    },\n})\n\nexport const { setId, setMeanStrategy, setTheme } = settings.actions\n\nexport default settings.reducer\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: (number | null)[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: (number | null)[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue\n","import React, { useContext } from 'react'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Historical Data'\n\nconst HistoryWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestRankedSeason.rank)}</b> ({bestRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstRankedSeason.rank)}</b> ({worstRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(bestPointSeason.total_points)}</b> ({bestPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(worstPointSeason.total_points)}</b> ({worstPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <b>\n                        {thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map(season => season.rank)), 0)))}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <b>\n                        {thousandsSeparator(\n                            Number(round(meanValue(pastSeasonsByPoints.map(season => season.total_points)), 0))\n                        )}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <b>{top1k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <b>{top10k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <b>{top100k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <b>{top1m}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">{props.points}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer\n","import React, { useContext } from 'react'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst TITLE = 'Team of the Season'\n\nconst TotsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data || !data.stats.tots.xi.length) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE} cssClasses=\"tots-widget\">\n            <div className=\"tots\">\n                {Array(4).map((el, index) => (\n                    <>\n                        {data && (\n                            <div className=\"tots__row\">\n                                {data.stats.tots.xi\n                                    .filter(el => el.element.element_type === index + 1)\n                                    .map(player => (\n                                        <TotsPlayer\n                                            key={player.element.id}\n                                            id={player.element.id}\n                                            points={player.aggregates.totals.points}\n                                        />\n                                    ))}\n                            </div>\n                        )}\n                    </>\n                ))}\n                <div className=\"tots__row tots__row--bench\">\n                    {data.stats.tots.bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={player.aggregates.totals.points}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget\n","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    ppg: 'Points per Game',\n    ppp: 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>\n            {props.metric}\n        </abbr>\n    )\n}\n\nexport default Metric\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    extended?: boolean\n    reversed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div\n            className={classNames('player', {\n                'player--condensed': !props.extended,\n                'player--reversed': props.reversed,\n            })}\n        >\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>\n                        {props.suffix && !props.extended ? <b>{player?.web_name}</b> : player?.web_name}\n                        {typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}\n                    </span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>\n                        {team?.short_name}\n                    </span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink\n","import React, { useContext } from 'react'\nimport { StatData } from '../../types'\nimport {\n    getAllPlayers,\n    getTopStatAggregate,\n    thousandsSeparator,\n    round,\n    sort,\n    head,\n    getPointsLabel,\n} from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Player Stats'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            ({getPointsLabel(week.rawPoints || 0)}, <SiteLink event={week.event.id} />)\n                        </>\n                    )}\n                    reversed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    if (!allPlayers.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const reds = getTopStatAggregate(allPlayers, 'redCards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellowCards')\n    const goals = getTopStatAggregate(allPlayers, 'goals')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'cleanSheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goalsConceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'ownGoals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'timesInDreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(allPlayers, el => el.aggregates.totals.captaincies))\n\n    const topReturner = head(\n        sort(\n            allPlayers.map(player => ({\n                ...player,\n                data: sort([...player.data], el => el.points || 0),\n            })),\n            el => head(el.data)?.points || 0\n        )\n    )\n\n    const topBenchGWReturner = head(\n        sort(\n            allPlayers\n                .map(player => ({\n                    ...player,\n                    data: sort(\n                        player.data.filter(data => data.multiplier === 0),\n                        el => el.rawPoints || 0\n                    ),\n                }))\n                .filter(player => player.data.length),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topSeasonReturner = head(sort(allPlayers, el => el.aggregates.totals.points))\n    const topBenchReturner = head(sort(allPlayers, el => el.aggregates.totals.benchPoints))\n\n    const weeks = data.history.current.length\n\n    const idealCaptain = head(\n        sort(\n            Object.entries(\n                Array.from(Array(weeks).keys())\n                    .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n                    .reduce(\n                        (acc, curr) =>\n                            curr\n                                ? {\n                                      ...acc,\n                                      [curr.element.id]: (acc[curr.element.id] ? acc[curr.element.id] : 0) + 1,\n                                  }\n                                : acc,\n                        {} as Record<number, number>\n                    )\n            ),\n            el => el[1]\n        )\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            ({getPointsLabel(week.points || 0)}, <SiteLink event={week.event.id} />)\n                                        </>\n                                    )\n                                }}\n                                reversed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        {topSeasonReturner.aggregates.totals.starts > 0 && (\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topSeasonReturner.aggregates.totals.points)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topSeasonReturner.data\n                                                    .filter(data => (data.multiplier || 0) > 0)\n                                                    .map(data => data.points)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        {topBenchReturner.aggregates.totals.benched > 0 && (\n                            <Player\n                                id={topBenchReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topBenchReturner.aggregates.totals.benchPoints)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topBenchReturner.data\n                                                    .filter(data => data.multiplier === 0)\n                                                    .map(data => data.rawPoints)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {goals && goals.aggregates.totals.goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.element.id} suffix={`${goals.aggregates.totals.goals}`} reversed />\n                    </li>\n                )}\n                {assists && assists.aggregates.totals.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.element.id} suffix={`${assists.aggregates.totals.assists}`} reversed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.aggregates.totals.ownGoals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.element.id} suffix={`${ownGoals.aggregates.totals.ownGoals}`} reversed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.aggregates.totals.goalsConceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player\n                            id={goalsConceded.element.id}\n                            suffix={`${goalsConceded.aggregates.totals.goalsConceded}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.aggregates.totals.cleanSheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player\n                            id={cleanSheets.element.id}\n                            suffix={`${cleanSheets.aggregates.totals.cleanSheets}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {saves && saves.aggregates.totals.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.element.id} suffix={`${saves.aggregates.totals.saves}`} reversed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.aggregates.totals.penaltiesMissed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player\n                            id={penaltiesMissed.element.id}\n                            suffix={`${penaltiesMissed.aggregates.totals.penaltiesMissed}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.aggregates.totals.penaltiesSaved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player\n                            id={penaltiesSaved.element.id}\n                            suffix={`${penaltiesSaved.aggregates.totals.penaltiesSaved}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {minutes && minutes.aggregates.totals.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player\n                            id={minutes.element.id}\n                            suffix={`${thousandsSeparator(minutes.aggregates.totals.minutes as number)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {reds && reds.aggregates.totals.redCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.element.id} suffix={`${reds.aggregates.totals.redCards}`} reversed />\n                    </li>\n                )}\n                {yellows && yellows.aggregates.totals.yellowCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.element.id} suffix={`${yellows.aggregates.totals.yellowCards}`} reversed />\n                    </li>\n                )}\n                {bonus && bonus.aggregates.totals.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.element.id} suffix={`${bonus.aggregates.totals.bonus}`} reversed />\n                    </li>\n                )}\n                {bps && bps.aggregates.totals.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player\n                            id={bps.element.id}\n                            suffix={`${thousandsSeparator(bps.aggregates.totals.bps)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.aggregates.totals.timesInDreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player\n                            id={inDreamteam.element.id}\n                            suffix={`${inDreamteam.aggregates.totals.timesInDreamteam}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.aggregates.totals.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player\n                            id={mostCaptaincies.element.id}\n                            suffix={`${mostCaptaincies.aggregates.totals.captaincies}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} reversed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype FormationInformation = {\n    count: number\n    points: (number | null)[]\n}\n\nconst TITLE = 'Formations'\n\nconst formatFormation = (formation: string) =>\n    sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const weeks = history.current.length\n\n    const formations = Object.values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map(\n                (el, index) => selections.map(player => (player[index] || 0) > 0).filter(val => !!val).length\n            )\n        })\n        .slice(1)\n\n    const formationData = Array.from(Array(weeks).keys())\n        .map((el, index) => formations.map(entries => entries[index]).join('-'))\n        .reduce(\n            (acc, formation, index) => ({\n                ...acc,\n                [formation]: {\n                    count: (acc[formation] ? acc[formation].count : 0) + 1,\n                    points: [\n                        ...(acc[formation] ? acc[formation].points : ([] as number[])),\n                        history.current[index].points,\n                    ],\n                },\n            }),\n            {} as Record<string, FormationInformation>\n        )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(formationData).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(formationData), el => el[1].count).map(([formation, information]) => {\n                        return (\n                            <li className=\"widget__list__item\" key={formation}>\n                                <span>{formatFormation(formation)}</span>\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(information.count)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(information.points)))},{' '}\n                                        {round(meanValue(information.points))} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default FormationWidget\n","import React, { useContext } from 'react'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Captains'\n\nconst CaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const captains = sort(\n        Object.values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {captains.length > 0 && (\n                <ul className=\"widget__list\">\n                    {captains.map(captain => {\n                        const points = captain.data.map(data => data.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={captain.player.element.id}>\n                                <Player id={captain.player.element.id} />\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(captain.data.length)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(points)))},{' '}\n                                        {round(meanValue(points))} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Gameweeks'\n\nconst GameweekWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <b>{getPointsLabel(round(meanValue(differences)))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <b>{differences.filter(diff => diff >= 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <b>{differences.filter(diff => diff < 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <b>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</b>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(bestGW.points)}</b> (\n                            <SiteLink event={bestGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(worstGW.points)}</b> (\n                            <SiteLink event={worstGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestGWRank.rank)}</b> (\n                            <SiteLink event={bestGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstGWRank.rank)}</b> (\n                            <SiteLink event={worstGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, reduce, getPointsLabel, pluralise } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Positions'\n\nconst PositionsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const positions: Record<string, number> = Object.entries(stats).reduce(\n        (acc, [elementType, elements]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }),\n        {}\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(positions).length > 0 && (\n                <ul className=\"widget__list\">\n                    <li className=\"widget__list__item\">\n                        <span>Total</span>\n                        <b>\n                            {pluralise(\n                                reduce(Object.values(positions), el => el),\n                                'Player',\n                                'Players'\n                            )}\n                        </b>\n                    </li>\n                    {Object.entries(positions).map(([elementType, elements]) => {\n                        const totalPoints = stats[Number(elementType)].map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={elementType}>\n                                <span>\n                                    {bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}\n                                </span>\n                                <div>\n                                    <div>\n                                        <b>{pluralise(elements, 'Player', 'Players')}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(totalPoints)))},{' '}\n                                        {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default PositionsWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport {\n    getAllPlayers,\n    head,\n    thousandsSeparator,\n    sumNumbers,\n    reduce,\n    round,\n    getPointsLabel,\n    last,\n} from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { StatData } from '../../types'\nimport { StatAggregateTotals } from '../../types'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Season'\n\nconst getAggregateValues = (players: StatData[], key: keyof StatAggregateTotals): number =>\n    sumNumbers(players.map(player => player.aggregates.totals[key]))\n\nconst SeasonWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!data || !entry || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const reds = getAggregateValues(allPlayers, 'redCards')\n    const yellows = getAggregateValues(allPlayers, 'yellowCards')\n    const goals = getAggregateValues(allPlayers, 'goals')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'cleanSheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goalsConceded')\n    const ownGoals = getAggregateValues(allPlayers, 'ownGoals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getAggregateValues(allPlayers, 'timesInDreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => [...player.data].findIndex(data => data.multiplier === 3) !== -1)\n        ?.data.find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(data.stats.chips).find(([gw, chip]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(\n              allPlayers\n                  .filter(player => ([...player.data][Number(bbWeek) - 1]?.position || 0) > 11)\n                  .map(player => [...player.data][Number(bbWeek) - 1]?.points || 0)\n          )\n        : null\n\n    const doubleDigitHauls = reduce(\n        allPlayers.map(player => [...player.data].filter(data => (data.rawPoints || 0) > 9).length),\n        el => el\n    )\n\n    const totalPlays = reduce(\n        allPlayers.map(player => player.data.filter(data => data.multiplier !== null).length),\n        el => el\n    )\n\n    const totalPoints =\n        (last(history.current)?.total_points || 0) -\n        (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1) - 1)?.total_points || 0)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>\n                        <b>{totalHits}</b> ({getPointsLabel(totalHits * -4)},{' '}\n                        {entry.summary_overall_points > 0 ? round(((totalHits * 4) / totalPoints) * 100) : 0}\n                        %)\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalPoints))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalBenched))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>\n                        <b>{doubleDigitHauls}</b>\n                        {totalPlays > 0 && ` (${round(doubleDigitHauls / totalPlays)}%)`}\n                    </span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel((tc.points || 0) / 3)}</b> (\n                            <SiteLink event={tc.event.id} />)\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel(bbPoints)}</b> (\n                            <SiteLink event={Number(bbWeek)} />)\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <b>{goals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <b>{assists}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <b>{ownGoals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <b>{goalsConceded}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <b>{cleanSheets}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <b>{saves}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <b>{penaltiesMissed}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <b>{penaltiesSaved}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <b>{thousandsSeparator(minutes)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <b>{reds}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <b>{yellows}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <b>{thousandsSeparator(bonus)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <b>{thousandsSeparator(bps)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <b>{inDreamteam}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget\n","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport './TeamsWidget.scss'\n\nconst TITLE = 'Teams'\n\nconst TeamsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [...acc, ...curr.map(el => el.element.team)], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"teams-widget\">\n            {teams.length > 0 && (\n                <ul className=\"widget__list\">\n                    {teams.map(team => {\n                        const players = allPlayers.filter(player => player.element.team === team.id)\n                        const points = players.map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"teams-widget__item\" key={team.id}>\n                                <div className=\"teams-widget__header\">\n                                    <Team team={team} />\n                                    <div>\n                                        <div>\n                                            <b>{counts[team.id] || 0}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(sumNumbers(points))},{' '}\n                                            {players.length > 0 ? round(meanValue(points)) : 0} <Metric metric=\"ppp\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    {Object.entries(stats).map(([position, players]) => {\n                                        const positionPlayers = players.filter(\n                                            player => player.element.team === team.id\n                                        )\n\n                                        if (!positionPlayers.length) {\n                                            return null\n                                        }\n\n                                        return (\n                                            <div\n                                                className=\"teams-widget__position\"\n                                                data-position={\n                                                    bootstrap.element_types.find(el => el.id === Number(position))\n                                                        ?.plural_name_short\n                                                }\n                                                key={position}\n                                            >\n                                                {sort(\n                                                    positionPlayers.filter(player => player.element.team === team.id),\n                                                    el => el.aggregates.totals.points\n                                                ).map(player => (\n                                                    <div key={player.element.id}>\n                                                        {player.element.web_name} (\n                                                        {getPointsLabel(player.aggregates.totals.points)})\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default TeamsWidget\n","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#aaa\"\n            className=\"swap-icon\"\n        >\n            <path d=\"M21 12l-18 12v-24z\" />\n        </svg>\n    )\n}\n\nexport default SwapIcon\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport './CaptainOpportunityWidget.scss'\n\nconst TITLE = 'Missed Captaincies'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys()).map((el, index) => ({\n        top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n        captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n    }))\n\n    return (\n        <Widget title={TITLE} cssClasses=\"captain-opportunity-widget\">\n            {improvements.length > 0 && (\n                <ul className=\"widget__list\">\n                    {improvements.map((improvement, index) => {\n                        if (!improvement.captain || !improvement.top) {\n                            return null\n                        }\n\n                        const captainData = improvement.captain.data[index]\n                        const topData = improvement.top.data[index]\n\n                        if (captainData.rawPoints === topData.rawPoints) {\n                            return null\n                        }\n\n                        return (\n                            <li className=\"widget__list__item\" key={captainData.event.id}>\n                                <div className=\"captain-opportunity-widget__group\">\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>OUT:</b> <Player id={improvement.captain.element.id} />\n                                    </div>\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>IN:</b> <Player id={improvement.top.element.id} />\n                                    </div>\n                                </div>\n                                <div className=\"captain-opportunity-widget__swap-info\">\n                                    <b>{getPointsLabel((captainData.rawPoints || 0) * 2)}</b> <SwapIcon />{' '}\n                                    <b>{getPointsLabel((topData.rawPoints || 0) * 2)} </b> (\n                                    <SiteLink event={captainData.event.id} />)\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget\n","import React, { useCallback, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { StatData } from '../../types'\nimport { normaliseDiacritics } from '../../utilities'\nimport { Button } from '../Button'\nimport { Widget } from '../Widget'\nimport { ModalInput } from '../ModalInput'\nimport './BasePlayerWidget.scss'\n\ntype Props = {\n    title: string\n    max: number\n    players: StatData[]\n    renderItem: (player: StatData) => JSX.Element | null\n    cssClasses?: string\n}\n\nconst renderList = (players: StatData[], renderItem: (player: StatData) => JSX.Element | null): JSX.Element => (\n    <ul className=\"widget__list\">\n        {players.map(player => {\n            const item = renderItem(player)\n\n            if (!item) {\n                return null\n            }\n\n            return (\n                <li className=\"widget__list__item\" key={player.element.id}>\n                    {item}\n                </li>\n            )\n        })}\n    </ul>\n)\n\nconst BasePlayerWidget: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n    const [showExtended, setShowExtended] = useState<boolean>(false)\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    const close = useCallback(() => {\n        setShowExtended(false)\n        setValue('')\n    }, [setShowExtended, setValue])\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const filteredPlayers = value\n        ? props.players.filter(player =>\n              normaliseDiacritics(player.element.web_name)\n                  .toLowerCase()\n                  .includes(normaliseDiacritics(value).toLowerCase())\n          )\n        : props.players\n\n    const topPlayers = props.players.slice(0, props.max)\n\n    return (\n        <>\n            <Widget title={props.title} cssClasses={classNames('base-player-widget', props.cssClasses)}>\n                {props.players.length > 0 && (\n                    <>\n                        {renderList(topPlayers, props.renderItem)}\n                        {props.players.length > props.max && (\n                            <Button label=\"Show all\" onClick={() => setShowExtended(true)} />\n                        )}\n                    </>\n                )}\n            </Widget>\n            {showExtended && (\n                <div className=\"modal modal--players\">\n                    <div className=\"modal__backdrop\" onClick={() => close()}></div>\n                    <Widget title={props.title} onClose={() => close()}>\n                        <ModalInput\n                            label=\"Name\"\n                            placeholder=\"Filter by name\"\n                            id=\"query\"\n                            value={value}\n                            onChange={value => setValue(value)}\n                            innerRef={callbackRef}\n                        />\n                        <div className=\"widget__scroller\">\n                            {filteredPlayers.length > 0 ? (\n                                renderList(filteredPlayers, props.renderItem)\n                            ) : (\n                                <div className=\"widget__empty\">No data available.</div>\n                            )}\n                        </div>\n                    </Widget>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default BasePlayerWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: 'selections' | 'starts' | 'benched'\n}\n\nconst SelectionWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(getAllPlayers(stats), el => el.aggregates.totals[props.metric])\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals[props.metric])}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default SelectionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, round } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = getAllPlayers(stats).map(element => {\n        const selections = element.aggregates.totals.selections\n        const starts = element.aggregates.totals.starts\n        const benched = element.aggregates.totals.benched\n\n        return {\n            ...element,\n            benched,\n            benchedPercentage: (benched / selections) * 100,\n            starts,\n            startsPercentage: (starts / selections) * 100,\n        }\n    })\n\n    const starters = [...elements].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const benchwarmers = [...elements].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={props.top ? starters : benchwarmers}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>\n                                {round(\n                                    ((props.top\n                                        ? element.aggregates.totals.starts\n                                        : element.aggregates.totals.benched) /\n                                        element.aggregates.totals.selections) *\n                                        100\n                                )}\n                                %\n                            </b>\n                        </div>\n                        <div className=\"muted\">\n                            {getGWCountLabel(\n                                props.top ? element.aggregates.totals.starts : element.aggregates.totals.benched\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DifferenceWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Overall Rank Evolution'\n\nconst OverallRankWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    let rankData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([...rankData], el => el.value))?.value || 0) * 1.05\n\n    rankData = [...rankData].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={rankData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area\n                            type=\"monotone\"\n                            dataKey=\"value\"\n                            stroke=\"#177B47\"\n                            fill={theme === 'dark' ? '#3a4556' : '#fff'}\n                            fillOpacity=\"1\"\n                        />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Gameweek Points'\n\nconst OverallRankWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pointsData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={pointsData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                        <YAxis interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Team Value Evolution'\n\nconst ValueWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const valueData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={valueData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <YAxis\n                            tickFormatter={value => `£${value / 10}`}\n                            domain={['auto', 'auto']}\n                            interval=\"preserveStartEnd\"\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [`£${Number(value) / 10}`, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getGWCountLabel, head, round, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Wrong Captains'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .filter(\n            (element, index) =>\n                (element.top?.data[index].rawPoints || 0) > (element.captain?.data[index].rawPoints || 0)\n        )\n        .reduce(\n            (acc, curr) =>\n                curr.captain\n                    ? {\n                          ...acc,\n                          [curr.captain.element.id]:\n                              (acc[curr.captain.element.id] ? acc[curr.captain.element.id] : 0) + 1,\n                      }\n                    : acc,\n            {} as Record<number, number>\n        )\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.aggregates.totals.captaincies,\n        }\n    }, {} as Record<number, number>)\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(improvements).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(improvements), el => el[1]).map(([player, count]) => (\n                        <li className=\"widget__list__item\" key={player}>\n                            <Player id={Number(player)} />\n                            <div>\n                                <div>\n                                    <b>\n                                        {count} out of {getGWCountLabel(timesUsed[Number(player)])}\n                                    </b>\n                                </div>\n                                <div className=\"muted\">{round((count / timesUsed[Number(player)]) * 100, 1)}%</div>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, head, last, round, sort } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\nconst TITLE = 'Total Points Contribution'\n\nconst ContributionWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    if (!entry || !data || !rawHistory) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const totalPoints =\n        (last(history.current)?.total_points || 0) -\n        (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1))?.total_points || 0)\n\n    const contributions = sort(getAllPlayers(stats), el => el.aggregates.totals.points)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={contributions}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <div>\n                        <div>\n                            <b>{round((player.aggregates.totals.points / totalPoints) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(player.aggregates.totals.points)}</div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ContributionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst getPointsShare = (player: StatData): number =>\n    100 - (player.aggregates.totals.rawPoints / player.element.total_points) * 100\n\nconst MissedPointsShareWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const elements = sort(\n        getAllPlayers(stats).filter(player => player.aggregates.totals.points > 0),\n        el => getPointsShare(el),\n        props.top ? 'desc' : 'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>{element.element.total_points > 0 && `${round(getPointsShare(element))}%`}</b>\n                        </div>\n                        <div className=\"muted\">\n                            {getPointsLabel(element.element.total_points - element.aggregates.totals.rawPoints)} in{' '}\n                            {getGWCountLabel(history.current.length - element.aggregates.totals.selections)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default MissedPointsShareWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, sort, thousandsSeparator } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 15\nconst TITLE = 'Other Players'\n\nconst NearMissesWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const totsIds = data.stats.tots.xi.concat(data.stats.tots.bench).map(player => player.element.id)\n    const players = sort(\n        getAllPlayers(data.stats.data).filter(player => !totsIds.includes(player.element.id)),\n        el => el.aggregates.totals.points\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={players}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <b>{getPointsLabel(thousandsSeparator(player.aggregates.totals.points))}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default NearMissesWidget\n","import React, { useContext } from 'react'\nimport { useMeanValue } from '../../hooks'\nimport { StatAggregateStreaks } from '../../types'\nimport { getAllPlayers, getGWCountLabel, getPointsLabel, round } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: keyof StatAggregateStreaks\n    showDetailedStats?: boolean\n}\n\nconst StreakWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const streakers = getAllPlayers(stats)\n        .sort((a, b) => {\n            const aStreak = a.aggregates.streaks[props.metric]\n            const bStreak = b.aggregates.streaks[props.metric]\n\n            const aStreakLength = a.aggregates.streaks[props.metric]?.length || 0\n            const bStreakLength = b.aggregates.streaks[props.metric]?.length || 0\n\n            if (bStreakLength - aStreakLength === 0) {\n                return (bStreak?.totalPoints || 0) - (aStreak?.totalPoints || 0)\n            }\n\n            return bStreakLength - aStreakLength\n        })\n        .filter(streaker => streaker.aggregates.streaks[props.metric] !== null)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={streakers}\n            max={MAX_ITEMS}\n            renderItem={streaker => {\n                const streak = streaker.aggregates.streaks[props.metric]\n\n                if (!streak) {\n                    return null\n                }\n\n                return (\n                    <>\n                        <Player id={streaker.element.id} />\n                        <div>\n                            <div className=\"duration\">\n                                <SiteLink event={streak.start.id} /> – <SiteLink event={streak.end.id} />\n                            </div>\n                            <div className=\"muted\">\n                                {props.showDetailedStats ? (\n                                    <>\n                                        {getGWCountLabel(streak.length)}, {getPointsLabel(streak.totalPoints || 0)},{' '}\n                                        {round(meanValue(streak.points || []))} <Metric metric=\"ppg\" />\n                                    </>\n                                ) : (\n                                    <div className=\"muted\">{getGWCountLabel(streak.length)}</div>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n        />\n    )\n}\n\nexport default StreakWidget\n","import React, { ChangeEvent } from 'react'\nimport classNames from 'classnames'\nimport './Checkbox.scss'\n\ntype Props = {\n    label: string\n    checked: boolean\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n    reversed?: boolean\n}\n\nconst Checkbox: React.FC<Props> = (props: Props) => (\n    <div className={classNames('checkbox', { 'checkbox--reversed': props.reversed })}>\n        <label className=\"checkbox__label\">\n            <input type=\"checkbox\" className=\"checkbox__element\" checked={props.checked} onChange={props.onChange} />\n            <div className=\"checkbox__visual\"></div>\n            {props.label}\n        </label>\n    </div>\n)\n\nexport default Checkbox\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './SegmentedControl.scss'\n\ntype SegmentedOption = {\n    label: string\n    value: string\n}\n\ntype Props = {\n    label: string\n    options: SegmentedOption[]\n    selected: string\n    setSelected: (value: string) => void\n}\n\nconst SegmentedControl: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"segmented-control\">\n            <label>{props.label}</label>\n            {props.options.length > 0 && (\n                <div className=\"segmented-control__options\">\n                    {props.options.map(option => (\n                        <div\n                            className={classNames('segmented-control__option', {\n                                'segmented-control__option--selected': props.selected === option.value,\n                            })}\n                        >\n                            <Button label={option.label} onClick={() => props.setSelected(option.value)} />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SegmentedControl\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Checkbox } from '../Checkbox'\nimport { RootState } from '../../reducers'\nimport { setMeanStrategy, setTheme } from '../../reducers/settings'\nimport { SegmentedControl } from '../SegmentedControl'\nimport { Modal } from '../Modal'\nimport './SettingsModal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst meanOptions = [\n    { label: 'Average', value: 'average' },\n    { label: 'Median', value: 'median' },\n]\n\nconst SettingsModal: React.FC<Props> = (props: Props) => {\n    const settings = useSelector((state: RootState) => state.settings)\n    const [checked, setChecked] = useState<boolean>(settings.theme === 'dark')\n    const [strategy, setStrategy] = useState<string>(settings.meanStrategy)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                props.onClose?.()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [props])\n\n    useEffect(() => {\n        if ((checked && settings.theme === 'light') || (!checked && settings.theme === 'dark')) {\n            dispatch(setTheme(checked ? 'dark' : 'light'))\n        }\n    }, [checked, dispatch, settings.theme])\n\n    useEffect(() => {\n        if (strategy !== settings.meanStrategy) {\n            dispatch(setMeanStrategy(strategy))\n        }\n    }, [dispatch, settings.meanStrategy, strategy])\n\n    return (\n        <Modal title=\"Settings\" onClose={() => props.onClose?.()} cssClasses=\"modal--settings\">\n            <SegmentedControl\n                label=\"Display values as\"\n                options={meanOptions}\n                selected={strategy}\n                setSelected={value => setStrategy(value)}\n            />\n            <Checkbox label=\"Use dark mode\" checked={checked} onChange={e => setChecked(e.target.checked)} reversed />\n        </Modal>\n    )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { getPointsLabel, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { RootState } from '../../reducers'\n\nconst TITLE = 'Milestones'\n\nconst MilestonesWidget: React.FC = () => {\n    const milestones = useSelector((state: RootState) => state.milestones.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!milestones || !entry) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>1st</span>\n                    <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points - milestones[0].total))}</b>\n                </li>\n                {milestones.length >= 2 && (\n                    <li className=\"widget__list__item\">\n                        <span>10K</span>\n                        <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points - milestones[1].total))}</b>\n                    </li>\n                )}\n                {milestones.length >= 3 && (\n                    <li className=\"widget__list__item\">\n                        <span>100K</span>\n                        <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points - milestones[2].total))}</b>\n                    </li>\n                )}\n                {milestones.length === 4 && (\n                    <li className=\"widget__list__item\">\n                        <span>1M</span>\n                        <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points - milestones[3].total))}</b>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default MilestonesWidget\n","import classNames from 'classnames'\nimport React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ValueType } from 'react-select'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { getChipAbbreviation, round, sort } from '../../utilities'\nimport { FilteredDataContext, OptionType } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport './PlayerOverview.scss'\n\ntype Props = {\n    sort: ValueType<OptionType>\n    ref: React.RefObject<HTMLDivElement>\n}\n\nconst sortings: { [key: string]: (statData: StatData) => number } = {\n    points: el => el.aggregates.totals.points,\n    selection: el => el.aggregates.totals.selections,\n    start: el => el.aggregates.totals.starts,\n    bench: el => el.aggregates.totals.benched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    },\n}\n\nconst renderPlayerList = (\n    stats: Stats,\n    bootstrap: Bootstrap,\n    sorting: OptionType,\n    meanValue: (series: (number | null)[]) => number\n): JSX.Element[] =>\n    Object.entries(stats).map(([elementType, statData]) => (\n        <div key={elementType}>\n            <li className=\"player-overview__category\">\n                <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                <span>{statData.length}</span>\n            </li>\n            {sort(\n                statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length),\n                el => sortings[sorting.value](el)\n            ).map(element => (\n                <li key={element.element.id} className=\"player-overview__item\">\n                    <div className=\"player-overview__player\">\n                        <Player id={element.element.id} extended />\n                    </div>\n                    <div className=\"player-overview__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('player-overview__stat', {\n                                    'player-overview__stat--benched': item.multiplier === 0,\n                                    'player-overview__stat--triple': item.multiplier === 3,\n                                    'player-overview__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"player-overview__totals\">\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.selections}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.selections / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.starts}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.starts / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.benched}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.benched / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.points}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {round(\n                                        meanValue(\n                                            element.data\n                                                .filter(data => (data.multiplier || 0) > 0)\n                                                .map(data => data.points)\n                                        )\n                                    )}{' '}\n                                    <Metric metric=\"ppg\" />)\n                                </span>\n                            </div>\n                        </span>\n                    </div>\n                </li>\n            ))}\n        </div>\n    ))\n\nexport const PlayerOverview: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    return (\n        <div\n            className={classNames('player-overview', {\n                'player-overview--cloaked': !id,\n            })}\n        >\n            <div className=\"player-overview__container\" ref={props.ref}>\n                {data && bootstrap && Object.keys(data.stats.data).length > 0 ? (\n                    <>\n                        <header className=\"player-overview__header\">\n                            <span className=\"player-overview__heading\">Player</span>\n                            {data?.history.current?.map(event => (\n                                <span className=\"player-overview__stat\" key={event.event}>\n                                    GW {event.event}\n                                    {data?.stats.chips[event.event] && (\n                                        <div>{getChipAbbreviation(data.stats.chips[event.event])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"player-overview__totals\">\n                                <span className=\"player-overview__stat\">Selected</span>\n                                <span className=\"player-overview__stat\">Starting</span>\n                                <span className=\"player-overview__stat\">Benched</span>\n                                <span className=\"player-overview__stat\">Points</span>\n                            </div>\n                        </header>\n                        <ul className=\"player-overview__list\">\n                            {renderPlayerList(data.stats.data, bootstrap, props.sort as OptionType, meanValue)}\n                        </ul>\n                    </>\n                ) : (\n                    <div className=\"player-overview__empty\">No data available.</div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport { useParams, useHistory } from 'react-router-dom'\nimport debounce from 'lodash/debounce'\nimport ReactSlider from 'react-slider'\nimport { StatData, Stats, History, Range } from '../../types'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport {\n    thousandsSeparator,\n    validateTeamId,\n    getPointsLabel,\n    last,\n    filterStatData,\n    filterHistoryData,\n    head,\n    getPastEvents,\n} from '../../utilities'\nimport { TeamModal } from '../TeamModal'\nimport { fetchDataWithId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport { MissedPointsShareWidget } from '../MissedPointsShareWidget'\nimport { NearMissesWidget } from '../NearMissesWidget'\nimport { StreakWidget } from '../StreakWidget'\nimport { SettingsModal } from '../SettingsModal'\nimport { MilestonesWidget } from '../MilestonesWidget'\nimport { PlayerOverview } from '../PlayerOverview/PlayerOverview'\nimport './Dashboard.scss'\n\nexport type OptionType = {\n    value: string\n    label: string\n}\n\ntype DashboardParams = {\n    team?: string\n}\n\nexport type FilteredData = {\n    history: History\n    stats: {\n        data: Stats\n        chips: {\n            [key: number]: string\n        }\n        tots: {\n            xi: StatData[]\n            bench: StatData[]\n        }\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nexport const FilteredDataContext = React.createContext<FilteredData | undefined>(undefined)\n\nconst Dashboard: React.FC = () => {\n    const [sort, setSort] = useState<ValueType<OptionType>>(sortOptions[0])\n    const [isSettingsOpen, setIsSettingsOpen] = useState<boolean>(false)\n    const [range, setRange] = useState<Range>({ start: 0, end: 37 })\n    const [filteredData, setFilteredData] = useState<FilteredData | undefined>(undefined)\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const rawStatsData = useSelector((state: RootState) => state.stats.data)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    const { team } = useParams<DashboardParams>()\n    const browserHistory = useHistory()\n\n    const [isModalOpen, setIsModalOpen] = useState(!team)\n\n    const playerOverviewRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme)\n    }, [theme])\n\n    useEffect(() => {\n        if (id && !team) {\n            browserHistory.push(`/${id}/`)\n        } else if (team && validateTeamId(team)) {\n            setIsModalOpen(false)\n\n            if (Number(team) !== id) {\n                dispatch(fetchDataWithId(Number(team)))\n            }\n        } else {\n            browserHistory.push('/')\n        }\n    }, [team, browserHistory, dispatch, id])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (playerOverviewRef && playerOverviewRef.current) {\n                playerOverviewRef.current.scrollTo(playerOverviewRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [rawStatsData])\n\n    useEffect(() => {\n        setIsModalOpen(!team)\n    }, [team])\n\n    useEffect(() => {\n        setIsModalOpen(!entry?.name)\n    }, [entry])\n\n    const debouncedFiltering = useRef(\n        debounce(async (rawStatsData, rawHistory, bootstrap, range) => {\n            const [filteredStatData, filteredHistoryData] = await Promise.all([\n                filterStatData(rawStatsData, bootstrap, range),\n                filterHistoryData(rawHistory, range),\n            ])\n\n            setFilteredData({\n                stats: filteredStatData,\n                history: filteredHistoryData,\n            })\n        }, 300)\n    ).current\n\n    useEffect(() => {\n        if (!rawStatsData || !bootstrap || !rawHistory) {\n            return\n        }\n\n        debouncedFiltering(rawStatsData, rawHistory, bootstrap, range)\n    }, [rawStatsData, bootstrap, rawHistory, range, debouncedFiltering, dispatch])\n\n    const totalPoints = filteredData\n        ? (last(filteredData.history.current)?.total_points || 0) -\n          (rawHistory?.current?.find(event => event.event === (head(filteredData.history.current)?.event || 1) - 1)\n              ?.total_points || 0)\n        : 0\n\n    return (\n        <FilteredDataContext.Provider value={filteredData}>\n            <div className=\"dashboard\">\n                {isModalOpen && <TeamModal onClose={() => setIsModalOpen(false)} />}\n                {isSettingsOpen && <SettingsModal onClose={() => setIsSettingsOpen(false)} />}\n                <div\n                    className={classNames('dashboard__loading', {\n                        'dashboard__loading--hidden': !isLoading,\n                    })}\n                >\n                    <Spinner />\n                </div>\n                <div className=\"dashboard__content\">\n                    {entry && (\n                        <header className=\"dashboard__entry\">\n                            <Widget>\n                                <h1 className=\"dashboard__title\">\n                                    <SiteLink label={entry.name} />\n                                    <div className=\"small muted\">\n                                        {getPointsLabel(thousandsSeparator(totalPoints))}\n                                        {entry.summary_overall_rank && (\n                                            <>\n                                                — Rank{' '}\n                                                {entry.summary_overall_rank &&\n                                                    thousandsSeparator(entry.summary_overall_rank)}\n                                            </>\n                                        )}\n                                    </div>\n                                </h1>\n                                <div>\n                                    <Button onClick={() => setIsSettingsOpen(true)} label=\"Settings\" />\n                                    {id !== undefined && (\n                                        <Button\n                                            onClick={() => setIsModalOpen(true)}\n                                            label=\"Change Team\"\n                                            disabled={isLoading}\n                                        />\n                                    )}\n                                </div>\n                            </Widget>\n                        </header>\n                    )}\n                    <div className=\"dashboard__widgets dashboard__widgets--split\">\n                        <TotsWidget />\n                        <NearMissesWidget />\n                    </div>\n                    <div className=\"dashboard__widgets dashboard__widgets-duo\">\n                        <PlayerStatsWidget />\n                        <SeasonWidget />\n                        <HistoryWidget />\n                        <GameweekWidget />\n                        <MilestonesWidget />\n                    </div>\n                    <h2>\n                        <span>Players</span>\n                    </h2>\n                    <div className=\"dashboard__meta\">\n                        <label className=\"dashboard__meta__label\">Sort by</label>\n                        <Select\n                            options={sortOptions}\n                            value={sort}\n                            onChange={option => setSort(option)}\n                            styles={{\n                                container: provided => ({ ...provided, width: '100%' }),\n                                menu: provided => ({ ...provided, zIndex: 20 }),\n                            }}\n                        />\n                        <div className=\"dashboard__legend\">\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--started\"></div>\n                                Started\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--benched\"></div>\n                                Benched\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--triple\"></div>\n                                TC\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator\"></div>\n                                Not Selected\n                            </div>\n                        </div>\n                    </div>\n                    <PlayerOverview sort={sort} ref={playerOverviewRef} />\n                    <div className=\"dashboard__widgets\">\n                        <PositionsWidget />\n                        <FormationWidget />\n                        <SelectionWidget title=\"Top Selections\" metric=\"selections\" />\n                        <SelectionWidget title=\"Top Starters\" metric=\"starts\" />\n                        <SelectionWidget title=\"Top Bench Players\" metric=\"benched\" />\n                        <DifferenceWidget title=\"Most Consistent Starters\" top />\n                        <DifferenceWidget title=\"Most Consistent Bench Players\" />\n                    </div>\n                    <h2>\n                        <span>Teams</span>\n                    </h2>\n                    <div className=\"dashboard__widgets dashboard__widgets--single\">\n                        <TeamsWidget />\n                    </div>\n                    <h2>\n                        <span>Captains</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <CaptainWidget />\n                        <CaptainOpportunityWidget />\n                        <WrongCaptainWidget />\n                    </div>\n                    <h2>\n                        <span>Streaks</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <StreakWidget title=\"Highest Non-Blank Streaks\" metric=\"nonBlank\" showDetailedStats />\n                        <StreakWidget title=\"Highest Selection Streaks\" metric=\"selection\" showDetailedStats />\n                        <StreakWidget title=\"Highest Start Streaks\" metric=\"start\" showDetailedStats />\n                        <StreakWidget title=\"Highest Bench Appearance Streaks\" metric=\"bench\" />\n                    </div>\n                    <h2>\n                        <span>Contributions</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <ContributionWidget />\n                        {range.end - range.start + 1 === rawHistory?.current?.length && (\n                            <>\n                                <MissedPointsShareWidget title=\"Most Points Scored Outside of Team\" top />\n                                <MissedPointsShareWidget title=\"Fewest Points Scored Outside of Team\" />\n                            </>\n                        )}\n                    </div>\n                    <h2>\n                        <span>Graphs</span>\n                    </h2>\n                    <div className=\"dashboard__graphs\">\n                        <OverallRankWidget />\n                        <PointsWidget />\n                        <ValueWidget />\n                    </div>\n                    <div className=\"dashboard__legal\">\n                        <p>\n                            FPL Stats uses data from the official Premier League Fantasy API. This site is not\n                            affiliated with the Premier League.\n                        </p>\n                    </div>\n                    {bootstrap && getPastEvents(bootstrap.events).length > 0 && (\n                        <div className=\"dashboard__slider-wrapper\">\n                            <ReactSlider\n                                className=\"dashboard__slider\"\n                                value={[range.start, range.end]}\n                                min={(head(getPastEvents(bootstrap.events))?.id || 1) - 1}\n                                max={(last(getPastEvents(bootstrap.events))?.id || 38) - 1}\n                                onChange={([start, end]) => setRange({ start, end })}\n                                renderThumb={(props, state) => <div {...props}>GW {state.valueNow + 1}</div>}\n                                pearling\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </FilteredDataContext.Provider>\n    )\n}\n\nexport default Dashboard\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Standings } from '../types'\nimport { head, last } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst OVERALL_ID = 314\n\nconst fetchStanding = async (page: number): Promise<Standings> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/leagues-classic/${OVERALL_ID}/standings?page_standings=${page}`\n        )}`\n    )\n\n    return await response.json()\n}\n\nexport const fetchMilestones = createAsyncThunk('milestones/fetch', async (arg: unknown, thunkAPI) => {\n    thunkAPI.dispatch(fetchMilestonesStart())\n    thunkAPI.dispatch(startLoading())\n\n    const results = await Promise.all([fetchStanding(1), fetchStanding(20), fetchStanding(200), fetchStanding(20000)])\n\n    const data = results.map((standings, index) =>\n        index === 0 ? head(standings.standings.results) : last(standings.standings.results)\n    )\n\n    thunkAPI.dispatch(fetchMilestonesSuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst milestones = createSlice({\n    name: 'milestones',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchMilestonesStart(state) {\n            state.data = undefined\n        },\n        fetchMilestonesSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchMilestonesStart, fetchMilestonesSuccess } = milestones.actions\n\nexport default milestones.reducer\n","import { combineReducers } from 'redux'\nimport { Bootstrap, History, Entry, Picks, LiveEvent, StandingsPlayer } from '../types'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport history from './history'\nimport loading from './loading'\nimport milestones from './milestones'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data:\n            | {\n                  pick: Picks\n                  live: LiveEvent\n              }[]\n            | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n        theme: 'light' | 'dark'\n    }\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n    milestones: {\n        data: StandingsPlayer[] | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n    milestones,\n})\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport reportWebVitals from './reportWebVitals'\nimport './index.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureAppStore()}>\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/:team/\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <Dashboard />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n\nreportWebVitals()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nconst STORAGE_VERSION = '2'\n\nconst isStale = () => localStorage.getItem('storageVersion') !== STORAGE_VERSION\n\nexport default function configureAppStore() {\n    const storage = localStorage.getItem('applicationSettings')\n\n    const preloadedState = storage !== null && !isStale() ? JSON.parse(storage) : {}\n\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n        preloadedState: {\n            settings: {\n                theme: 'light',\n                meanStrategy: 'average',\n                id: undefined,\n                range: {\n                    start: 0,\n                    end: 38,\n                },\n                ...preloadedState,\n            },\n        },\n    })\n\n    store.subscribe(() => {\n        const state = store.getState().settings\n\n        localStorage.setItem('storageVersion', STORAGE_VERSION)\n        localStorage.setItem(\n            'applicationSettings',\n            JSON.stringify({\n                theme: state.theme,\n                meanStrategy: state.meanStrategy,\n            })\n        )\n    })\n\n    return store\n}\n"],"sourceRoot":""}