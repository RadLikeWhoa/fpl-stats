{"version":3,"sources":["serviceWorker.ts","components/Player/Player.tsx","components/Button/Button.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/settings.ts","utilities/arrays.ts","utilities/numbers.ts","utilities/stats.ts","utilities/events.ts","utilities/chips.ts","utilities/strings.ts","components/Modal/Modal.tsx","reducers/loading.ts","reducers/entry.ts","reducers/history.ts","reducers/stats.ts","reducers/bootstrap.ts","reducers/settings.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/BasePlayerWidget/BasePlayerWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/MissedPointsShareWidget/MissedPointsShareWidget.tsx","components/NearMissesWidget/NearMissesWidget.tsx","components/StreakWidget/StreakWidget.tsx","components/Checkbox/Checkbox.tsx","components/SegmentedControl/SegmentedControl.tsx","components/Settings/Settings.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","Player","props","bootstrap","useSelector","state","data","player","elements","find","el","id","team","teams","position","element_types","element_type","className","classNames","extended","reversed","src","code","singular_name_short","alt","web_name","suffix","title","name","short_name","Button","type","onClick","disabled","label","Widget","settings","cssClasses","onClose","aria-label","children","Spinner","validateTeamId","value","number","Number","isNaN","isInteger","sort","series","comparator","direction","a","b","head","length","last","reduce","extractor","initialValue","acc","curr","thousandsSeparator","toString","replace","sumNumbers","round","precision","formatted","toFixed","test","split","getTotalSelections","statData","filter","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalRawPoints","rawPoints","getTotalBenchPoints","getAllPlayers","stats","Object","values","concat","getPlayerAggregate","key","getTopStatAggregate","players","aggregates","totals","getStreak","comparison","ignoreBlanks","streaks","slice","max","Math","start","indexOf","map","streak","event","end","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getTeamOfTheSeason","gk","def","mid","fwd","top","rest","xi","element","bench","getPastEvents","events","timestamp","Date","now","deadline_time_epoch","getShortName","pop","chips","bboost","freehit","wildcard","initialCaps","charAt","toUpperCase","toLowerCase","pluralise","singular","plural","parsedValue","getGWCountLabel","getPointsLabel","normaliseDiacritics","normalize","Modal","useState","setValue","isLoading","loading","history","useHistory","close","useCallback","cancel","push","useEffect","listener","e","document","addEventListener","removeEventListener","callbackRef","inputElement","focus","onSubmit","preventDefault","htmlFor","placeholder","onChange","target","ref","createSlice","initialState","reducers","startLoading","finishLoading","actions","entry","undefined","fetchEntryStart","fetchEntrySuccess","action","payload","fetchEntry","dispatch","fetch","encodeURIComponent","response","json","fetchHistoryStart","fetchHistorySuccess","fetchHistory","emptyAggregates","redCards","yellowCards","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","timesInDreamteam","bps","bonus","captaincies","benchPoints","selections","starts","benched","selection","nonBlank","tots","buildDataStart","buildDataSuccess","fetchPicks","fetchEvent","fetchGameweekInformation","Promise","all","live","buildData","gameweeks","forEach","active_chip","entry_history","picks","item","total_points","keys","index","latestFetch","fetchBootstrapStart","fetchBootstrapSuccess","localStorage","setItem","fetchBootstrap","meanStrategy","theme","setId","setMeanStrategy","setTheme","fetchDataWithId","useMeanLabel","strategy","useMeanValue","average","sorted","ceil","median","TITLE","HistoryWidget","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","TotsPlayer","TotsWidget","explanations","ppg","ppp","Metric","metric","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","inDreamteam","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","current","idealCaptain","entries","Array","from","week","returner","renderTopBenchGWReturner","FormationWidget","formations","val","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","sum","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","getAggregateValues","SeasonWidget","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","doubleDigitHauls","totalPlays","summary_overall_points","Team","TeamsWidget","counts","positionPlayers","data-position","plural_name_short","SwapIcon","xmlns","width","height","viewBox","fill","d","CaptainOpportunityWidget","improvements","improvement","captainData","topData","renderList","renderItem","BasePlayerWidget","showExtended","setShowExtended","filteredPlayers","includes","topPlayers","SelectionWidget","DifferenceWidget","benchedPercentage","startsPercentage","starters","percentageDiff","benchwarmers","OverallRankWidget","overall_rank","margin","bottom","left","right","dataKey","fillOpacity","stroke","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","ValueWidget","bank","WrongCaptainWidget","timesUsed","ContributionWidget","contributions","getPointsShare","MissedPointsShareWidget","NearMissesWidget","totsIds","StreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","showDetailedStats","Checkbox","checked","SegmentedControl","options","option","selected","setSelected","meanOptions","Settings","setChecked","setStrategy","useDispatch","sortings","alphabet","charCodeAt","sortOptions","Dashboard","setSort","isSettingsOpen","setIsSettingsOpen","useParams","isModalOpen","setIsModalOpen","dashboardRef","useRef","documentElement","setAttribute","setTimeout","scrollTo","scrollWidth","summary_overall_rank","styles","container","provided","menu","zIndex","top_element_info","sorting","renderPlayerList","PointsWidget","combineReducers","ReactDOM","render","StrictMode","store","storage","getItem","preloadedState","isStale","JSON","parse","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","subscribe","stringify","getState","removeItem","configureAppStore","basename","process","path","exact","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52a6567d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    extended?: boolean\n    reversed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div\n            className={classNames('player', {\n                'player--condensed': !props.extended,\n                'player--reversed': props.reversed,\n            })}\n        >\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>\n                        {props.suffix && !props.extended ? <b>{player?.web_name}</b> : player?.web_name}\n                        {typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}\n                    </span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>\n                        {team?.short_name}\n                    </span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button className=\"button\" type={props.type || 'button'} onClick={props.onClick} disabled={props.disabled}>\n        {props.label}\n    </button>\n)\n\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Button } from '../Button'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    cssClasses?: string\n    onClose?: () => void\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div\n            className={classNames('widget', props.cssClasses, {\n                'widget--cloaked': !id,\n            })}\n        >\n            {props.title && (\n                <h3 className=\"widget__title\">\n                    {props.title}{' '}\n                    {props.onClose && <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />}\n                </h3>\n            )}\n            <div className=\"widget__content\">\n                {props.children || <div className=\"widget__empty\">No data available.</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget\n","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner\n","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}\n","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return [...series].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1))\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series.reduce((acc, curr) => acc + extractor(curr), initialValue)\n}\n","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return reduce(series, el => el)\n}\n\nexport const average = (series: number[]): number => {\n    return series.length ? sumNumbers(series) / series.length : 0\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series, el => el)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}\n","import { ElementStats, StatData, Stats, StatDataGameweek, Streak } from '../types'\nimport { StatAggregateTotals } from '../types/stat-aggregate-totals'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalCaptaincies = (statData: StatData): number => {\n    return statData.data.filter(data => (data.multiplier || 0) > 1).length\n}\n\nexport const getTotalRawPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.rawPoints || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => (el.multiplier === 0 ? el.rawPoints || 0 : 0))\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const getPlayerAggregate = (player: StatData, key: keyof ElementStats): number =>\n    player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof StatAggregateTotals): StatData | null =>\n    head(sort(players, el => el.aggregates.totals[key]))\n\nconst getStreak = (\n    statData: StatData,\n    comparison: (gw: StatDataGameweek) => boolean,\n    ignoreBlanks: boolean = false\n): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [...acc, 1]\n            }\n\n            return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n        }\n\n        return [...acc, 0]\n    }, (ignoreBlanks ? [0] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start =\n        statData.data[sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => (streak > 0 ? streak : 1)))].event\n    const end = statData.data[start.id - 2 + max].event\n\n    const points = sumNumbers(statData.data.slice(start.id - 1, start.id - 1 + max).map(event => event.points || 0))\n\n    return {\n        start,\n        end,\n        length: max,\n        points,\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 2)\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nexport const getTeamOfTheSeason = (stats: Stats): { xi: StatData[]; bench: StatData[] } => {\n    const gk = sort(stats[1], el => el.aggregates.totals.points).slice(0, MAX_GK)\n    const def = sort(stats[2], el => el.aggregates.totals.points).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => el.aggregates.totals.points).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => el.aggregates.totals.points).slice(0, MAX_FWD)\n\n    const top = gk\n        .slice(0, MIN_GK)\n        .concat(def.slice(0, MIN_DEF))\n        .concat(mid.slice(0, MIN_MID))\n        .concat(fwd.slice(0, MIN_FWD))\n    const rest = sort(\n        def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)),\n        el => el.aggregates.totals.points\n    )\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = sort(gk.slice(MIN_GK).concat(rest.slice(4)), el => el.element.element_type, 'asc')\n\n    return {\n        xi,\n        bench,\n    }\n}\n","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}\n","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null\n","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`\n\nexport const pluralise = (value: number | string, singular: string, plural: string) => {\n    const parsedValue = typeof value === 'number' ? value : Number(value.replace(/,/g, ''))\n\n    return `${value} ${parsedValue === 1 ? singular : plural}`\n}\n\nexport const getGWCountLabel = (value: number | string): string => pluralise(value, 'GW', 'GWs')\n\nexport const getPointsLabel = (value: number | string): string => pluralise(value, 'pt', 'pts')\n\nexport const normaliseDiacritics = (value: string): string => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '../Button'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const history = useHistory()\n\n    const close = useCallback(\n        (cancel: boolean) => {\n            if (!cancel) {\n                history.push(`/${value}/`)\n            } else {\n                props.onClose?.()\n            }\n        },\n        [value, history, props]\n    )\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    return (\n        <form\n            onSubmit={e => {\n                close(false)\n                e.preventDefault()\n            }}\n        >\n            <div className=\"modal\">\n                <div className=\"modal__backdrop\" onClick={() => close(true)}></div>\n                <div className=\"modal__element\">\n                    <h3 className=\"modal__header\">Enter Your Team ID</h3>\n                    <div className=\"modal__body\">\n                        <div className=\"modal__input-wrapper\">\n                            <label htmlFor=\"query\">Team ID</label>\n                            <input\n                                className=\"modal__input\"\n                                type=\"text\"\n                                placeholder=\"e.g. 4654486\"\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                ref={callbackRef}\n                            />\n                        </div>\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button label=\"Show Stats\" type=\"submit\" disabled={!validateTeamId(value) || isLoading} />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry =\n    (id: number): ThunkAction<void, History, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchEntryStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`\n        )\n\n        const data = await response.json()\n\n        dispatch(fetchEntrySuccess(data))\n        dispatch(finishLoading())\n    }\n\nexport default entry.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory =\n    (entry: number): ThunkAction<void, History, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchHistoryStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(\n                `https://fantasy.premierleague.com/api/entry/${entry}/history/`\n            )}`\n        )\n\n        const data = await response.json()\n\n        dispatch(fetchHistorySuccess(data))\n        dispatch(finishLoading())\n    }\n\nexport default history.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport {\n    getPastEvents,\n    getPlayerAggregate,\n    getTotalPoints,\n    getTotalBenchPoints,\n    getTotalRawPoints,\n    getTotalSelections,\n    getTotalStarts,\n    getTotalBenched,\n    getTotalCaptaincies,\n    getSelectionStreak,\n    getStartStreak,\n    getBenchStreak,\n    getNonBlankStreak,\n    getTeamOfTheSeason,\n} from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst emptyAggregates = {\n    totals: {\n        redCards: 0,\n        yellowCards: 0,\n        goals: 0,\n        assists: 0,\n        cleanSheets: 0,\n        goalsConceded: 0,\n        ownGoals: 0,\n        saves: 0,\n        minutes: 0,\n        penaltiesMissed: 0,\n        penaltiesSaved: 0,\n        timesInDreamteam: 0,\n        bps: 0,\n        bonus: 0,\n        captaincies: 0,\n        points: 0,\n        rawPoints: 0,\n        benchPoints: 0,\n        selections: 0,\n        starts: 0,\n        benched: 0,\n    },\n    streaks: {\n        selection: null,\n        start: null,\n        bench: null,\n        nonBlank: null,\n    },\n}\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n        chips: undefined,\n        tots: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.data = undefined\n            state.chips = undefined\n            state.tots = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.tots = action.payload.tots\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/event/${event}/live/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks; live: LiveEvent }> => {\n    const [pick, live] = await Promise.all([fetchPicks(event, entry), fetchEvent(event)])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData =\n    (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(buildDataStart())\n        dispatch(startLoading())\n\n        const gameweeks = await Promise.all(\n            getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n        )\n\n        const stats: { [key: number]: StatData } = {}\n        const chips: { [key: number]: string } = {}\n\n        gameweeks.forEach(gw => {\n            if (gw.pick.active_chip) {\n                chips[gw.pick.entry_history.event] = gw.pick.active_chip\n            }\n\n            gw.pick.picks.forEach(item => {\n                if (!stats[item.element]) {\n                    stats[item.element] = {\n                        element: bootstrap.elements.find(el => el.id === item.element)!,\n                        data: bootstrap.events\n                            .filter(event => event.id < gw.pick.entry_history.event)\n                            .map(event => ({\n                                event,\n                                multiplier: null,\n                                points: null,\n                                rawPoints: null,\n                                stats: null,\n                                position: null,\n                            })),\n                        aggregates: emptyAggregates,\n                    }\n                }\n\n                const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n                stats[item.element] = {\n                    ...stats[item.element],\n                    data: [\n                        ...stats[item.element].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: item.multiplier,\n                            points: points !== null ? points * item.multiplier : points,\n                            rawPoints: points,\n                            stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                            position: item.position,\n                        },\n                    ],\n                }\n            })\n\n            Object.keys(stats).forEach(player => {\n                const index = Number(player)\n\n                if (stats[index].data.length < gw.pick.entry_history.event) {\n                    stats[index] = {\n                        ...stats[index],\n                        data: [\n                            ...stats[index].data,\n                            {\n                                event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                                multiplier: null,\n                                points: null,\n                                rawPoints: null,\n                                stats: null,\n                                position: null,\n                            },\n                        ],\n                    }\n                }\n            })\n        })\n\n        Object.keys(stats).forEach(id => {\n            const player = stats[Number(id)]\n\n            stats[Number(id)].aggregates = {\n                totals: {\n                    redCards: getPlayerAggregate(player, 'red_cards'),\n                    yellowCards: getPlayerAggregate(player, 'yellow_cards'),\n                    goals: getPlayerAggregate(player, 'goals_scored'),\n                    assists: getPlayerAggregate(player, 'assists'),\n                    cleanSheets: getPlayerAggregate(player, 'clean_sheets'),\n                    goalsConceded: getPlayerAggregate(player, 'goals_conceded'),\n                    ownGoals: getPlayerAggregate(player, 'own_goals'),\n                    saves: getPlayerAggregate(player, 'saves'),\n                    minutes: getPlayerAggregate(player, 'minutes'),\n                    penaltiesMissed: getPlayerAggregate(player, 'penalties_missed'),\n                    penaltiesSaved: getPlayerAggregate(player, 'penalties_saved'),\n                    timesInDreamteam: getPlayerAggregate(player, 'in_dreamteam'),\n                    bps: getPlayerAggregate(player, 'bps'),\n                    bonus: getPlayerAggregate(player, 'bonus'),\n                    captaincies: getTotalCaptaincies(player),\n                    points: getTotalPoints(player),\n                    rawPoints: getTotalRawPoints(player),\n                    benchPoints: getTotalBenchPoints(player),\n                    selections: getTotalSelections(player),\n                    starts: getTotalStarts(player),\n                    benched: getTotalBenched(player),\n                },\n                streaks: {\n                    selection: getSelectionStreak(player),\n                    start: getStartStreak(player),\n                    bench: getBenchStreak(player),\n                    nonBlank: getNonBlankStreak(player),\n                },\n            }\n        })\n\n        const data = Object.values(stats).reduce(\n            (acc: Stats, curr) => ({\n                ...acc,\n                [curr.element.element_type]: [...(acc[curr.element.element_type] || []), curr],\n            }),\n            {}\n        )\n\n        dispatch(\n            buildDataSuccess({\n                data,\n                chips,\n                tots: getTeamOfTheSeason(data),\n            })\n        )\n        dispatch(finishLoading())\n    }\n\nexport default stats.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { fetchEntry } from './entry'\nimport { fetchHistory } from './history'\nimport { finishLoading, startLoading } from './loading'\nimport { buildData } from './stats'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n        latestFetch: null,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            localStorage.setItem('latestFetch', `${Date.now()}`)\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap =\n    (id: number): ThunkAction<void, any, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchBootstrapStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(\n                'https://fantasy.premierleague.com/api/bootstrap-static/'\n            )}`\n        )\n\n        const data = await response.json()\n\n        dispatch(finishLoading())\n\n        dispatch(buildData(data, id))\n        dispatch(fetchHistory(id))\n        dispatch(fetchEntry(id))\n\n        dispatch(fetchBootstrapSuccess(data))\n    }\n\nexport default bootstrap.reducer\n","import { Action, createSlice, ThunkAction } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\nimport { fetchBootstrap } from './bootstrap'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: undefined,\n        meanStrategy: 'average',\n        theme: 'light',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n        },\n        setTheme(state, action) {\n            state.theme = action.payload\n        },\n    },\n})\n\nexport const { setId, setMeanStrategy, setTheme } = settings.actions\n\nexport const fetchDataWithId =\n    (id: number): ThunkAction<void, Bootstrap, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(setId(id))\n        dispatch(fetchBootstrap(id))\n    }\n\nexport default settings.reducer\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst TITLE = 'Historical Data'\n\nconst HistoryWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return <Widget title={TITLE} />\n    }\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestRankedSeason.rank)}</b> ({bestRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstRankedSeason.rank)}</b> ({worstRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(bestPointSeason.total_points)}</b> ({bestPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(worstPointSeason.total_points)}</b> ({worstPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <b>\n                        {thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map(season => season.rank)), 0)))}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <b>\n                        {thousandsSeparator(\n                            Number(round(meanValue(pastSeasonsByPoints.map(season => season.total_points)), 0))\n                        )}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <b>{top1k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <b>{top10k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <b>{top100k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <b>{top1m}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">{props.points}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst TITLE = 'Team of the Season'\n\nconst TotsWidget: React.FC = () => {\n    const tots = useSelector((state: RootState) => state.stats.tots)\n\n    if (!tots) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE} cssClasses=\"tots-widget\">\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 1)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 2)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 3)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 4)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {tots.bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={player.aggregates.totals.points}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget\n","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    ppg: 'Points per Game',\n    ppp: 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>\n            {props.metric}\n        </abbr>\n    )\n}\n\nexport default Metric\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { StatData } from '../../types'\nimport {\n    getAllPlayers,\n    getTopStatAggregate,\n    thousandsSeparator,\n    round,\n    sort,\n    head,\n    getPointsLabel,\n} from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Player Stats'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            ({getPointsLabel(week.rawPoints || 0)}, <SiteLink event={week.event.id} />)\n                        </>\n                    )}\n                    reversed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!history || !stats) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getTopStatAggregate(allPlayers, 'redCards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellowCards')\n    const goals = getTopStatAggregate(allPlayers, 'goals')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'cleanSheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goalsConceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'ownGoals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'timesInDreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(allPlayers, el => el.aggregates.totals.captaincies))\n\n    const topReturner = head(\n        sort(\n            allPlayers.map(player => ({\n                ...player,\n                data: sort([...player.data], el => el.points || 0),\n            })),\n            el => head(el.data)?.points || 0\n        )\n    )\n\n    const topBenchGWReturner = head(\n        sort(\n            allPlayers\n                .map(player => ({\n                    ...player,\n                    data: sort(\n                        player.data.filter(data => data.multiplier === 0),\n                        el => el.rawPoints || 0\n                    ),\n                }))\n                .filter(player => player.data.length),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topSeasonReturner = head(sort(allPlayers, el => el.aggregates.totals.points))\n    const topBenchReturner = head(sort(allPlayers, el => el.aggregates.totals.benchPoints))\n\n    const weeks = history.current.length\n\n    const idealCaptain = head(\n        sort(\n            Object.entries(\n                Array.from(Array(weeks).keys())\n                    .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n                    .reduce(\n                        (acc, curr) =>\n                            curr\n                                ? {\n                                      ...acc,\n                                      [curr.element.id]: (acc[curr.element.id] ? acc[curr.element.id] : 0) + 1,\n                                  }\n                                : acc,\n                        {} as Record<number, number>\n                    )\n            ),\n            el => el[1]\n        )\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            ({getPointsLabel(week.points || 0)}, <SiteLink event={week.event.id} />)\n                                        </>\n                                    )\n                                }}\n                                reversed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        {topSeasonReturner.aggregates.totals.starts > 0 && (\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topSeasonReturner.aggregates.totals.points)},{' '}\n                                        {round(\n                                            topSeasonReturner.aggregates.totals.points /\n                                                topSeasonReturner.aggregates.totals.starts\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        {topBenchReturner.aggregates.totals.benched > 0 && (\n                            <Player\n                                id={topBenchReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topBenchReturner.aggregates.totals.benchPoints)},{' '}\n                                        {round(\n                                            topBenchReturner.aggregates.totals.benchPoints /\n                                                topBenchReturner.aggregates.totals.benched\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {goals && goals.aggregates.totals.goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.element.id} suffix={`${goals.aggregates.totals.goals}`} reversed />\n                    </li>\n                )}\n                {assists && assists.aggregates.totals.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.element.id} suffix={`${assists.aggregates.totals.assists}`} reversed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.aggregates.totals.ownGoals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.element.id} suffix={`${ownGoals.aggregates.totals.ownGoals}`} reversed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.aggregates.totals.goalsConceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player\n                            id={goalsConceded.element.id}\n                            suffix={`${goalsConceded.aggregates.totals.goalsConceded}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.aggregates.totals.cleanSheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player\n                            id={cleanSheets.element.id}\n                            suffix={`${cleanSheets.aggregates.totals.cleanSheets}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {saves && saves.aggregates.totals.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.element.id} suffix={`${saves.aggregates.totals.saves}`} reversed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.aggregates.totals.penaltiesMissed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player\n                            id={penaltiesMissed.element.id}\n                            suffix={`${penaltiesMissed.aggregates.totals.penaltiesMissed}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.aggregates.totals.penaltiesSaved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player\n                            id={penaltiesSaved.element.id}\n                            suffix={`${penaltiesSaved.aggregates.totals.penaltiesSaved}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {minutes && minutes.aggregates.totals.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player\n                            id={minutes.element.id}\n                            suffix={`${thousandsSeparator(minutes.aggregates.totals.minutes as number)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {reds && reds.aggregates.totals.redCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.element.id} suffix={`${reds.aggregates.totals.redCards}`} reversed />\n                    </li>\n                )}\n                {yellows && yellows.aggregates.totals.yellowCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.element.id} suffix={`${yellows.aggregates.totals.yellowCards}`} reversed />\n                    </li>\n                )}\n                {bonus && bonus.aggregates.totals.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.element.id} suffix={`${bonus.aggregates.totals.bonus}`} reversed />\n                    </li>\n                )}\n                {bps && bps.aggregates.totals.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player\n                            id={bps.element.id}\n                            suffix={`${thousandsSeparator(bps.aggregates.totals.bps)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.aggregates.totals.timesInDreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player\n                            id={inDreamteam.element.id}\n                            suffix={`${inDreamteam.aggregates.totals.timesInDreamteam}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.aggregates.totals.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player\n                            id={mostCaptaincies.element.id}\n                            suffix={`${mostCaptaincies.aggregates.totals.captaincies}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} reversed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst TITLE = 'Formations'\n\nconst formatFormation = (formation: string) =>\n    sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object.values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map(\n                (el, index) => selections.map(player => (player[index] || 0) > 0).filter(val => !!val).length\n            )\n        })\n        .slice(1)\n\n    const data = Array.from(Array(weeks).keys())\n        .map((el, index) => formations.map(entries => entries[index]).join('-'))\n        .reduce(\n            (acc, formation, index) => ({\n                ...acc,\n                [formation]: {\n                    count: (acc[formation] ? acc[formation].count : 0) + 1,\n                    points: (acc[formation] ? acc[formation].points : 0) + history.current[index].points,\n                },\n            }),\n            {} as Record<string, FormationInformation>\n        )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(data).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(data), el => el[1].count).map(([formation, information]) => {\n                        return (\n                            <li className=\"widget__list__item\" key={formation}>\n                                <span>{formatFormation(formation)}</span>\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(information.count)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(information.points))},{' '}\n                                        {round(information.points / information.count)} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default FormationWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\n\nconst TITLE = 'Captains'\n\nconst CaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={TITLE} />\n    }\n\n    const captains = sort(\n        Object.values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {captains.length > 0 && (\n                <ul className=\"widget__list\">\n                    {captains.map(captain => {\n                        const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                        return (\n                            <li className=\"widget__list__item\" key={captain.player.element.id}>\n                                <Player id={captain.player.element.id} />\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(captain.data.length)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sum))}, {round(sum / captain.data.length)}{' '}\n                                        <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\n\nconst TITLE = 'Gameweeks'\n\nconst GameweekWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <b>{getPointsLabel(round(meanValue(differences)))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <b>{differences.filter(diff => diff >= 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <b>{differences.filter(diff => diff < 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <b>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</b>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(bestGW.points)}</b> (\n                            <SiteLink event={bestGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(worstGW.points)}</b> (\n                            <SiteLink event={worstGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestGWRank.rank)}</b> (\n                            <SiteLink event={bestGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstGWRank.rank)}</b> (\n                            <SiteLink event={worstGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, reduce, getPointsLabel, pluralise } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\n\nconst TITLE = 'Positions'\n\nconst PositionsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const positions: Record<string, number> = Object.entries(stats).reduce(\n        (acc, [elementType, elements]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }),\n        {}\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(positions).length > 0 && (\n                <ul className=\"widget__list\">\n                    <li className=\"widget__list__item\">\n                        <span>Total</span>\n                        <b>\n                            {pluralise(\n                                reduce(Object.values(positions), el => el),\n                                'Player',\n                                'Players'\n                            )}\n                        </b>\n                    </li>\n                    {Object.entries(positions).map(([elementType, elements]) => {\n                        const totalPoints = stats[Number(elementType)].map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={elementType}>\n                                <span>\n                                    {bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}\n                                </span>\n                                <div>\n                                    <div>\n                                        <b>{pluralise(elements, 'Player', 'Players')}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(totalPoints)))},{' '}\n                                        {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default PositionsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, head, thousandsSeparator, sumNumbers, reduce, round, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { StatData } from '../../types'\nimport { StatAggregateTotals } from '../../types'\n\nconst TITLE = 'Season'\n\nconst getAggregateValues = (players: StatData[], key: keyof StatAggregateTotals): number =>\n    sumNumbers(players.map(player => player.aggregates.totals[key]))\n\nconst SeasonWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !history || !chips || !entry) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getAggregateValues(allPlayers, 'redCards')\n    const yellows = getAggregateValues(allPlayers, 'yellowCards')\n    const goals = getAggregateValues(allPlayers, 'goals')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'cleanSheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goalsConceded')\n    const ownGoals = getAggregateValues(allPlayers, 'ownGoals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getAggregateValues(allPlayers, 'timesInDreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => player.data.findIndex(data => data.multiplier === 3) !== -1)\n        ?.data.find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(chips).find(([gw, chip]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(\n              allPlayers\n                  .filter(player => (player.data[Number(bbWeek) - 1].position || 0) > 11)\n                  .map(player => player.data[Number(bbWeek) - 1].points || 0)\n          )\n        : null\n\n    const doubleDigitHauls = reduce(\n        allPlayers.map(player => player.data.filter(data => (data.rawPoints || 0) > 9).length),\n        el => el\n    )\n    const totalPlays = reduce(\n        allPlayers.map(player => player.data.filter(data => data.multiplier !== null).length),\n        el => el\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>\n                        <b>{totalHits}</b> ({getPointsLabel(totalHits * -4)},{' '}\n                        {entry.summary_overall_points > 0\n                            ? round(((totalHits * 4) / entry.summary_overall_points) * 100)\n                            : 0}\n                        %)\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points</span>\n                    <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalBenched))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>\n                        <b>{doubleDigitHauls}</b>\n                        {totalPlays > 0 && ` (${round(doubleDigitHauls / totalPlays)}%)`}\n                    </span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel((tc.points || 0) / 3)}</b> (\n                            <SiteLink event={tc.event.id} />)\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel(bbPoints)}</b> (\n                            <SiteLink event={Number(bbWeek)} />)\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <b>{goals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <b>{assists}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <b>{ownGoals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <b>{goalsConceded}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <b>{cleanSheets}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <b>{saves}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <b>{penaltiesMissed}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <b>{penaltiesSaved}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <b>{thousandsSeparator(minutes)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <b>{reds}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <b>{yellows}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <b>{thousandsSeparator(bonus)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <b>{thousandsSeparator(bps)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <b>{inDreamteam}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget\n","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport './TeamsWidget.scss'\n\nconst TITLE = 'Teams'\n\nconst TeamsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [...acc, ...curr.map(el => el.element.team)], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"teams-widget\">\n            {teams.length > 0 && (\n                <ul className=\"widget__list\">\n                    {teams.map(team => {\n                        const players = allPlayers.filter(player => player.element.team === team.id)\n                        const points = sumNumbers(players.map(player => player.aggregates.totals.points))\n\n                        return (\n                            <li className=\"teams-widget__item\" key={team.id}>\n                                <div className=\"teams-widget__header\">\n                                    <Team team={team} />\n                                    <div>\n                                        <div>\n                                            <b>{counts[team.id] || 0}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(points)},{' '}\n                                            {players.length > 0 ? round(points / players.length) : 0}{' '}\n                                            <Metric metric=\"ppp\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    {Object.entries(stats).map(([position, players]) => {\n                                        const positionPlayers = players.filter(\n                                            player => player.element.team === team.id\n                                        )\n\n                                        if (!positionPlayers.length) {\n                                            return null\n                                        }\n\n                                        return (\n                                            <div\n                                                className=\"teams-widget__position\"\n                                                data-position={\n                                                    bootstrap.element_types.find(el => el.id === Number(position))\n                                                        ?.plural_name_short\n                                                }\n                                                key={position}\n                                            >\n                                                {sort(\n                                                    positionPlayers.filter(player => player.element.team === team.id),\n                                                    el => el.aggregates.totals.points\n                                                ).map(player => (\n                                                    <div key={player.element.id}>\n                                                        {player.element.web_name} (\n                                                        {getPointsLabel(player.aggregates.totals.points)})\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default TeamsWidget\n","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#aaa\"\n            className=\"swap-icon\"\n        >\n            <path d=\"M21 12l-18 12v-24z\" />\n        </svg>\n    )\n}\n\nexport default SwapIcon\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport './CaptainOpportunityWidget.scss'\n\nconst TITLE = 'Missed Captaincies'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys()).map((el, index) => ({\n        top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n        captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n    }))\n\n    return (\n        <Widget title={TITLE} cssClasses=\"captain-opportunity-widget\">\n            {improvements.length > 0 && (\n                <ul className=\"widget__list\">\n                    {improvements.map((improvement, index) => {\n                        if (!improvement.captain || !improvement.top) {\n                            return null\n                        }\n\n                        const captainData = improvement.captain.data[index]\n                        const topData = improvement.top.data[index]\n\n                        if (captainData.rawPoints === topData.rawPoints) {\n                            return null\n                        }\n\n                        return (\n                            <li className=\"widget__list__item\" key={captainData.event.id}>\n                                <div className=\"captain-opportunity-widget__group\">\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>OUT:</b> <Player id={improvement.captain.element.id} />\n                                    </div>\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>IN:</b> <Player id={improvement.top.element.id} />\n                                    </div>\n                                </div>\n                                <div className=\"captain-opportunity-widget__swap-info\">\n                                    <b>{getPointsLabel((captainData.rawPoints || 0) * 2)}</b> <SwapIcon />{' '}\n                                    <b>{getPointsLabel((topData.rawPoints || 0) * 2)} </b> (\n                                    <SiteLink event={captainData.event.id} />)\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget\n","import React, { useCallback, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { StatData } from '../../types'\nimport { normaliseDiacritics } from '../../utilities'\nimport { Button } from '../Button'\nimport { Widget } from '../Widget'\nimport './BasePlayerWidget.scss'\n\ntype Props = {\n    title: string\n    max: number\n    players: StatData[]\n    renderItem: (player: StatData) => JSX.Element | null\n    cssClasses?: string\n}\n\nconst renderList = (players: StatData[], renderItem: (player: StatData) => JSX.Element | null): JSX.Element => (\n    <ul className=\"widget__list\">\n        {players.map(player => {\n            const item = renderItem(player)\n\n            if (!item) {\n                return null\n            }\n\n            return (\n                <li className=\"widget__list__item\" key={player.element.id}>\n                    {item}\n                </li>\n            )\n        })}\n    </ul>\n)\n\nconst BasePlayerWidget: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n    const [showExtended, setShowExtended] = useState<boolean>(false)\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    const close = useCallback(() => {\n        setShowExtended(false)\n        setValue('')\n    }, [setShowExtended, setValue])\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const filteredPlayers = value\n        ? props.players.filter(player =>\n              normaliseDiacritics(player.element.web_name)\n                  .toLowerCase()\n                  .includes(normaliseDiacritics(value).toLowerCase())\n          )\n        : props.players\n\n    const topPlayers = props.players.slice(0, props.max)\n\n    return (\n        <>\n            <Widget title={props.title} cssClasses={classNames('base-player-widget', props.cssClasses)}>\n                {props.players.length > 0 && (\n                    <>\n                        {renderList(topPlayers, props.renderItem)}\n                        {props.players.length > props.max && (\n                            <Button label=\"Show all\" onClick={() => setShowExtended(true)} />\n                        )}\n                    </>\n                )}\n            </Widget>\n            {showExtended && (\n                <div className=\"modal modal--players\">\n                    <div className=\"modal__backdrop\" onClick={() => close()}></div>\n                    <Widget title={props.title} onClose={() => close()}>\n                        <div className=\"modal__input-wrapper\">\n                            <label htmlFor=\"query\">Name</label>\n                            <input\n                                className=\"modal__input\"\n                                type=\"text\"\n                                placeholder=\"Filter by name\"\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                id=\"query\"\n                                ref={callbackRef}\n                            />\n                        </div>\n                        <div className=\"widget__scroller\">\n                            {filteredPlayers.length > 0 ? (\n                                renderList(filteredPlayers, props.renderItem)\n                            ) : (\n                                <div className=\"widget__empty\">No data available.</div>\n                            )}\n                        </div>\n                    </Widget>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default BasePlayerWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: 'selections' | 'starts' | 'benched'\n}\n\nconst SelectionWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = sort(getAllPlayers(stats), el => el.aggregates.totals[props.metric])\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals[props.metric])}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default SelectionWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, round } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = getAllPlayers(stats).map(element => {\n        const selections = element.aggregates.totals.selections\n        const starts = element.aggregates.totals.starts\n        const benched = element.aggregates.totals.benched\n\n        return {\n            ...element,\n            benched,\n            benchedPercentage: (benched / selections) * 100,\n            starts,\n            startsPercentage: (starts / selections) * 100,\n        }\n    })\n\n    const starters = [...elements].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const benchwarmers = [...elements].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={props.top ? starters : benchwarmers}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>\n                                {round(\n                                    ((props.top\n                                        ? element.aggregates.totals.starts\n                                        : element.aggregates.totals.benched) /\n                                        element.aggregates.totals.selections) *\n                                        100\n                                )}\n                                %\n                            </b>\n                        </div>\n                        <div className=\"muted\">\n                            {getGWCountLabel(\n                                props.top ? element.aggregates.totals.starts : element.aggregates.totals.benched\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DifferenceWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\n\nconst TITLE = 'Overall Rank Evolution'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([...data], el => el.value))?.value || 0) * 1.05\n\n    data = [...data].map(element => ({\n        ...element,\n        max,\n    }))\n\n    const fill = '#3a4556' || '#fff'\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill={fill} fillOpacity=\"1\" />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst TITLE = 'Gameweek Points'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                        <YAxis interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst TITLE = 'Team Value Evolution'\n\nconst ValueWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <YAxis\n                            tickFormatter={value => `£${value / 10}`}\n                            domain={['auto', 'auto']}\n                            interval=\"preserveStartEnd\"\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [`£${Number(value) / 10}`, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getGWCountLabel, head, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Wrong Captains'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .filter(\n            (element, index) =>\n                (element.top?.data[index].rawPoints || 0) > (element.captain?.data[index].rawPoints || 0)\n        )\n        .reduce(\n            (acc, curr) =>\n                curr.captain\n                    ? {\n                          ...acc,\n                          [curr.captain.element.id]:\n                              (acc[curr.captain.element.id] ? acc[curr.captain.element.id] : 0) + 1,\n                      }\n                    : acc,\n            {} as Record<number, number>\n        )\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.aggregates.totals.captaincies,\n        }\n    }, {} as Record<number, number>)\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(improvements).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(improvements), el => el[1]).map(([player, count]) => (\n                        <li className=\"widget__list__item\" key={player}>\n                            <Player id={Number(player)} />\n                            <div>\n                                <div>\n                                    <b>\n                                        {count} out of {getGWCountLabel(timesUsed[Number(player)])}\n                                    </b>\n                                </div>\n                                <div className=\"muted\">{round((count / timesUsed[Number(player)]) * 100, 1)}%</div>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\nconst TITLE = 'Total Points Contribution'\n\nconst ContributionWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !entry || entry.summary_overall_points === 0) {\n        return <Widget title={TITLE} />\n    }\n\n    const contributions = sort(getAllPlayers(stats), el => el.aggregates.totals.points)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={contributions}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <div>\n                        <div>\n                            <b>{round((player.aggregates.totals.points / entry.summary_overall_points) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(player.aggregates.totals.points)}</div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ContributionWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst getPointsShare = (player: StatData): number =>\n    100 - (player.aggregates.totals.rawPoints / player.element.total_points) * 100\n\nconst MissedPointsShareWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = sort(\n        getAllPlayers(stats).filter(player => player.aggregates.totals.points > 0),\n        el => getPointsShare(el),\n        props.top ? 'desc' : 'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>{element.element.total_points > 0 && `${round(getPointsShare(element))}%`}</b>\n                        </div>\n                        <div className=\"muted\">\n                            {getPointsLabel(element.element.total_points - element.aggregates.totals.rawPoints)} in{' '}\n                            {getGWCountLabel(history.current.length - element.aggregates.totals.selections)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default MissedPointsShareWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, sort, thousandsSeparator } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 15\nconst TITLE = 'Other Players'\n\nconst NearMissesWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const tots = useSelector((state: RootState) => state.stats.tots)\n\n    if (!stats || !tots) {\n        return <Widget title={TITLE} />\n    }\n\n    const totsIds = tots.xi.concat(tots.bench).map(player => player.element.id)\n    const players = sort(\n        getAllPlayers(stats).filter(player => !totsIds.includes(player.element.id)),\n        el => el.aggregates.totals.points\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={players}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <b>{getPointsLabel(thousandsSeparator(player.aggregates.totals.points))}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default NearMissesWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { StatAggregateStreaks } from '../../types'\nimport { getAllPlayers, getGWCountLabel, getPointsLabel, round } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: keyof StatAggregateStreaks\n    showDetailedStats?: boolean\n}\n\nconst StreakWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const streakers = getAllPlayers(stats)\n        .sort((a, b) => {\n            const aStreak = a.aggregates.streaks[props.metric]\n            const bStreak = b.aggregates.streaks[props.metric]\n\n            const aStreakLength = a.aggregates.streaks[props.metric]?.length || 0\n            const bStreakLength = b.aggregates.streaks[props.metric]?.length || 0\n\n            if (bStreakLength - aStreakLength === 0) {\n                return (bStreak?.points || 0) - (aStreak?.points || 0)\n            }\n\n            return bStreakLength - aStreakLength\n        })\n        .filter(streaker => streaker.aggregates.streaks[props.metric] !== null)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={streakers}\n            max={MAX_ITEMS}\n            renderItem={streaker => {\n                const streak = streaker.aggregates.streaks[props.metric]\n\n                if (!streak) {\n                    return null\n                }\n\n                return (\n                    <>\n                        <Player id={streaker.element.id} />\n                        <div>\n                            <div className=\"duration\">\n                                <SiteLink event={streak.start.id} /> – <SiteLink event={streak.end.id} />\n                            </div>\n                            <div className=\"muted\">\n                                {props.showDetailedStats ? (\n                                    <>\n                                        {getGWCountLabel(streak.length)}, {getPointsLabel(streak.points || 0)},{' '}\n                                        {round((streak.points || 0) / streak.length)} <Metric metric=\"ppg\" />\n                                    </>\n                                ) : (\n                                    <div className=\"muted\">{getGWCountLabel(streak.length)}</div>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n        />\n    )\n}\n\nexport default StreakWidget\n","import React, { ChangeEvent } from 'react'\nimport './Checkbox.scss'\n\ntype Props = {\n    label: string\n    checked: boolean\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Checkbox: React.FC<Props> = (props: Props) => (\n    <div className=\"checkbox\">\n        <label className=\"checkbox__label\">\n            <input type=\"checkbox\" className=\"checkbox__element\" checked={props.checked} onChange={props.onChange} />\n            <div className=\"checkbox__visual\"></div>\n            {props.label}\n        </label>\n    </div>\n)\n\nexport default Checkbox\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './SegmentedControl.scss'\n\ntype SegmentedOption = {\n    label: string\n    value: string\n}\n\ntype Props = {\n    label: string\n    options: SegmentedOption[]\n    selected: string\n    setSelected: (value: string) => void\n}\n\nconst SegmentedControl: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"segmented-control\">\n            <label>{props.label}</label>\n            {props.options.length > 0 && (\n                <div className=\"segmented-control__options\">\n                    {props.options.map(option => (\n                        <div\n                            className={classNames('segmented-control__option', {\n                                'segmented-control__option--selected': props.selected === option.value,\n                            })}\n                        >\n                            <Button label={option.label} onClick={() => props.setSelected(option.value)} />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SegmentedControl\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button } from '../Button'\nimport { Checkbox } from '../Checkbox'\nimport { RootState } from '../../reducers'\nimport { setMeanStrategy, setTheme } from '../../reducers/settings'\nimport { SegmentedControl } from '../SegmentedControl'\nimport './Settings.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst meanOptions = [\n    { label: 'Average', value: 'average' },\n    { label: 'Median', value: 'median' },\n]\n\nconst Settings: React.FC<Props> = (props: Props) => {\n    const settings = useSelector((state: RootState) => state.settings)\n    const [checked, setChecked] = useState<boolean>(settings.theme === 'dark')\n    const [strategy, setStrategy] = useState<string>(settings.meanStrategy)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                props.onClose?.()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [props])\n\n    const close = useCallback(() => {\n        if ((checked && settings.theme === 'light') || (!checked && settings.theme === 'dark')) {\n            dispatch(setTheme(checked ? 'dark' : 'light'))\n        }\n\n        if (strategy !== settings.meanStrategy) {\n            dispatch(setMeanStrategy(strategy))\n        }\n        props.onClose?.()\n    }, [dispatch, checked, props, settings, strategy])\n\n    return (\n        <div className=\"modal modal--settings\">\n            <div className=\"modal__backdrop\" onClick={() => close()}></div>\n            <div className=\"modal__element\">\n                <h3 className=\"modal__header\">Settings</h3>\n                <div className=\"modal__body\">\n                    <SegmentedControl\n                        label=\"Display values as\"\n                        options={meanOptions}\n                        selected={strategy}\n                        setSelected={value => setStrategy(value)}\n                    />\n                    <Checkbox label=\"Use dark mode\" checked={checked} onChange={e => setChecked(e.target.checked)} />\n                </div>\n                <footer className=\"modal__footer\">\n                    <Button label=\"Save Settings\" type=\"button\" onClick={() => close()} />\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport {\n    getPastEvents,\n    getChipAbbreviation,\n    thousandsSeparator,\n    getShortName,\n    validateTeamId,\n    round,\n    sort,\n    getPointsLabel,\n} from '../../utilities'\nimport { Modal } from '../Modal'\nimport { fetchDataWithId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { Metric } from '../Metric'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport { MissedPointsShareWidget } from '../MissedPointsShareWidget'\nimport { NearMissesWidget } from '../NearMissesWidget'\nimport { StreakWidget } from '../StreakWidget'\nimport { finishLoading, startLoading } from '../../reducers/loading'\nimport Settings from '../Settings/Settings'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype DashboardParams = {\n    team?: string\n}\n\nconst sortings: { [key: string]: (statData: StatData) => number } = {\n    points: el => el.aggregates.totals.points,\n    selection: el => el.aggregates.totals.selections,\n    start: el => el.aggregates.totals.starts,\n    bench: el => el.aggregates.totals.benched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    },\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderPlayerList = (stats: Stats, bootstrap: Bootstrap, sorting: OptionType): JSX.Element[] =>\n    Object.entries(stats).map(([elementType, statData]) => (\n        <div key={elementType}>\n            <li className=\"dashboard__category\">\n                <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                <span>{statData.length}</span>\n            </li>\n            {sort(\n                statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length),\n                el => sortings[sorting.value](el)\n            ).map(element => (\n                <li key={element.element.id} className=\"dashboard__item\">\n                    <div className=\"dashboard__player\">\n                        <Player id={element.element.id} extended />\n                    </div>\n                    <div className=\"dashboard__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('dashboard__stat', {\n                                    'dashboard__stat--benched': item.multiplier === 0,\n                                    'dashboard__stat--triple': item.multiplier === 3,\n                                    'dashboard__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"dashboard__totals\">\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.selections}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.selections / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.starts}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.starts / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.benched}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.benched / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.points}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.aggregates.totals.starts > 0\n                                        ? round(element.aggregates.totals.points / element.aggregates.totals.starts)\n                                        : 0}{' '}\n                                    <Metric metric=\"ppg\" />)\n                                </span>\n                            </div>\n                        </span>\n                    </div>\n                </li>\n            ))}\n        </div>\n    ))\n\nconst Dashboard: React.FC = () => {\n    const [sort, setSort] = useState<ValueType<OptionType>>(sortOptions[0])\n    const [isSettingsOpen, setIsSettingsOpen] = useState<boolean>(false)\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const { team } = useParams<DashboardParams>()\n    const history = useHistory()\n\n    const [isModalOpen, setIsModalOpen] = useState(!team)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme)\n    }, [theme])\n\n    useEffect(() => {\n        if (id && !team) {\n            history.push(`/${id}/`)\n        } else if (team && validateTeamId(team)) {\n            setIsModalOpen(false)\n\n            if (Number(team) !== id) {\n                dispatch(startLoading())\n\n                setTimeout(() => {\n                    dispatch(fetchDataWithId(Number(team)))\n                    dispatch(finishLoading())\n                }, 1)\n            }\n        } else {\n            history.push('/')\n        }\n    }, [team, history, dispatch, id])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [stats])\n\n    useEffect(() => {\n        setIsModalOpen(!team)\n    }, [team])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && <Modal onClose={() => setIsModalOpen(false)} />}\n            {isSettingsOpen && <Settings onClose={() => setIsSettingsOpen(false)} />}\n            <div\n                className={classNames('app__loading', {\n                    'app__loading--hidden': !isLoading,\n                })}\n            >\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <SiteLink label={entry.name} />\n                                <div className=\"small muted\">\n                                    {getPointsLabel(thousandsSeparator(entry.summary_overall_points))} — Rank{' '}\n                                    {thousandsSeparator(entry.summary_overall_rank)}\n                                </div>\n                            </h1>\n                            <div>\n                                <Button onClick={() => setIsSettingsOpen(true)} label=\"Settings\" />\n                                {id !== undefined && (\n                                    <>\n                                        <Button\n                                            onClick={() => {\n                                                dispatch(startLoading())\n\n                                                setTimeout(() => {\n                                                    dispatch(fetchDataWithId(id))\n                                                    dispatch(finishLoading())\n                                                }, 1)\n                                            }}\n                                            disabled={isLoading}\n                                            label=\"Refresh Data\"\n                                        />\n                                        <Button\n                                            onClick={() => setIsModalOpen(true)}\n                                            label=\"Change Team\"\n                                            disabled={isLoading}\n                                        />\n                                    </>\n                                )}\n                            </div>\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <NearMissesWidget />\n                </div>\n                <div className=\"dashboard__widgets dashboard__widgets-duo\">\n                    <PlayerStatsWidget />\n                    <SeasonWidget />\n                    <HistoryWidget />\n                    <GameweekWidget />\n                    <PositionsWidget />\n                    <FormationWidget />\n                </div>\n                <h2>\n                    <span>Players</span>\n                </h2>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">Sort by</label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div\n                    className={classNames('dashboard', {\n                        'dashboard--cloaked': !id,\n                    })}\n                >\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">Player</span>\n                            {bootstrap?.events &&\n                                getPastEvents(bootstrap.events)\n                                    .filter(event => event.top_element_info.points > 0)\n                                    .map(event => (\n                                        <span className=\"dashboard__stat\" key={event.id}>\n                                            {getShortName(event)}\n                                            {chips && chips[event.id] && (\n                                                <div>{getChipAbbreviation(chips[event.id])}</div>\n                                            )}\n                                        </span>\n                                    ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">Selected</span>\n                                <span className=\"dashboard__stat\">Starting</span>\n                                <span className=\"dashboard__stat\">Benched</span>\n                                <span className=\"dashboard__stat\">Points</span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && bootstrap && renderPlayerList(stats, bootstrap, sort as OptionType)}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <SelectionWidget title=\"Top Selections\" metric=\"selections\" />\n                    <SelectionWidget title=\"Top Starters\" metric=\"starts\" />\n                    <SelectionWidget title=\"Top Bench Players\" metric=\"benched\" />\n                    <DifferenceWidget title=\"Most Consistent Starters\" top />\n                    <DifferenceWidget title=\"Most Consistent Bench Players\" />\n                </div>\n                <h2>\n                    <span>Teams</span>\n                </h2>\n                <div className=\"dashboard__widgets dashboard__widgets--single\">\n                    <TeamsWidget />\n                </div>\n                <h2>\n                    <span>Captains</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <CaptainWidget />\n                    <CaptainOpportunityWidget />\n                    <WrongCaptainWidget />\n                </div>\n                <h2>\n                    <span>Streaks</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <StreakWidget title=\"Highest Non-Blank Streaks\" metric=\"nonBlank\" showDetailedStats />\n                    <StreakWidget title=\"Highest Selection Streaks\" metric=\"selection\" showDetailedStats />\n                    <StreakWidget title=\"Highest Start Streaks\" metric=\"start\" showDetailedStats />\n                    <StreakWidget title=\"Highest Bench Appearance Streaks\" metric=\"bench\" />\n                </div>\n                <h2>\n                    <span>Contributions</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <ContributionWidget />\n                    <MissedPointsShareWidget title=\"Most Points Scored Outside of Team\" top />\n                    <MissedPointsShareWidget title=\"Fewest Points Scored Outside of Team\" />\n                </div>\n                <h2>\n                    <span>Graphs</span>\n                </h2>\n                <div className=\"dashboard__graphs\">\n                    <OverallRankWidget />\n                    <PointsWidget />\n                    <ValueWidget />\n                </div>\n                <div className=\"app__legal\">\n                    <p>\n                        FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated\n                        with the Premier League.\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import { combineReducers } from 'redux'\nimport { Bootstrap, Stats, History, Entry, StatData } from '../types'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport history from './history'\nimport loading from './loading'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data: Stats | undefined\n        chips:\n            | {\n                  [key: number]: string\n              }\n            | undefined\n        tots:\n            | {\n                  xi: StatData[]\n                  bench: StatData[]\n              }\n            | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n        theme: 'light' | 'dark'\n    }\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport './index.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureAppStore()}>\n            <HashRouter basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/:team/\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <Dashboard />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nconst isStale = () => {\n    const latestFetch = localStorage.getItem('latestFetch')\n\n    if (!latestFetch) {\n        return false\n    }\n\n    const parsed = Number(latestFetch)\n\n    return parsed + 86400000 < Date.now()\n}\n\nexport default function configureAppStore() {\n    const storage = localStorage.getItem('reduxState')\n    const preloadedState = storage !== null && !isStale() ? JSON.parse(storage) : {}\n\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n        preloadedState: {\n            ...preloadedState,\n            loading: 0,\n        },\n    })\n\n    store.subscribe(() => {\n        try {\n            localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n        } catch (e) {\n            localStorage.removeItem('reduxState')\n        }\n    })\n\n    return store\n}\n"],"sourceRoot":""}