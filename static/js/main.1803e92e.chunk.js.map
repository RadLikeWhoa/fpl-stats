{"version":3,"sources":["serviceWorker.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Spinner/Spinner.tsx","components/Widget/Widget.tsx","components/Team/Team.tsx","utilities/settings.ts","utilities/stats.ts","utilities/numbers.ts","utilities/events.ts","utilities/chips.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/useClickOutside.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/StatsWidget/StatsWidget.tsx","components/Metric/Metric.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","reducers/entry.ts","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","bootstrap","createSlice","name","initialState","loading","data","undefined","reducers","fetchBootstrapStart","state","fetchBootstrapSuccess","action","payload","actions","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","condensed","src","code","singular_name_short","alt","web_name","suffix","title","short_name","Spinner","Widget","classNames","cloaked","children","Team","validateTeamId","value","number","Number","isNaN","isInteger","getTotalSelections","statData","filter","pick","multiplier","length","getTotalStarts","getTotalBenched","getTotalPoints","reduce","acc","points","thousandsSeparator","toString","replace","sumNumbers","series","curr","sort","direction","a","b","getPastEvents","events","timestamp","Date","now","event","deadline_time_epoch","getShortName","split","pop","chips","bboost","freehit","wildcard","settings","localStorage","getItem","meanStrategy","setId","setItem","removeItem","setMeanStrategy","Button","secondary","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","useMeanLabel","strategy","useMeanValue","average","sorted","mid","Math","ceil","median","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","key","onSubmit","preventDefault","placeholder","onChange","stats","buildDataStart","buildDataSuccess","fetchPicks","entry","fetch","encodeURIComponent","response","json","fetchEvent","fetchGameweekInformation","Promise","all","live","history","fetchHistoryStart","fetchHistorySuccess","HistoryWidget","isLoadingHistory","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","total_points","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","round","map","TotsPlayer","TotsWidget","isLoadingStats","gk","slice","def","fwd","top","rest","xi","bench","StatsWidget","allPlayers","Object","values","concat","getAllPlayers","aggregateStats","reds","yellows","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","inDreamteam","bps","bonus","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","mostCaptaincies","captaincies","topReturner","href","rel","red_cards","yellow_cards","goals_scored","clean_sheets","goals_conceded","own_goals","penalties_missed","penalties_saved","in_dreamteam","explanations","Metric","metric","FormationWidget","weeks","formations","selections","Array","from","keys","index","val","entries","join","formation","count","information","formatFormation","toFixed","CaptainWidget","captains","captain","sum","GameweekWidget","isLoadingBootstrap","differences","week","average_entry_score","sortedRanks","gws","bestGW","worstGW","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","fetchEntryStart","fetchEntrySuccess","sortings","selection","start","alphabet","toLowerCase","charCodeAt","sortOptions","renderDifferenceWidget","benched","starts","benchedPercentage","startsPercentage","topStarters","percentageDiff","topBenchwarmers","Dashboard","isModalOpen","setIsModalOpen","setSort","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","gameweeks","forEach","gw","active_chip","entry_history","picks","item","rawPoints","buildData","fetchHistory","fetchEntry","stringify","summary_overall_points","summary_overall_rank","options","option","styles","container","provided","width","menu","zIndex","top_element_info","plural_name_short","renderSelectionWidget","renderStartersWidget","renderBenchWidget","counts","renderTeamsWidget","overall_rank","max","height","margin","bottom","left","right","dataKey","fill","fillOpacity","stroke","reversed","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","renderOverallRankWidget","charAt","toUpperCase","renderPointsWidget","bank","renderValueWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1803e92e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.loading = true\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    condensed?: boolean\n    suffix?: string | (() => JSX.Element)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className={`player ${props.condensed ? 'player--condensed' : ''}`}>\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}{typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","import React from 'react'\nimport './Widget.scss'\nimport { Spinner } from '../Spinner'\nimport classNames from 'classnames'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    loading?: boolean\n    cloaked?: boolean\n}\n\nconst Widget: React.FC<Props> = (props: Props) => (\n    <div className={classNames('widget', {\n        'widget--cloaked': props.cloaked,\n    })}>\n        {props.title && (\n            <h2 className=\"widget__title\">{props.title}</h2>\n        )}\n        <div className=\"widget__content\">\n            {props.loading && <div className=\"widget__loading\">\n                <Spinner />\n            </div>}\n            {props.children}\n        </div>\n    </div>\n)\n\nexport default Widget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","import { StatData, Stats } from '../types'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return statData.data.reduce((acc, pick) => acc + (pick.points || 0), 0)\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}","export const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${(value / 1000000).toFixed(1)}M` : value > 999 ? `${(value / 1000).toFixed(0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return series.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport const average = (series: number[]): number => {\n    return sumNumbers(series) / series.length\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const sort = (series: number[], direction: 'asc' | 'desc' = 'desc'): number[] => {\n    if (direction === 'asc') {\n        return [ ...series ].sort((a, b) => a - b)\n    }\n\n    return [ ...series ].sort((a, b) => b - a)\n}","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n        meanStrategy: localStorage.getItem('meanStrategy') || 'average',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            } else {\n                localStorage.removeItem('id')\n            }\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n            localStorage.setItem('meanStrategy', state.meanStrategy)\n        }\n    },\n})\n\nexport const { setId, setMeanStrategy } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport classNames from 'classnames'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    secondary?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className={classNames('button', { 'button--secondary': props.secondary })}\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null)\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback()\n      }\n    }\n\n    if (element.current) {\n      document.addEventListener('click', listener)\n    } else {\n      document.removeEventListener('click', listener)\n    }\n\n    return () => document.removeEventListener('click', listener)\n  }, [element, callback])\n\n  return element\n}\n\nexport default useClickOutside\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { useClickOutside } from '../../hooks'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        loading: true,\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.loading = true\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.loading = false\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/event/${event}/live/`)}`)\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks, live: LiveEvent }> => {\n    const [ pick, live ] = await Promise.all([\n        fetchPicks(event, entry),\n        fetchEvent(event),\n    ])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n\n    const gameweeks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    gameweeks.forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < gw.pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                    })),\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n}\n\nexport default history.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst HistoryWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return (\n            <Widget\n                title=\"Historical Data\"\n                loading={isLoadingHistory}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const pastSeasonsByRank = [ ...history.past ].sort((a, b) => a.rank - b.rank)\n    const pastSeasonsByPoints = [ ...history.past ].sort((a, b) => b.total_points - a.total_points)\n\n    const bestRankedSeason = pastSeasonsByRank[0]\n    const worstRankedSeason = pastSeasonsByRank[pastSeasonsByRank.length - 1]\n\n    const bestPointSeason = pastSeasonsByPoints[0]\n    const worstPointSeason = pastSeasonsByPoints[pastSeasonsByPoints.length - 1]\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget\n            title=\"Historical Data\"\n            loading={isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Best Season Rank</span>\n                    <span>{thousandsSeparator(bestRankedSeason.rank)} ({bestRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Points Finish</span>\n                    <span>{thousandsSeparator(bestPointSeason.total_points)} ({bestPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Season Rank</span>\n                    <span>{thousandsSeparator(worstRankedSeason.rank)} ({worstRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Points Finish</span>\n                    <span>{thousandsSeparator(worstPointSeason.total_points)} ({worstPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByRank.map((season) => season.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByPoints.map((season) => season.total_points))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <span>{top1k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <span>{top10k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <span>{top100k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <span>{top1m}</span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">\n                    {props.points}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints } from '../../utilities'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nconst TotsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Team of the Season\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const gk = [ ...stats[1] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_GK)\n    const def = [ ...stats[2] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_DEF)\n    const mid = [ ...stats[3] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_MID)\n    const fwd = [ ...stats[4] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_FWD)\n\n    const top = [ ...gk.slice(0, MIN_GK), ...def.slice(0, MIN_DEF), ...mid.slice(0, MIN_MID), ...fwd.slice(0, MIN_FWD) ]\n    const rest = [ ...def.slice(MIN_DEF), ...mid.slice(MIN_MID), ...fwd.slice(MIN_FWD) ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a))\n\n    const xi = [ ...top, ...rest.slice(0, 4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n    const bench = [ ...gk.slice(MIN_GK), ...rest.slice(4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n\n    return (\n        <Widget\n            title=\"Team of the Season\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 1).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 2).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 3).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 4).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {bench.map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { ElementStats } from '../../types'\nimport { getAllPlayers, thousandsSeparator } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst StatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!history || !stats) {\n        return (\n            <Widget\n                title=\"Stats\"\n                loading={isLoadingHistory || isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const aggregateStats = (key: keyof ElementStats) => allPlayers.map(player => ({\n        player,\n        [key]: player.data.reduce((acc, data) => {\n            if (typeof data.stats?.[key] === 'number') {\n                return ((data.stats?.[key] as number) || 0) + acc\n            }\n\n            if (typeof data.stats?.[key] === 'boolean') {\n                return (+(data.stats?.[key] as boolean) || 0) + acc\n            }\n\n            return acc\n        }, 0)\n    })).sort((a, b) => (b[key] as number) - (a[key] as number))[0]\n\n    const reds = aggregateStats('red_cards')\n    const yellows = aggregateStats('yellow_cards')\n    const goals = aggregateStats('goals_scored')\n    const assists = aggregateStats('assists')\n    const cleanSheets = aggregateStats('clean_sheets')\n    const goalsConceded = aggregateStats('goals_conceded')\n    const ownGoals = aggregateStats('own_goals')\n    const saves = aggregateStats('saves')\n    const minutes = aggregateStats('minutes')\n    const penaltiesMissed = aggregateStats('penalties_missed')\n    const penaltiesSaved = aggregateStats('penalties_saved')\n    const inDreamteam = aggregateStats('in_dreamteam')\n    const bps = aggregateStats('bps')\n    const bonus = aggregateStats('bonus')\n\n    const totalTransfers = history.current.reduce((acc,event) => acc + event.event_transfers, 0)\n    const totalHits = history.current.reduce((acc,event) => acc + event.event_transfers_cost / 4, 0)\n    const totalBenched = history.current.reduce((acc,event) => acc + event.points_on_bench, 0)\n\n    const mostCaptaincies = allPlayers.map(player => ({\n        player,\n        captaincies: player.data.filter(data => data.multiplier && data.multiplier > 1).length,\n    })).sort((a, b) => b.captaincies - a.captaincies)[0]\n\n    const topReturner = allPlayers.map(player => ({\n        ...player,\n        data: [ ...player.data ].sort((a, b) => (b.points || 0) - (a.points || 0)),\n    }))\n    .sort((a, b) => (b.data[0].points || 0) - (a.data[0].points || 0))[0]\n\n    return (\n        <Widget\n            title=\"Stats\"\n            loading={isLoadingHistory || isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <a href={`https://fantasy.premierleague.com/entry/${id}/transfers`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {totalTransfers}\n                        </a>\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>{totalHits} ({totalHits * -4} pts)</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <span>{totalBenched} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top Returner</span>\n                    <span>\n                        <Player\n                            id={topReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {topReturner.data[0].points} pts,\n                                        {' '}\n                                        <a href={`https://fantasy.premierleague.com/entry/${id}/event/${topReturner.data[0].event.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            GW {topReturner.data[0].event.id}\n                                        </a>\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </span>\n                </li>\n                {reds.red_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.player.element.id} suffix={`${reds.red_cards}`} condensed />\n                    </li>\n                )}\n                {yellows.yellow_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.player.element.id} suffix={`${yellows.yellow_cards}`} condensed />\n                    </li>\n                )}\n                {goals.goals_scored > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.player.element.id} suffix={`${goals.goals_scored}`} condensed />\n                    </li>\n                )}\n                {assists.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.player.element.id} suffix={`${assists.assists}`} condensed />\n                    </li>\n                )}\n                {bonus.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.player.element.id} suffix={`${bonus.bonus}`} condensed />\n                    </li>\n                )}\n                {bps.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player id={bps.player.element.id} suffix={`${bps.bps}`} condensed />\n                    </li>\n                )}\n                {cleanSheets.clean_sheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player id={cleanSheets.player.element.id} suffix={`${cleanSheets.clean_sheets}`} condensed />\n                    </li>\n                )}\n                {goalsConceded.goals_conceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player id={goalsConceded.player.element.id} suffix={`${goalsConceded.goals_conceded}`} condensed />\n                    </li>\n                )}\n                {saves.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.player.element.id} suffix={`${saves.saves}`} condensed />\n                    </li>\n                )}\n                {ownGoals.own_goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.player.element.id} suffix={`${ownGoals.own_goals}`} condensed />\n                    </li>\n                )}\n                {penaltiesMissed.penalties_missed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player id={penaltiesMissed.player.element.id} suffix={`${penaltiesMissed.penalties_missed}`} condensed />\n                    </li>\n                )}\n                {penaltiesSaved.penalties_saved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player id={penaltiesSaved.player.element.id} suffix={`${penaltiesSaved.penalties_saved}`} condensed />\n                    </li>\n                )}\n                {minutes.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player id={minutes.player.element.id} suffix={`${thousandsSeparator(minutes.minutes as number)}`} condensed />\n                    </li>\n                )}\n                {inDreamteam.in_dreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player id={inDreamteam.player.element.id} suffix={`${inDreamteam.in_dreamteam}`} condensed />\n                    </li>\n                )}\n                {mostCaptaincies.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player id={mostCaptaincies.player.element.id} suffix={`${mostCaptaincies.captaincies}`} condensed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default StatsWidget","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    'ppg': 'Points per Game',\n    'ppp': 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>{props.metric}</abbr>\n    )\n}\n\nexport default Metric","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst formatFormation = (formation: string) => sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!stats || !history) {\n        return (\n            <Widget\n                title=\"Formations\"\n                loading={isLoadingStats || isLoadingHistory}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object\n        .values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map((el, index) => selections\n                .map(player => (player[index] || 0) > 0)\n                .filter(val => !!val)\n                .length\n            )\n        })\n        .slice(1)\n\n    const data = Array\n        .from(Array(weeks).keys())\n        .map((el, index) => formations\n            .map(entries => entries[index])\n            .join('-')\n        )\n        .reduce((acc, formation, index) => {\n            if (acc[formation]) {\n                return {\n                    ...acc,\n                    [formation]: {\n                        count: acc[formation].count + 1,\n                        points: acc[formation].points + history.current[index].points,\n                    }\n                }\n            }\n\n            return {\n                ...acc,\n                [formation]: {\n                    count: 1,\n                    points: history.current[index].points,\n                }\n            }\n        }, {} as Record<string, FormationInformation>)\n\n    return (\n        <Widget\n            title=\"Formations\"\n            loading={isLoadingStats || isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {Object.entries(data).sort((a, b) => b[1].count - a[1].count).map(([ formation, information ]) => {\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{formatFormation(formation)}</span>\n                            <span>{information.count} ({thousandsSeparator(information.points)} pts, {(information.points / information.count).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default FormationWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst CaptainWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Captains\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const captains = Object\n        .values(stats)\n        .map(position => {\n            return position\n                .map(player => ({\n                    player,\n                    data: player.data.filter(data => (data.multiplier || 0) > 1),\n                }))\n                .filter(player => player.data.length > 0)\n        })\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => b.data.length - a.data.length)\n\n    return (\n        <Widget\n            title=\"Captains\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {captains.map(captain => {\n                    const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={captain.player.element.id} />\n                            <span>{captain.data.length} ({thousandsSeparator(sum)} pts, {(sum / captain.data.length).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default CaptainWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator } from '../../utilities'\n\nconst GameweekWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget\n                title=\"Gameweeks\"\n                loading={isLoadingHistory || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = [ ...history.current ].sort((a, b) => a.rank - b.rank)\n\n    const gws = [ ...history.current ].sort((a, b) => b.points - a.points)\n\n    const bestGW = gws[0]\n    const worstGW = gws[gws.length - 1]\n\n    return (\n        <Widget\n            title=\"Gameweeks\"\n            loading={isLoadingHistory || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <span>{meanValue(differences).toFixed(1)} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <span>{differences.filter(diff => diff >= 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <span>{differences.filter(diff => diff < 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(history.current.map(week => week.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Gameweek</span>\n                    <span>\n                        {bestGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bestGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {bestGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Gameweek</span>\n                    <span>\n                        {worstGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${worstGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {worstGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[0].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[0].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[0].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[sortedRanks.length - 1].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[sortedRanks.length - 1].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[sortedRanks.length - 1].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints, thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst PositionsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget\n                title=\"Positions\"\n                loading={isLoadingStats || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const positions: Record<string, number> = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <Widget\n            title=\"Positions\"\n            loading={isLoadingStats || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total</span>\n                    <span>{Object.values(positions).reduce((acc, curr) => acc + curr, 0)}</span>\n                </li>\n                {Object.entries(positions).map(([ elementType, elements ]) => {\n                    const totalPoints = stats[Number(elementType)].map(player => getTotalPoints(player))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                            <span>\n                                {elements}\n                                {' '}\n                                ({thousandsSeparator(sumNumbers(totalPoints))} pts, {meanValue(totalPoints).toFixed(1)} <Metric metric=\"ppp\" />)\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PositionsWidget","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry = (id: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchEntryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchEntrySuccess(data))\n}\n\nexport default entry.reducer","import React, { useState, useEffect, useRef } from 'react'\nimport { Bootstrap, StatData, Stats, History } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Team } from '../Team'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, thousandsShorthand, getTotalPoints } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport classNames from 'classnames'\nimport { fetchHistory } from '../../reducers/history'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { StatsWidget } from '../StatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { fetchEntry } from '../../reducers/entry'\nimport { Metric } from '../Metric'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    points: getTotalPoints,\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderSelectionWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalSelections(b) - getTotalSelections(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalSelections(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderStartersWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalStarts(b) - getTotalStarts(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalStarts(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderBenchWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalBenched(b) - getTotalBenched(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalBenched(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderDifferenceWidget = (stats: Stats, top: boolean = false): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <ul className=\"widget__list\">\n            {top && topStarters.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.startsPercentage.toFixed(1)}% ({element.starts})</span>\n                </li>\n            ))}\n            {!top && topBenchwarmers.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.benchedPercentage.toFixed(1)}% ({element.benched})</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderTeamsWidget = (stats: Stats, bootstrap: Bootstrap): JSX.Element => {\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = [ ...bootstrap.teams ].sort((a, b) => (counts[b.id] || 0) - (counts[a.id] || 0))\n\n    return (\n        <ul className=\"widget__list\">\n            {teams.map(team => (\n                <li className=\"widget__list__item\">\n                    <Team team={team} />\n                    <span>{counts[team.id] || 0}</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderOverallRankWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = [ ...data ].sort((a, b) => b.value - a.value)[0].value * 1.05\n\n    data = [ ...data ].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <div className=\"chart chart--reversed\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#ffffff\" fillOpacity=\"1\" />\n                    <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} domain={[1, max]} interval=\"preserveStartEnd\" tickCount={10} />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => name === 'max' ? [undefined, undefined] : [ thousandsSeparator(Number(value)), 'Rank' ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderPointsWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                    <YAxis interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderValueWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst Dashboard: React.FC = () => {\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n            dispatch(fetchEntry(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoadingBootstrap,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {entry.name}\n                                </a>\n                                <div className=\"small\">{entry.summary_overall_points} pts — Rank {thousandsSeparator(entry.summary_overall_rank)}</div>\n                            </h1>\n                            {id !== undefined && (\n                                <Button\n                                    onClick={() => setIsModalOpen(true)}\n                                    label=\"Change Team\"\n                                />\n                            )}\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <StatsWidget />\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    {isLoadingStats && (\n                        <div className=\"dashboard__loading\">\n                            <Spinner />\n                        </div>\n                    )}\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Points\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && Object.entries(stats).map(([ elementType, statData ]) => (\n                                <div key={elementType}>\n                                    <li className=\"dashboard__category\">\n                                        <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                                        <span>{statData.length}</span>\n                                    </li>\n                                    {statData\n                                        .filter(element => element.data.filter(pick => pick.multiplier !== null).length)\n                                        .sort((a, b) => sortings[(sort as OptionType).value](b) - sortings[(sort as OptionType).value](a))\n                                        .map(element => (\n                                            <li key={element.element.id} className=\"dashboard__item\">\n                                                <div className=\"dashboard__player\">\n                                                    <Player id={element.element.id} />\n                                                </div>\n                                                <div className=\"dashboard__stats\">\n                                                    {element.data.map(item => (\n                                                        <span\n                                                            key={item.event.id}\n                                                            className={classNames('dashboard__stat', {\n                                                                'dashboard__stat--benched': item.multiplier === 0,\n                                                                'dashboard__stat--triple': item.multiplier === 3,\n                                                                'dashboard__stat--started': item.multiplier,\n                                                            })}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div className=\"dashboard__totals\">\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalSelections(element)} ({(getTotalSelections(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalStarts(element)} ({(getTotalStarts(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalBenched(element)} ({(getTotalBenched(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        <span>\n                                                            {getTotalPoints(element)} ({getTotalStarts(element) > 0 ? (getTotalPoints(element) / getTotalStarts(element)).toFixed(1) : 0} <Metric metric=\"ppg\" />)\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <Widget\n                        title=\"Top Selections\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderSelectionWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderStartersWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderBenchWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats, true)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Breakdown by Team\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && bootstrap && renderTeamsWidget(stats, bootstrap)}\n                    </Widget>\n                    <PositionsWidget />\n                    <HistoryWidget />\n                    <FormationWidget />\n                    <CaptainWidget />\n                    <GameweekWidget />\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <Widget\n                        title=\"Overall Rank Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderOverallRankWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Gameweek Points\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderPointsWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Team Value Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderValueWidget(history, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport { Bootstrap, Stats, History, Entry } from '../types'\nimport history from './history'\n\nexport type RootState = {\n    bootstrap: {\n        loading: boolean\n        data: Bootstrap | undefined\n    }\n    stats: {\n        loading: boolean\n        data: Stats | undefined\n        chips: {\n            [key: number]: string\n        } | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n    }\n    history: {\n        loading: boolean\n        data: History | undefined\n    }\n    entry: {\n        loading: boolean\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}