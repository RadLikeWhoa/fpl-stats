{"version":3,"sources":["serviceWorker.ts","components/Button/Button.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/arrays.ts","utilities/chips.ts","utilities/events.ts","utilities/history.ts","utilities/numbers.ts","utilities/settings.ts","utilities/stats.ts","utilities/strings.ts","components/Modal/Modal.tsx","components/ModalInput/ModalInput.tsx","components/TeamModal/TeamModal.tsx","reducers/loading.ts","reducers/entry.ts","reducers/history.ts","reducers/milestones.ts","reducers/stats.ts","reducers/bootstrap.ts","reducers/settings.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/Player/Player.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/ChangeBadge/ChangeBadge.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/BasePlayerWidget/BasePlayerWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/MissedPointsShareWidget/MissedPointsShareWidget.tsx","components/NearMissesWidget/NearMissesWidget.tsx","components/StreakWidget/StreakWidget.tsx","components/Checkbox/Checkbox.tsx","components/SegmentedControl/SegmentedControl.tsx","components/SettingsModal/SettingsModal.tsx","components/MilestonesWidget/MilestonesWidget.tsx","components/PlayerOverview/PlayerOverview.tsx","components/FormWidget/FormWidget.tsx","components/PriceChangeWidget/PriceChangeWidget.tsx","components/InjuryWidget/InjuryWidget.tsx","components/ExpectedPointsWidget/ExpectedPointsWidget.tsx","components/PopularityWidget/PopularityWidget.tsx","components/TransfersWidget/TransfersWidget.tsx","components/StatComparison/StatComparison.tsx","components/PlayerComparisonWidget/PlayerComparisonWidget.tsx","components/DoubleDigitHaulsWidget/DoubleDigitHaulsWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","reportWebVitals.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","Button","props","className","type","onClick","disabled","label","Widget","id","useSelector","state","settings","classNames","cssClasses","title","onClose","aria-label","children","Spinner","sort","series","comparator","direction","a","b","head","length","last","reduce","extractor","initialValue","acc","curr","chips","bboost","freehit","wildcard","getPastEvents","events","timestamp","Date","now","filter","event","deadline_time_epoch","getShortName","name","split","pop","filterHistoryData","history","range","current","slice","start","end","thousandsSeparator","value","toString","replace","sumNumbers","el","round","precision","formatted","toFixed","test","validateTeamId","number","Number","isNaN","isInteger","getTotalSelections","statData","data","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalRawPoints","rawPoints","getTotalBenchPoints","getTotalDoubleDigitHauls","getAllPlayers","stats","Object","values","concat","getPlayerAggregate","player","key","getTopStatAggregate","players","aggregates","totals","getStreak","comparison","ignoreBlanks","streaks","max","Math","indexOf","map","streak","totalPoints","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getDoubleDigitHaulStreak","getTeamOfTheSeason","gk","def","mid","fwd","top","rest","xi","element","element_type","bench","emptyAggregates","redCards","yellowCards","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","timesInDreamteam","bps","bonus","captaincies","benchPoints","selections","starts","benched","doubleDigitHauls","selection","nonBlank","doubleDigitHaul","filterStatData","rawStats","bootstrap","forEach","active_chip","entry_history","picks","item","elements","find","position","live","total_points","keys","index","tots","initialCaps","charAt","toUpperCase","toLowerCase","pluralise","singular","plural","parsedValue","getGWCountLabel","getPointsLabel","normaliseDiacritics","normalize","Modal","footer","ModalInput","htmlFor","placeholder","onChange","e","target","ref","innerRef","TeamModal","useState","setValue","isLoading","loading","useHistory","recentTeams","useMemo","JSON","parse","localStorage","getItem","close","useCallback","cancel","team","push","useEffect","listener","document","addEventListener","removeEventListener","callbackRef","inputElement","focus","onSubmit","preventDefault","options","option","styles","menu","provided","zIndex","width","createSlice","initialState","reducers","startLoading","finishLoading","actions","fetchEntry","createAsyncThunk","thunkAPI","dispatch","fetchEntryStart","fetch","encodeURIComponent","response","json","fetchEntrySuccess","entry","undefined","action","payload","setItem","stringify","Array","from","Set","fetchHistory","fetchHistoryStart","fetchHistorySuccess","fetchStanding","page","fetchMilestones","arg","fetchMilestonesStart","Promise","all","results","standings","fetchMilestonesSuccess","milestones","fetchStatData","fetchStatsStart","fetchGameweekInformation","gameweeks","fetchStatsSuccess","fetchPicks","fetchEvent","fetchBootstrap","fetchBootstrapStart","fetchBootstrapSuccess","latestFetch","fetchDataWithId","setId","meanStrategy","theme","setMeanStrategy","setTheme","useMeanLabel","strategy","suffix","useMeanValue","filtered","average","sorted","ceil","median","TITLE","HistoryWidget","useContext","FilteredDataContext","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","TotsPlayer","teams","element_types","src","code","singular_name_short","alt","web_name","TotsWidget","explanations","ppg","ppp","Metric","metric","Player","extended","reversed","short_name","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","inDreamteam","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","idealCaptain","entries","week","returner","renderTopBenchGWReturner","FormationWidget","formations","val","formationData","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","ChangeBadge","renderer","abs","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","plural_name","getAggregateValues","SeasonWidget","rawHistory","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","totalPlays","summary_overall_points","Team","TeamsWidget","counts","positionPlayers","data-position","plural_name_short","SwapIcon","xmlns","height","viewBox","fill","d","CaptainOpportunityWidget","improvements","improvement","captainData","topData","isStatData","isElement","renderList","renderItem","BasePlayerWidget","showExtended","setShowExtended","filteredPlayers","includes","topPlayers","SelectionWidget","DifferenceWidget","benchedPercentage","startsPercentage","starters","percentageDiff","benchwarmers","OverallRankWidget","rankData","overall_rank","margin","bottom","left","right","dataKey","fillOpacity","stroke","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","pointsData","ValueWidget","valueData","bank","WrongCaptainWidget","timesUsed","ContributionWidget","latestPoints","contributions","getPointsShare","MissedPointsShareWidget","NearMissesWidget","totsIds","StreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","showDetailedStats","Checkbox","checked","SegmentedControl","selected","setSelected","meanOptions","SettingsModal","setChecked","setStrategy","useDispatch","MilestonesWidget","total","sortings","alphabet","charCodeAt","PlayerOverview","sorting","renderPlayerList","FormWidget","form","GAINS_TITLE","DROPS_TITLE","PriceChangeWidget","cost_change_event","cost_change_event_fall","input","InjuryWidget","chance_of_playing_next_round","CURRENT_TITLE","NEXT_TITLE","ExpectedPointsWidget","ep_next","event_points","ep_this","PopularityWidget","selected_by_percent","IN_TITLE","OUT_TITLE","TransfersWidget","transfers_in_event","transfers_out","StatComparison","leftValue","stat","rightValue","columnClass","compare","PlayerComparisonWidget","leftSide","setLeftSide","rightSide","setRightSide","playerOptions","localeCompare","leftSideData","rightSideData","valueLeft","valueRight","container","DoubleDigitHaulsWidget","sortOptions","React","createContext","Dashboard","setSort","isSettingsOpen","setIsSettingsOpen","setRange","filteredData","setFilteredData","rawStatsData","useParams","browserHistory","isModalOpen","setIsModalOpen","playerOverviewRef","useRef","documentElement","setAttribute","setTimeout","scrollTo","scrollWidth","debouncedFiltering","debounce","filteredStatData","filteredHistoryData","Provider","summary_overall_rank","total_players","PointsWidget","ReactSlider","min","renderThumb","valueNow","pearling","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","storage","preloadedState","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","subscribe","getState","configureAppStore","path","exact","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d29d4f98.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button className=\"button\" type={props.type || 'button'} onClick={props.onClick} disabled={props.disabled}>\n        {props.label}\n    </button>\n)\n\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Button } from '../Button'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    cssClasses?: string\n    onClose?: () => void\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div\n            className={classNames('widget', props.cssClasses, {\n                'widget--cloaked': !id,\n            })}\n        >\n            {props.title && (\n                <h3 className=\"widget__title\">\n                    {props.title}{' '}\n                    {props.onClose && <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />}\n                </h3>\n            )}\n            <div className=\"widget__content\">\n                {props.children || <div className=\"widget__empty\">No data available.</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget\n","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner\n","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return series ? [...series].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1)) : []\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series?.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series?.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series?.reduce((acc, curr) => acc + extractor(curr), initialValue) || 0\n}\n","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null\n","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}\n","import { History, Range } from '../types'\n\nexport const filterHistoryData = async (history: History, range: Range): Promise<History> => {\n    return {\n        ...history,\n        current: history.current?.slice(range.start, range.end + 1) || [],\n    }\n}\n","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number | string): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: (number | null)[]): number => {\n    return reduce(series, el => el || 0)\n}\n\nexport const average = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null)\n\n    return filtered.length ? sumNumbers(filtered) / filtered.length : 0\n}\n\nexport const median = (series: (number | null)[]): number => {\n    const filtered = series.filter(el => el !== null) as number[]\n    const sorted = sort(filtered, el => el)\n    const mid = Math.ceil(filtered.length / 2)\n\n    if (sorted.length === 0) {\n        return 0\n    }\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid - 1] + sorted[mid]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}\n","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}\n","import {\n    ElementStats,\n    StatData,\n    Stats,\n    StatDataGameweek,\n    Streak,\n    Picks,\n    LiveEvent,\n    Bootstrap,\n    Range,\n    StatAggregateTotals,\n} from '../types'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalCaptaincies = (statData: StatData): number => {\n    return statData.data.filter(data => (data.multiplier || 0) > 1).length\n}\n\nexport const getTotalRawPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.rawPoints || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => (el.multiplier === 0 ? el.rawPoints || 0 : 0))\n}\n\nexport const getTotalDoubleDigitHauls = (statData: StatData): number => {\n    return statData.data.filter(data => (data.rawPoints || 0) > 9).length\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const getPlayerAggregate = (player: StatData, key: keyof ElementStats): number =>\n    player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof StatAggregateTotals): StatData | null =>\n    head(sort(players, el => el.aggregates.totals[key]))\n\nconst getStreak = (\n    statData: StatData,\n    comparison: (gw: StatDataGameweek) => boolean,\n    ignoreBlanks: boolean = false\n): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [...acc, 1]\n            }\n\n            return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n        }\n\n        return [...acc, 0]\n    }, (ignoreBlanks ? [0] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start = sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => (streak > 0 ? streak : 1)))\n    const end = start - 1 + max\n\n    const points = (start === end ? statData.data : statData.data.slice(start, end + 1)).map(event => event.points || 0)\n\n    return {\n        start: statData.data[start].event,\n        end: statData.data[end].event,\n        length: max,\n        points,\n        totalPoints: sumNumbers(points),\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 2)\n\nexport const getDoubleDigitHaulStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 9)\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nexport const getTeamOfTheSeason = (stats: Stats): { xi: StatData[]; bench: StatData[] } => {\n    const gk = sort(stats[1], el => el.aggregates.totals.points).slice(0, MAX_GK)\n    const def = sort(stats[2], el => el.aggregates.totals.points).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => el.aggregates.totals.points).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => el.aggregates.totals.points).slice(0, MAX_FWD)\n\n    const top = gk\n        .slice(0, MIN_GK)\n        .concat(def.slice(0, MIN_DEF))\n        .concat(mid.slice(0, MIN_MID))\n        .concat(fwd.slice(0, MIN_FWD))\n\n    const rest = sort(\n        def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)),\n        el => el.aggregates.totals.points\n    )\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = gk.slice(MIN_GK).concat(sort(rest.slice(4), el => el.aggregates.totals.points, 'desc'))\n\n    return {\n        xi,\n        bench,\n    }\n}\n\nconst emptyAggregates = {\n    totals: {\n        redCards: 0,\n        yellowCards: 0,\n        goals: 0,\n        assists: 0,\n        cleanSheets: 0,\n        goalsConceded: 0,\n        ownGoals: 0,\n        saves: 0,\n        minutes: 0,\n        penaltiesMissed: 0,\n        penaltiesSaved: 0,\n        timesInDreamteam: 0,\n        bps: 0,\n        bonus: 0,\n        captaincies: 0,\n        points: 0,\n        rawPoints: 0,\n        benchPoints: 0,\n        selections: 0,\n        starts: 0,\n        benched: 0,\n        doubleDigitHauls: 0,\n    },\n    streaks: {\n        selection: null,\n        start: null,\n        bench: null,\n        nonBlank: null,\n        doubleDigitHaul: null,\n    },\n}\n\nexport const filterStatData = async (\n    rawStats: {\n        pick: Picks\n        live: LiveEvent\n    }[],\n    bootstrap: Bootstrap,\n    range: Range\n): Promise<{\n    data: Stats\n    chips: {\n        [key: number]: string\n    }\n    tots: {\n        xi: StatData[]\n        bench: StatData[]\n    }\n}> => {\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    rawStats.slice(range.start, range.end + 1).forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.slice(range.start, gw.pick.entry_history.event - 1).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                    aggregates: emptyAggregates,\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    },\n                ],\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event - range.start) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    Object.keys(stats).forEach(id => {\n        const player = stats[Number(id)]\n\n        stats[Number(id)].aggregates = {\n            totals: {\n                redCards: getPlayerAggregate(player, 'red_cards'),\n                yellowCards: getPlayerAggregate(player, 'yellow_cards'),\n                goals: getPlayerAggregate(player, 'goals_scored'),\n                assists: getPlayerAggregate(player, 'assists'),\n                cleanSheets: getPlayerAggregate(player, 'clean_sheets'),\n                goalsConceded: getPlayerAggregate(player, 'goals_conceded'),\n                ownGoals: getPlayerAggregate(player, 'own_goals'),\n                saves: getPlayerAggregate(player, 'saves'),\n                minutes: getPlayerAggregate(player, 'minutes'),\n                penaltiesMissed: getPlayerAggregate(player, 'penalties_missed'),\n                penaltiesSaved: getPlayerAggregate(player, 'penalties_saved'),\n                timesInDreamteam: getPlayerAggregate(player, 'in_dreamteam'),\n                bps: getPlayerAggregate(player, 'bps'),\n                bonus: getPlayerAggregate(player, 'bonus'),\n                captaincies: getTotalCaptaincies(player),\n                points: getTotalPoints(player),\n                rawPoints: getTotalRawPoints(player),\n                benchPoints: getTotalBenchPoints(player),\n                selections: getTotalSelections(player),\n                starts: getTotalStarts(player),\n                benched: getTotalBenched(player),\n                doubleDigitHauls: getTotalDoubleDigitHauls(player),\n            },\n            streaks: {\n                selection: getSelectionStreak(player),\n                start: getStartStreak(player),\n                bench: getBenchStreak(player),\n                nonBlank: getNonBlankStreak(player),\n                doubleDigitHaul: getDoubleDigitHaulStreak(player),\n            },\n        }\n    })\n\n    const data = Object.values(stats).reduce(\n        (acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [...(acc[curr.element.element_type] || []), curr],\n        }),\n        {}\n    )\n\n    return {\n        data,\n        chips,\n        tots: getTeamOfTheSeason(data),\n    }\n}\n","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`\n\nexport const pluralise = (value: number | string, singular: string, plural: string) => {\n    const parsedValue = typeof value === 'number' ? value : Number(value.replace(/,/g, ''))\n\n    return `${value} ${parsedValue === 1 ? singular : plural}`\n}\n\nexport const getGWCountLabel = (value: number | string): string => pluralise(value, 'GW', 'GWs')\n\nexport const getPointsLabel = (value: number | string): string => pluralise(value, 'pt', 'pts')\n\nexport const normaliseDiacritics = (value: string): string => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './Modal.scss'\n\ntype Props = {\n    title: string\n    children?: React.ReactNode\n    onClose?: () => void\n    footer?: React.ReactNode\n    cssClasses?: string\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    return (\n        <div className={classNames('modal', props.cssClasses)}>\n            <div className=\"modal__backdrop\" onClick={() => props.onClose?.()}></div>\n            <div className=\"modal__element\">\n                <h3 className=\"modal__header\">\n                    {props.title}\n                    <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />\n                </h3>\n                <div className=\"modal__body\">{props.children}</div>\n                {props.footer && <footer className=\"modal__footer\">{props.footer}</footer>}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","import React from 'react'\nimport './ModalInput.scss'\n\ntype Props = {\n    label: string\n    value: string\n    onChange: (value: string) => void\n    placeholder?: string\n    id?: string\n    innerRef?: (element: any) => any\n}\n\nconst ModalInput: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"modal-input\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                className=\"modal-input__element\"\n                id={props.id}\n                type=\"text\"\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={e => props.onChange(e.target.value)}\n                ref={props.innerRef}\n            />\n        </div>\n    )\n}\n\nexport default ModalInput\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button } from '../Button'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport { Modal } from '../Modal'\nimport { ModalInput } from '../ModalInput'\nimport { OptionType } from '../Dashboard/Dashboard'\nimport './TeamModal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst TeamModal: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useHistory()\n\n    const recentTeams: string[] = useMemo(() => JSON.parse(localStorage.getItem('recentTeams') || '[]') || [], [])\n\n    const close = useCallback(\n        (cancel: boolean, team?: OptionType) => {\n            if (!cancel) {\n                history.push(`/${team?.value || value}/`)\n            } else if (id) {\n                props.onClose?.()\n            }\n        },\n        [id, value, history, props]\n    )\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    return (\n        <form\n            onSubmit={e => {\n                close(false)\n                e.preventDefault()\n            }}\n        >\n            <Modal\n                title=\"Select Team\"\n                cssClasses=\"team-modal\"\n                onClose={() => close(true)}\n                footer={\n                    recentTeams.length > 0 ? (\n                        <Select\n                            className=\"team-modal__select\"\n                            options={recentTeams.map(team => ({ value: team.split(' — ')[0], label: team }))}\n                            onChange={option => close(false, option as OptionType)}\n                            placeholder=\"Recent Team IDs…\"\n                            styles={{\n                                menu: provided => ({ ...provided, zIndex: 20, width: 'calc(100% - 2rem)' }),\n                            }}\n                        />\n                    ) : null\n                }\n            >\n                <ModalInput\n                    label=\"Team ID\"\n                    placeholder=\"Enter your team ID\"\n                    value={value}\n                    onChange={value => setValue(value)}\n                    innerRef={callbackRef}\n                />\n                <Button\n                    label=\"Show Stats\"\n                    type=\"submit\"\n                    disabled={!validateTeamId(value) || value === `${id}` || isLoading}\n                />\n            </Modal>\n        </form>\n    )\n}\n\nexport default TeamModal\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Entry } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchEntry = createAsyncThunk('entry/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchEntryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`\n    )\n\n    const data = await response.json()\n\n    thunkAPI.dispatch(fetchEntrySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n\n            const recentTeams = JSON.parse(localStorage.getItem('recentTeams') || '[]') || []\n            const entry = action.payload as Entry\n\n            localStorage.setItem(\n                'recentTeams',\n                JSON.stringify(Array.from(new Set([`${entry.id} — ${entry.name}`, ...recentTeams])))\n            )\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport default entry.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchHistory = createAsyncThunk('history/fetch', async (entry: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchHistoryStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/history/`\n        )}`\n    )\n\n    const data = await response.json()\n\n    thunkAPI.dispatch(fetchHistorySuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport default history.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Standings } from '../types'\nimport { head, last } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst OVERALL_ID = 314\n\nconst fetchStanding = async (page: number): Promise<Standings> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/leagues-classic/${OVERALL_ID}/standings?page_standings=${page}`\n        )}`\n    )\n\n    return await response.json()\n}\n\nexport const fetchMilestones = createAsyncThunk('milestones/fetch', async (arg: undefined, thunkAPI) => {\n    thunkAPI.dispatch(fetchMilestonesStart())\n    thunkAPI.dispatch(startLoading())\n\n    const results = await Promise.all([\n        fetchStanding(1),\n        fetchStanding(20),\n        fetchStanding(200),\n        fetchStanding(2000),\n        fetchStanding(20000),\n    ])\n\n    const data = results.map((standings, index) =>\n        index === 0 ? head(standings.standings.results) : last(standings.standings.results)\n    )\n\n    thunkAPI.dispatch(fetchMilestonesSuccess(data))\n    thunkAPI.dispatch(finishLoading())\n})\n\nconst milestones = createSlice({\n    name: 'milestones',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchMilestonesStart(state) {\n            state.data = undefined\n        },\n        fetchMilestonesSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchMilestonesStart, fetchMilestonesSuccess } = milestones.actions\n\nexport default milestones.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nexport const fetchStatData = createAsyncThunk(\n    'stats/fetch',\n    async (arg: { bootstrap: Bootstrap; entry: number }, thunkAPI) => {\n        thunkAPI.dispatch(fetchStatsStart())\n        thunkAPI.dispatch(startLoading())\n\n        const gameweeks = await Promise.all(\n            getPastEvents(arg.bootstrap.events).map(async event => await fetchGameweekInformation(event.id, arg.entry))\n        )\n\n        thunkAPI.dispatch(fetchStatsSuccess(gameweeks))\n        thunkAPI.dispatch(finishLoading())\n    }\n)\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchStatsStart(state) {\n            state.data = undefined\n        },\n        fetchStatsSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchStatsStart, fetchStatsSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/event/${event}/live/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks; live: LiveEvent }> => {\n    const [pick, live] = await Promise.all([fetchPicks(event, entry), fetchEvent(event)])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport default stats.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { fetchEntry } from './entry'\nimport { fetchHistory } from './history'\nimport { finishLoading, startLoading } from './loading'\nimport { fetchMilestones } from './milestones'\nimport { fetchStatData } from './stats'\n\nexport const fetchBootstrap = createAsyncThunk('bootstrap/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(fetchBootstrapStart())\n    thunkAPI.dispatch(startLoading())\n\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`\n    )\n\n    const data = await response.json()\n\n    await Promise.all([\n        thunkAPI.dispatch(fetchStatData({ bootstrap: data, entry: id })),\n        thunkAPI.dispatch(fetchHistory(id)),\n        thunkAPI.dispatch(fetchEntry(id)),\n        thunkAPI.dispatch(fetchMilestones()),\n    ])\n\n    thunkAPI.dispatch(finishLoading())\n    thunkAPI.dispatch(fetchBootstrapSuccess(data))\n})\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n        latestFetch: null,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            localStorage.setItem('latestFetch', `${Date.now()}`)\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport default bootstrap.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetchBootstrap } from './bootstrap'\n\nexport const fetchDataWithId = createAsyncThunk('settings/fetch', async (id: number, thunkAPI) => {\n    thunkAPI.dispatch(setId(id))\n    thunkAPI.dispatch(fetchBootstrap(id))\n})\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: undefined,\n        meanStrategy: 'average',\n        theme: 'light',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n        },\n        setTheme(state, action) {\n            state.theme = action.payload\n        },\n    },\n})\n\nexport const { setId, setMeanStrategy, setTheme } = settings.actions\n\nexport default settings.reducer\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: (number | null)[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: (number | null)[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue\n","import React, { useContext } from 'react'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Historical Data'\n\nconst HistoryWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestRankedSeason.rank)}</b> ({bestRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstRankedSeason.rank)}</b> ({worstRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(bestPointSeason.total_points)}</b> ({bestPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(worstPointSeason.total_points)}</b> ({worstPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <b>\n                        {thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map(season => season.rank)), 0)))}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <b>\n                        {thousandsSeparator(\n                            Number(round(meanValue(pastSeasonsByPoints.map(season => season.total_points)), 0))\n                        )}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <b>{top1k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <b>{top10k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <b>{top100k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <b>{top1m}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">{props.points}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer\n","import React, { useContext } from 'react'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst TITLE = 'Team of the Season'\n\nconst TotsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data || !data.stats.tots.xi.length) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE} cssClasses=\"tots-widget\">\n            <div className=\"tots\">\n                {[...Array(4)].map((el, index) => (\n                    <>\n                        {data && (\n                            <div className=\"tots__row\">\n                                {data.stats.tots.xi\n                                    .filter(el => el.element.element_type === index + 1)\n                                    .map(player => (\n                                        <TotsPlayer\n                                            key={player.element.id}\n                                            id={player.element.id}\n                                            points={player.aggregates.totals.points}\n                                        />\n                                    ))}\n                            </div>\n                        )}\n                    </>\n                ))}\n                <div className=\"tots__row tots__row--bench\">\n                    {data.stats.tots.bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={player.aggregates.totals.points}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget\n","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    ppg: 'Points per Game',\n    ppp: 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>\n            {props.metric}\n        </abbr>\n    )\n}\n\nexport default Metric\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    extended?: boolean\n    reversed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div\n            className={classNames('player', {\n                'player--condensed': !props.extended,\n                'player--reversed': props.reversed,\n            })}\n        >\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>\n                        {props.suffix && !props.extended ? <b>{player?.web_name}</b> : player?.web_name}\n                        {typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}\n                    </span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>\n                        {team?.short_name}\n                    </span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink\n","import React, { useContext } from 'react'\nimport { StatData } from '../../types'\nimport {\n    getAllPlayers,\n    getTopStatAggregate,\n    thousandsSeparator,\n    round,\n    sort,\n    head,\n    getPointsLabel,\n} from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Player Stats'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            ({getPointsLabel(week.rawPoints || 0)}, <SiteLink event={week.event.id} />)\n                        </>\n                    )}\n                    reversed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    if (!allPlayers.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const reds = getTopStatAggregate(allPlayers, 'redCards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellowCards')\n    const goals = getTopStatAggregate(allPlayers, 'goals')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'cleanSheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goalsConceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'ownGoals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'timesInDreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(allPlayers, el => el.aggregates.totals.captaincies))\n\n    const topReturner = head(\n        sort(\n            allPlayers.map(player => ({\n                ...player,\n                data: sort([...player.data], el => el.points || 0),\n            })),\n            el => head(el.data)?.points || 0\n        )\n    )\n\n    const topBenchGWReturner = head(\n        sort(\n            allPlayers\n                .map(player => ({\n                    ...player,\n                    data: sort(\n                        player.data.filter(data => data.multiplier === 0),\n                        el => el.rawPoints || 0\n                    ),\n                }))\n                .filter(player => player.data.length),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topSeasonReturner = head(sort(allPlayers, el => el.aggregates.totals.points))\n    const topBenchReturner = head(sort(allPlayers, el => el.aggregates.totals.benchPoints))\n\n    const weeks = data.history.current.length\n\n    const idealCaptain = head(\n        sort(\n            Object.entries(\n                Array.from(Array(weeks).keys())\n                    .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n                    .reduce(\n                        (acc, curr) =>\n                            curr\n                                ? {\n                                      ...acc,\n                                      [curr.element.id]: (acc[curr.element.id] ? acc[curr.element.id] : 0) + 1,\n                                  }\n                                : acc,\n                        {} as Record<number, number>\n                    )\n            ),\n            el => el[1]\n        )\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            ({getPointsLabel(week.points || 0)}, <SiteLink event={week.event.id} />)\n                                        </>\n                                    )\n                                }}\n                                reversed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        {topSeasonReturner.aggregates.totals.starts > 0 && (\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topSeasonReturner.aggregates.totals.points)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topSeasonReturner.data\n                                                    .filter(data => (data.multiplier || 0) > 0)\n                                                    .map(data => data.points)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        {topBenchReturner.aggregates.totals.benched > 0 && (\n                            <Player\n                                id={topBenchReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topBenchReturner.aggregates.totals.benchPoints)},{' '}\n                                        {round(\n                                            meanValue(\n                                                topBenchReturner.data\n                                                    .filter(data => data.multiplier === 0)\n                                                    .map(data => data.rawPoints)\n                                            )\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {goals && goals.aggregates.totals.goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.element.id} suffix={`${goals.aggregates.totals.goals}`} reversed />\n                    </li>\n                )}\n                {assists && assists.aggregates.totals.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.element.id} suffix={`${assists.aggregates.totals.assists}`} reversed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.aggregates.totals.ownGoals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.element.id} suffix={`${ownGoals.aggregates.totals.ownGoals}`} reversed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.aggregates.totals.goalsConceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player\n                            id={goalsConceded.element.id}\n                            suffix={`${goalsConceded.aggregates.totals.goalsConceded}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.aggregates.totals.cleanSheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player\n                            id={cleanSheets.element.id}\n                            suffix={`${cleanSheets.aggregates.totals.cleanSheets}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {saves && saves.aggregates.totals.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.element.id} suffix={`${saves.aggregates.totals.saves}`} reversed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.aggregates.totals.penaltiesMissed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player\n                            id={penaltiesMissed.element.id}\n                            suffix={`${penaltiesMissed.aggregates.totals.penaltiesMissed}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.aggregates.totals.penaltiesSaved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player\n                            id={penaltiesSaved.element.id}\n                            suffix={`${penaltiesSaved.aggregates.totals.penaltiesSaved}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {minutes && minutes.aggregates.totals.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player\n                            id={minutes.element.id}\n                            suffix={`${thousandsSeparator(minutes.aggregates.totals.minutes as number)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {reds && reds.aggregates.totals.redCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.element.id} suffix={`${reds.aggregates.totals.redCards}`} reversed />\n                    </li>\n                )}\n                {yellows && yellows.aggregates.totals.yellowCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.element.id} suffix={`${yellows.aggregates.totals.yellowCards}`} reversed />\n                    </li>\n                )}\n                {bonus && bonus.aggregates.totals.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.element.id} suffix={`${bonus.aggregates.totals.bonus}`} reversed />\n                    </li>\n                )}\n                {bps && bps.aggregates.totals.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player\n                            id={bps.element.id}\n                            suffix={`${thousandsSeparator(bps.aggregates.totals.bps)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.aggregates.totals.timesInDreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player\n                            id={inDreamteam.element.id}\n                            suffix={`${inDreamteam.aggregates.totals.timesInDreamteam}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.aggregates.totals.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player\n                            id={mostCaptaincies.element.id}\n                            suffix={`${mostCaptaincies.aggregates.totals.captaincies}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} reversed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype FormationInformation = {\n    count: number\n    points: (number | null)[]\n}\n\nconst TITLE = 'Formations'\n\nconst formatFormation = (formation: string) =>\n    sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const weeks = history.current.length\n\n    const formations = Object.values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map(\n                (el, index) => selections.map(player => (player[index] || 0) > 0).filter(val => !!val).length\n            )\n        })\n        .slice(1)\n\n    const formationData = Array.from(Array(weeks).keys())\n        .map((el, index) => formations.map(entries => entries[index]).join('-'))\n        .reduce(\n            (acc, formation, index) => ({\n                ...acc,\n                [formation]: {\n                    count: (acc[formation] ? acc[formation].count : 0) + 1,\n                    points: [\n                        ...(acc[formation] ? acc[formation].points : ([] as number[])),\n                        history.current[index].points,\n                    ],\n                },\n            }),\n            {} as Record<string, FormationInformation>\n        )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(formationData).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(formationData), el => el[1].count).map(([formation, information]) => {\n                        return (\n                            <li className=\"widget__list__item\" key={formation}>\n                                <span>{formatFormation(formation)}</span>\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(information.count)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(information.points)))},{' '}\n                                        {round(meanValue(information.points))} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default FormationWidget\n","import React, { useContext } from 'react'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Captains'\n\nconst CaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const captains = sort(\n        Object.values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {captains.length > 0 && (\n                <ul className=\"widget__list\">\n                    {captains.map(captain => {\n                        const points = captain.data.map(data => data.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={captain.player.element.id}>\n                                <Player id={captain.player.element.id} />\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(captain.data.length)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(points)))},{' '}\n                                        {round(meanValue(points))} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainWidget\n","import React from 'react'\nimport classNames from 'classnames'\nimport { getPointsLabel, round, thousandsSeparator } from '../../utilities'\nimport './ChangeBadge.scss'\n\ntype Props = {\n    value: number\n    renderer?: (input: number) => string\n}\n\nconst ChangeBadge: React.FC<Props> = (props: Props) => {\n    return (\n        <div className={classNames('change-badge', { 'change-badge--negative': props.value < 0 })}>\n            {props.value >= 0 ? '+' : '-'}{' '}\n            {props.renderer\n                ? props.renderer(props.value)\n                : getPointsLabel(thousandsSeparator(round(Math.abs(props.value))))}\n        </div>\n    )\n}\n\nexport default ChangeBadge\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst TITLE = 'Gameweeks'\n\nconst GameweekWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const differences = history.current.map(\n        week => week.points - (bootstrap.events.find(el => el.id === week.event)?.average_entry_score || 0)\n    )\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <ChangeBadge value={meanValue(differences)} />\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <b>{differences.filter(diff => diff >= 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <b>{differences.filter(diff => diff < 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <b>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</b>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(bestGW.points)}</b> (\n                            <SiteLink event={bestGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(worstGW.points)}</b> (\n                            <SiteLink event={worstGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestGWRank.rank)}</b> (\n                            <SiteLink event={bestGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstGWRank.rank)}</b> (\n                            <SiteLink event={worstGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, reduce, getPointsLabel, pluralise } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Positions'\n\nconst PositionsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const positions: Record<string, number> = Object.entries(stats).reduce(\n        (acc, [elementType, elements]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }),\n        {}\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(positions).length > 0 && (\n                <ul className=\"widget__list\">\n                    <li className=\"widget__list__item\">\n                        <span>Total</span>\n                        <b>\n                            {pluralise(\n                                reduce(Object.values(positions), el => el),\n                                'Player',\n                                'Players'\n                            )}\n                        </b>\n                    </li>\n                    {Object.entries(positions).map(([elementType, elements]) => {\n                        const totalPoints = stats[Number(elementType)].map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={elementType}>\n                                <span>\n                                    {bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}\n                                </span>\n                                <div>\n                                    <div>\n                                        <b>{pluralise(elements, 'Player', 'Players')}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(totalPoints)))},{' '}\n                                        {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default PositionsWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport {\n    getAllPlayers,\n    head,\n    thousandsSeparator,\n    sumNumbers,\n    reduce,\n    round,\n    getPointsLabel,\n    last,\n} from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { StatData } from '../../types'\nimport { StatAggregateTotals } from '../../types'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Season'\n\nconst getAggregateValues = (players: StatData[], key: keyof StatAggregateTotals): number =>\n    sumNumbers(players.map(player => player.aggregates.totals[key]))\n\nconst SeasonWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!data || !entry || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const reds = getAggregateValues(allPlayers, 'redCards')\n    const yellows = getAggregateValues(allPlayers, 'yellowCards')\n    const goals = getAggregateValues(allPlayers, 'goals')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'cleanSheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goalsConceded')\n    const ownGoals = getAggregateValues(allPlayers, 'ownGoals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getAggregateValues(allPlayers, 'timesInDreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => [...player.data].findIndex(data => data.multiplier === 3) !== -1)\n        ?.data.find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(data.stats.chips).find(([gw, chip]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(\n              allPlayers\n                  .filter(player => ([...player.data][Number(bbWeek) - 1]?.position || 0) > 11)\n                  .map(player => [...player.data][Number(bbWeek) - 1]?.points || 0)\n          )\n        : null\n\n    const doubleDigitHauls = reduce(\n        allPlayers.map(player => [...player.data].filter(data => (data.points || 0) > 9).length),\n        el => el\n    )\n\n    const totalPlays = reduce(\n        allPlayers.map(player => player.data.filter(data => data.multiplier !== null && data.multiplier > 0).length),\n        el => el\n    )\n\n    const totalPoints =\n        (last(history.current)?.total_points || 0) -\n        (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1) - 1)?.total_points || 0)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>\n                        <b>{totalHits}</b> ({getPointsLabel(totalHits * -4)},{' '}\n                        {entry.summary_overall_points > 0 ? round(((totalHits * 4) / totalPoints) * 100) : 0}\n                        %)\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalPoints))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalBenched))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>\n                        <b>{doubleDigitHauls}</b>\n                        {totalPlays > 0 && ` (${round((doubleDigitHauls / totalPlays) * 100)}%)`}\n                    </span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel((tc.points || 0) / 3)}</b> (\n                            <SiteLink event={tc.event.id} />)\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel(bbPoints)}</b> (\n                            <SiteLink event={Number(bbWeek)} />)\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <b>{goals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <b>{assists}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <b>{ownGoals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <b>{goalsConceded}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <b>{cleanSheets}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <b>{saves}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <b>{penaltiesMissed}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <b>{penaltiesSaved}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <b>{thousandsSeparator(minutes)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <b>{reds}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <b>{yellows}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <b>{thousandsSeparator(bonus)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <b>{thousandsSeparator(bps)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <b>{inDreamteam}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget\n","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { useMeanValue } from '../../hooks'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport './TeamsWidget.scss'\n\nconst TITLE = 'Teams'\n\nconst TeamsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [...acc, ...curr.map(el => el.element.team)], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0).filter(el => counts[el.id] > 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"teams-widget\">\n            {teams.length > 0 && (\n                <ul className=\"widget__list\">\n                    {teams.map(team => {\n                        const players = allPlayers.filter(player => player.element.team === team.id)\n                        const points = players.map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"teams-widget__item\" key={team.id}>\n                                <div className=\"teams-widget__header\">\n                                    <Team team={team} />\n                                    <div>\n                                        <div>\n                                            <b>{counts[team.id] || 0}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(sumNumbers(points))},{' '}\n                                            {players.length > 0 ? round(meanValue(points)) : 0} <Metric metric=\"ppp\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    {Object.entries(stats).map(([position, players]) => {\n                                        const positionPlayers = players.filter(\n                                            player => player.element.team === team.id\n                                        )\n\n                                        if (!positionPlayers.length) {\n                                            return null\n                                        }\n\n                                        return (\n                                            <div\n                                                className=\"teams-widget__position\"\n                                                data-position={\n                                                    bootstrap.element_types.find(el => el.id === Number(position))\n                                                        ?.plural_name_short\n                                                }\n                                                key={position}\n                                            >\n                                                {sort(\n                                                    positionPlayers.filter(player => player.element.team === team.id),\n                                                    el => el.aggregates.totals.points\n                                                ).map(player => (\n                                                    <div key={player.element.id}>\n                                                        {player.element.web_name} (\n                                                        {getPointsLabel(player.aggregates.totals.points)})\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default TeamsWidget\n","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#aaa\"\n            className=\"swap-icon\"\n        >\n            <path d=\"M21 12l-18 12v-24z\" />\n        </svg>\n    )\n}\n\nexport default SwapIcon\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport './CaptainOpportunityWidget.scss'\n\nconst TITLE = 'Missed Captaincies'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys()).map((el, index) => ({\n        top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n        captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n    }))\n\n    return (\n        <Widget title={TITLE} cssClasses=\"captain-opportunity-widget\">\n            {improvements.length > 0 && (\n                <ul className=\"widget__list\">\n                    {improvements.map((improvement, index) => {\n                        if (!improvement.captain || !improvement.top) {\n                            return null\n                        }\n\n                        const captainData = improvement.captain.data[index]\n                        const topData = improvement.top.data[index]\n\n                        if (captainData.rawPoints === topData.rawPoints) {\n                            return null\n                        }\n\n                        return (\n                            <li className=\"widget__list__item\" key={captainData.event.id}>\n                                <div className=\"captain-opportunity-widget__group\">\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>OUT:</b> <Player id={improvement.captain.element.id} />\n                                    </div>\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>IN:</b> <Player id={improvement.top.element.id} />\n                                    </div>\n                                </div>\n                                <div className=\"captain-opportunity-widget__swap-info\">\n                                    <b>{getPointsLabel((captainData.rawPoints || 0) * 2)}</b> <SwapIcon />{' '}\n                                    <b>{getPointsLabel((topData.rawPoints || 0) * 2)} </b> (\n                                    <SiteLink event={captainData.event.id} />)\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget\n","import React, { useCallback, useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { Element, StatData } from '../../types'\nimport { normaliseDiacritics } from '../../utilities'\nimport { Button } from '../Button'\nimport { Widget } from '../Widget'\nimport { ModalInput } from '../ModalInput'\nimport './BasePlayerWidget.scss'\n\ntype PlayerLike = StatData | Element\n\ntype Props<T extends PlayerLike> = {\n    title: string\n    max: number\n    players: T[]\n    renderItem: (player: T) => JSX.Element | null\n    cssClasses?: string\n}\n\nconst isStatData = (element: PlayerLike): element is StatData => (element as StatData).element !== undefined\n\nconst isElement = (element: PlayerLike): element is Element => (element as Element).id !== undefined\n\nconst renderList = <T extends PlayerLike>(players: T[], renderItem: (player: T) => JSX.Element | null): JSX.Element => (\n    <ul className=\"widget__list\">\n        {players.map(player => {\n            const item = renderItem(player)\n\n            if (!item) {\n                return null\n            }\n\n            return (\n                <li\n                    className=\"widget__list__item\"\n                    key={isStatData(player) ? player.element.id : isElement(player) ? player.id : undefined}\n                >\n                    {item}\n                </li>\n            )\n        })}\n    </ul>\n)\n\nconst BasePlayerWidget = <T extends PlayerLike>(props: Props<T>): React.ReactElement<Props<T>> | null => {\n    const [value, setValue] = useState<string>('')\n    const [showExtended, setShowExtended] = useState<boolean>(false)\n\n    const callbackRef = useCallback(inputElement => inputElement?.focus(), [])\n\n    const close = useCallback(() => {\n        setShowExtended(false)\n        setValue('')\n    }, [setShowExtended, setValue])\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    const filteredPlayers = value\n        ? props.players.filter(player =>\n              normaliseDiacritics(\n                  isStatData(player) ? player.element.web_name : isElement(player) ? player.web_name : ''\n              )\n                  .toLowerCase()\n                  .includes(normaliseDiacritics(value).toLowerCase())\n          )\n        : props.players\n\n    const topPlayers = props.players.slice(0, props.max)\n\n    return (\n        <>\n            <Widget title={props.title} cssClasses={classNames('base-player-widget', props.cssClasses)}>\n                {props.players.length > 0 && (\n                    <>\n                        {renderList(topPlayers, props.renderItem)}\n                        {props.players.length > props.max && (\n                            <Button label=\"Show all\" onClick={() => setShowExtended(true)} />\n                        )}\n                    </>\n                )}\n            </Widget>\n            {showExtended && (\n                <div className=\"modal modal--players\">\n                    <div className=\"modal__backdrop\" onClick={() => close()}></div>\n                    <Widget title={props.title} onClose={() => close()}>\n                        <ModalInput\n                            label=\"Name\"\n                            placeholder=\"Filter by name\"\n                            id=\"query\"\n                            value={value}\n                            onChange={value => setValue(value)}\n                            innerRef={callbackRef}\n                        />\n                        <div className=\"widget__scroller\">\n                            {filteredPlayers.length > 0 ? (\n                                renderList(filteredPlayers, props.renderItem)\n                            ) : (\n                                <div className=\"widget__empty\">No data available.</div>\n                            )}\n                        </div>\n                    </Widget>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default BasePlayerWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    title: string\n    metric: 'selections' | 'starts' | 'benched'\n}\n\nconst SelectionWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(\n        getAllPlayers(stats).filter(el => el.aggregates.totals[props.metric] > 0),\n        el => el.aggregates.totals[props.metric]\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals[props.metric])}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default SelectionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, round } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 5\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = getAllPlayers(stats).map(element => {\n        const selections = element.aggregates.totals.selections\n        const starts = element.aggregates.totals.starts\n        const benched = element.aggregates.totals.benched\n\n        return {\n            ...element,\n            benched,\n            benchedPercentage: (benched / selections) * 100,\n            starts,\n            startsPercentage: (starts / selections) * 100,\n        }\n    })\n\n    const starters = [...elements]\n        .sort((a, b) => {\n            const percentageDiff = b.startsPercentage - a.startsPercentage\n            return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n        })\n        .filter(el => el.starts > 0)\n\n    const benchwarmers = [...elements]\n        .sort((a, b) => {\n            const percentageDiff = b.benchedPercentage - a.benchedPercentage\n            return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n        })\n        .filter(el => el.benched > 0)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={props.top ? starters : benchwarmers}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>\n                                {round(\n                                    ((props.top\n                                        ? element.aggregates.totals.starts\n                                        : element.aggregates.totals.benched) /\n                                        element.aggregates.totals.selections) *\n                                        100\n                                )}\n                                %\n                            </b>\n                        </div>\n                        <div className=\"muted\">\n                            {getGWCountLabel(\n                                props.top ? element.aggregates.totals.starts : element.aggregates.totals.benched\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DifferenceWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Overall Rank Evolution'\n\nconst OverallRankWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    let rankData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([...rankData], el => el.value))?.value || 0) * 1.05\n\n    rankData = [...rankData].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={rankData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <Area\n                            type=\"monotone\"\n                            dataKey=\"value\"\n                            stroke=\"#177B47\"\n                            fill={theme === 'dark' ? '#3a4556' : '#fff'}\n                            fillOpacity=\"1\"\n                        />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Gameweek Points'\n\nconst OverallRankWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const pointsData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={pointsData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"0.75\" />\n                        <YAxis interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Team Value Evolution'\n\nconst ValueWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!data || !bootstrap || !data.history.current.length) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n\n    const valueData = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={valueData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"0.75\" />\n                        <YAxis\n                            tickFormatter={value => `£${value / 10}`}\n                            domain={['auto', 'auto']}\n                            interval=\"preserveStartEnd\"\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [`£${Number(value) / 10}`, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getGWCountLabel, head, round, sort } from '../../utilities'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Wrong Captains'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .reduce(\n            (acc, curr, index) =>\n                curr.captain && curr.top\n                    ? {\n                          ...acc,\n                          [curr.captain.element.id]:\n                              (acc[curr.captain.element.id] ? acc[curr.captain.element.id] : 0) +\n                              ((curr.captain.data[index].rawPoints || 0) < (curr.top.data[index].rawPoints || 0)\n                                  ? 1\n                                  : 0),\n                      }\n                    : acc,\n            {} as Record<number, number>\n        )\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.aggregates.totals.captaincies,\n        }\n    }, {} as Record<number, number>)\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(improvements).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(improvements), el => el[1] / timesUsed[Number(el[0])]).map(\n                        ([player, count]) => (\n                            <li className=\"widget__list__item\" key={player}>\n                                <Player id={Number(player)} />\n                                <div>\n                                    <div>\n                                        <b>\n                                            {count} / {getGWCountLabel(timesUsed[Number(player)])}\n                                        </b>\n                                    </div>\n                                    <div className=\"muted\">{round((count / timesUsed[Number(player)]) * 100, 1)}%</div>\n                                </div>\n                            </li>\n                        )\n                    )}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, head, last, round, sort } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 5\nconst TITLE = 'Total Points Contribution'\n\nconst ContributionWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    if (!entry || !data || !rawHistory) {\n        return <Widget title={TITLE} />\n    }\n\n    const history = data.history\n    const stats = data.stats.data\n\n    const latestPoints = last(history.current)?.total_points || 0\n    const totalPoints =\n        history.current.length > 1\n            ? latestPoints -\n              (rawHistory?.current?.find(event => event.event === (head(history.current)?.event || 1))?.total_points ||\n                  0)\n            : latestPoints\n\n    const contributions = sort(getAllPlayers(stats), el => el.aggregates.totals.points)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={contributions}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <div>\n                        <div>\n                            <b>{round((player.aggregates.totals.points / totalPoints) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(player.aggregates.totals.points)}</div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ContributionWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 15\n\nconst getPointsShare = (player: StatData): number =>\n    100 - (player.aggregates.totals.rawPoints / player.element.total_points) * 100\n\nconst MissedPointsShareWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n    const history = data.history\n\n    const elements = sort(\n        getAllPlayers(stats).filter(player => player.aggregates.totals.points > 0),\n        el => getPointsShare(el),\n        props.top ? 'desc' : 'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>{element.element.total_points > 0 && `${round(getPointsShare(element))}%`}</b>\n                        </div>\n                        <div className=\"muted\">\n                            {getPointsLabel(element.element.total_points - element.aggregates.totals.rawPoints)} in{' '}\n                            {getGWCountLabel(history.current.length - element.aggregates.totals.selections)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default MissedPointsShareWidget\n","import React, { useContext } from 'react'\nimport { getAllPlayers, getPointsLabel, sort, thousandsSeparator } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 15\nconst TITLE = 'Other Players'\n\nconst NearMissesWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const totsIds = data.stats.tots.xi.concat(data.stats.tots.bench).map(player => player.element.id)\n    const players = sort(\n        getAllPlayers(data.stats.data).filter(player => !totsIds.includes(player.element.id)),\n        el => el.aggregates.totals.points\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={players}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <b>{getPointsLabel(thousandsSeparator(player.aggregates.totals.points))}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default NearMissesWidget\n","import React, { useContext } from 'react'\nimport { useMeanValue } from '../../hooks'\nimport { StatAggregateStreaks } from '../../types'\nimport { getAllPlayers, getGWCountLabel, getPointsLabel, round } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    title: string\n    metric: keyof StatAggregateStreaks\n    showDetailedStats?: boolean\n}\n\nconst StreakWidget: React.FC<Props> = (props: Props) => {\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    if (!data) {\n        return <Widget title={props.title} />\n    }\n\n    const stats = data.stats.data\n\n    const streakers = getAllPlayers(stats)\n        .sort((a, b) => {\n            const aStreak = a.aggregates.streaks[props.metric]\n            const bStreak = b.aggregates.streaks[props.metric]\n\n            const aStreakLength = a.aggregates.streaks[props.metric]?.length || 0\n            const bStreakLength = b.aggregates.streaks[props.metric]?.length || 0\n\n            if (bStreakLength - aStreakLength === 0) {\n                return (bStreak?.totalPoints || 0) - (aStreak?.totalPoints || 0)\n            }\n\n            return bStreakLength - aStreakLength\n        })\n        .filter(streaker => streaker.aggregates.streaks[props.metric] !== null)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={streakers}\n            max={MAX_ITEMS}\n            renderItem={streaker => {\n                const streak = streaker.aggregates.streaks[props.metric]\n\n                if (!streak) {\n                    return null\n                }\n\n                return (\n                    <>\n                        <Player id={streaker.element.id} />\n                        <div>\n                            <div className=\"duration\">\n                                <SiteLink event={streak.start.id} />\n                                {streak.start.id !== streak.end.id && (\n                                    <>\n                                        {' '}\n                                        – <SiteLink event={streak.end.id} />\n                                    </>\n                                )}\n                            </div>\n                            <div className=\"muted\">\n                                {props.showDetailedStats ? (\n                                    <>\n                                        {getGWCountLabel(streak.length)}, {getPointsLabel(streak.totalPoints || 0)},{' '}\n                                        {round(meanValue(streak.points || []))} <Metric metric=\"ppg\" />\n                                    </>\n                                ) : (\n                                    <div className=\"muted\">{getGWCountLabel(streak.length)}</div>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n        />\n    )\n}\n\nexport default StreakWidget\n","import React, { ChangeEvent } from 'react'\nimport classNames from 'classnames'\nimport './Checkbox.scss'\n\ntype Props = {\n    label: string\n    checked: boolean\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\n    reversed?: boolean\n}\n\nconst Checkbox: React.FC<Props> = (props: Props) => (\n    <div className={classNames('checkbox', { 'checkbox--reversed': props.reversed })}>\n        <label className=\"checkbox__label\">\n            <input type=\"checkbox\" className=\"checkbox__element\" checked={props.checked} onChange={props.onChange} />\n            <div className=\"checkbox__visual\"></div>\n            {props.label}\n        </label>\n    </div>\n)\n\nexport default Checkbox\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Button } from '../Button'\nimport './SegmentedControl.scss'\n\ntype SegmentedOption = {\n    label: string\n    value: string\n}\n\ntype Props = {\n    label: string\n    options: SegmentedOption[]\n    selected: string\n    setSelected: (value: string) => void\n}\n\nconst SegmentedControl: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"segmented-control\">\n            <label>{props.label}</label>\n            {props.options.length > 0 && (\n                <div className=\"segmented-control__options\">\n                    {props.options.map(option => (\n                        <div\n                            className={classNames('segmented-control__option', {\n                                'segmented-control__option--selected': props.selected === option.value,\n                            })}\n                        >\n                            <Button label={option.label} onClick={() => props.setSelected(option.value)} />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SegmentedControl\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Checkbox } from '../Checkbox'\nimport { RootState } from '../../reducers'\nimport { setMeanStrategy, setTheme } from '../../reducers/settings'\nimport { SegmentedControl } from '../SegmentedControl'\nimport { Modal } from '../Modal'\nimport './SettingsModal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst meanOptions = [\n    { label: 'Average', value: 'average' },\n    { label: 'Median', value: 'median' },\n]\n\nconst SettingsModal: React.FC<Props> = (props: Props) => {\n    const settings = useSelector((state: RootState) => state.settings)\n    const [checked, setChecked] = useState<boolean>(settings.theme === 'dark')\n    const [strategy, setStrategy] = useState<string>(settings.meanStrategy)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                props.onClose?.()\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [props])\n\n    useEffect(() => {\n        if ((checked && settings.theme === 'light') || (!checked && settings.theme === 'dark')) {\n            dispatch(setTheme(checked ? 'dark' : 'light'))\n        }\n    }, [checked, dispatch, settings.theme])\n\n    useEffect(() => {\n        if (strategy !== settings.meanStrategy) {\n            dispatch(setMeanStrategy(strategy))\n        }\n    }, [dispatch, settings.meanStrategy, strategy])\n\n    return (\n        <Modal title=\"Settings\" onClose={() => props.onClose?.()} cssClasses=\"modal--settings\">\n            <SegmentedControl\n                label=\"Display values as\"\n                options={meanOptions}\n                selected={strategy}\n                setSelected={value => setStrategy(value)}\n            />\n            <Checkbox label=\"Use dark mode\" checked={checked} onChange={e => setChecked(e.target.checked)} reversed />\n        </Modal>\n    )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Widget } from '../Widget'\nimport { RootState } from '../../reducers'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst TITLE = 'Milestones'\n\nconst MilestonesWidget: React.FC = () => {\n    const milestones = useSelector((state: RootState) => state.milestones.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!milestones || !entry) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>First Place</span>\n                    <ChangeBadge value={entry.summary_overall_points - milestones[0].total} />\n                </li>\n                {milestones.length >= 2 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 1K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[1].total} />\n                    </li>\n                )}\n                {milestones.length >= 3 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 10K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[2].total} />\n                    </li>\n                )}\n                {milestones.length >= 4 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 100K</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[3].total} />\n                    </li>\n                )}\n                {milestones.length === 5 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top 1M</span>\n                        <ChangeBadge value={entry.summary_overall_points - milestones[4].total} />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default MilestonesWidget\n","import classNames from 'classnames'\nimport React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ValueType } from 'react-select'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { getChipAbbreviation, round, sort } from '../../utilities'\nimport { FilteredDataContext, OptionType } from '../Dashboard/Dashboard'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport './PlayerOverview.scss'\n\ntype Props = {\n    sort: ValueType<OptionType>\n    ref: React.RefObject<HTMLDivElement>\n}\n\nconst sortings: { [key: string]: (statData: StatData) => number } = {\n    points: el => el.aggregates.totals.points,\n    selection: el => el.aggregates.totals.selections,\n    start: el => el.aggregates.totals.starts,\n    bench: el => el.aggregates.totals.benched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    },\n}\n\nconst renderPlayerList = (\n    stats: Stats,\n    bootstrap: Bootstrap,\n    sorting: OptionType,\n    meanValue: (series: (number | null)[]) => number\n): JSX.Element[] =>\n    Object.entries(stats).map(([elementType, statData]) => (\n        <div key={elementType}>\n            <li className=\"player-overview__category\">\n                <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                <span>{statData.length}</span>\n            </li>\n            {sort(\n                statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length),\n                el => sortings[sorting.value](el)\n            ).map(element => (\n                <li key={element.element.id} className=\"player-overview__item\">\n                    <div className=\"player-overview__player\">\n                        <Player id={element.element.id} extended />\n                    </div>\n                    <div className=\"player-overview__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('player-overview__stat', {\n                                    'player-overview__stat--benched': item.multiplier === 0,\n                                    'player-overview__stat--triple': item.multiplier === 3,\n                                    'player-overview__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"player-overview__totals\">\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.selections}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.selections / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.starts}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.starts / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.benched}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.benched / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"player-overview__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.points}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {round(\n                                        meanValue(\n                                            element.data\n                                                .filter(data => (data.multiplier || 0) > 0)\n                                                .map(data => data.points)\n                                        )\n                                    )}{' '}\n                                    <Metric metric=\"ppg\" />)\n                                </span>\n                            </div>\n                        </span>\n                    </div>\n                </li>\n            ))}\n        </div>\n    ))\n\nexport const PlayerOverview: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const data = useContext(FilteredDataContext)\n\n    const meanValue = useMeanValue()\n\n    return (\n        <div\n            className={classNames('player-overview', {\n                'player-overview--cloaked': !id,\n            })}\n        >\n            <div className=\"player-overview__container\" ref={props.ref}>\n                {data && bootstrap && Object.keys(data.stats.data).length > 0 ? (\n                    <>\n                        <header className=\"player-overview__header\">\n                            <span className=\"player-overview__heading\">Player</span>\n                            {data?.history.current?.map(event => (\n                                <span className=\"player-overview__stat\" key={event.event}>\n                                    GW {event.event}\n                                    {data?.stats.chips[event.event] && (\n                                        <div>{getChipAbbreviation(data.stats.chips[event.event])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"player-overview__totals\">\n                                <span className=\"player-overview__stat\">Selected</span>\n                                <span className=\"player-overview__stat\">Starting</span>\n                                <span className=\"player-overview__stat\">Benched</span>\n                                <span className=\"player-overview__stat\">Points</span>\n                            </div>\n                        </header>\n                        <ul className=\"player-overview__list\">\n                            {renderPlayerList(data.stats.data, bootstrap, props.sort as OptionType, meanValue)}\n                        </ul>\n                    </>\n                ) : (\n                    <div className=\"player-overview__empty\">No data available.</div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getPointsLabel, last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Form Breakdown'\nconst MAX_ITEMS = 15\n\nconst FormWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(el.form)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{getPointsLabel(element.form)}</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default FormWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { ChangeBadge } from '../ChangeBadge'\n\nconst GAINS_TITLE = 'Price Gains'\nconst DROPS_TITLE = 'Price Drops'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    type: 'gains' | 'drops'\n}\n\nconst PriceChangeWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.type === 'gains' ? GAINS_TITLE : DROPS_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(\n            el =>\n                picks?.includes(el.id) &&\n                ((props.type === 'gains' && el.cost_change_event > 0) ||\n                    (props.type === 'drops' && el.cost_change_event_fall > 0))\n        ),\n        el => Number(props.type === 'gains' ? el.cost_change_event : el.cost_change_event_fall)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.type === 'gains' ? GAINS_TITLE : DROPS_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <ChangeBadge\n                            value={\n                                props.type === 'gains' ? element.cost_change_event : element.cost_change_event_fall * -1\n                            }\n                            renderer={input => `£ ${Math.abs(input) / 10}`}\n                        />\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default PriceChangeWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Players in Doubt'\nconst MAX_ITEMS = 5\n\nconst InjuryWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id) && el.chance_of_playing_next_round !== null),\n        el => Number(el.chance_of_playing_next_round),\n        'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{element.chance_of_playing_next_round} %</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default InjuryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getPointsLabel, last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { ChangeBadge } from '../ChangeBadge'\nimport './ExpectedPointsWidget.scss'\n\nconst CURRENT_TITLE = 'Expected Points – This GW'\nconst NEXT_TITLE = 'Expected Points – Next GW'\n\nconst MAX_ITEMS = 15\n\ntype Props = {\n    gw: 'current' | 'next'\n}\n\nconst ExpectedPointsWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.gw === 'current' ? CURRENT_TITLE : NEXT_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el =>\n            Number(\n                props.gw === 'next'\n                    ? el.ep_next\n                    : el.event_points !== null\n                    ? el.event_points - Number(el.ep_this)\n                    : el.ep_this\n            )\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.gw === 'current' ? CURRENT_TITLE : NEXT_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div className=\"expected-points-widget__data\">\n                        <b>\n                            {getPointsLabel(\n                                props.gw === 'current'\n                                    ? element.event_points !== null\n                                        ? element.event_points\n                                        : element.ep_this\n                                    : element.ep_next\n                            )}\n                        </b>\n                        {props.gw === 'current' && element.event_points !== null && (\n                            <>\n                                <ChangeBadge value={element.event_points - Number(element.ep_this)} />\n                            </>\n                        )}\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ExpectedPointsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst TITLE = 'Popularity Breakdown'\nconst MAX_ITEMS = 5\n\nconst PopularityWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(el.selected_by_percent)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <div>\n                        <b>{element.selected_by_percent} %</b>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default PopularityWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { last, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { thousandsSeparator } from '../../utilities/numbers'\n\nconst IN_TITLE = 'Transfers IN'\nconst OUT_TITLE = 'Transfers OUT'\n\nconst MAX_ITEMS = 5\n\ntype Props = {\n    type: 'in' | 'out'\n}\n\nconst TransfersWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={props.type === 'in' ? IN_TITLE : OUT_TITLE} />\n    }\n\n    const picks = last(stats)?.pick.picks.map(el => el.element)\n    const elements = sort(\n        bootstrap.elements.filter(el => picks?.includes(el.id)),\n        el => Number(props.type === 'in' ? el.transfers_in_event : el.transfers_out)\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.type === 'in' ? IN_TITLE : OUT_TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.id} />\n                    <b>\n                        {thousandsSeparator(props.type === 'in' ? element.transfers_in_event : element.transfers_out)}\n                    </b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default TransfersWidget\n","import React from 'react'\nimport classNames from 'classnames'\nimport { StatAggregateTotals, StatData } from '../../types'\nimport './StatComparison.scss'\n\ninterface Props {\n    left: StatData\n    right: StatData\n    label: string\n    columnClass?: string\n    stat: keyof StatAggregateTotals\n    compare: (left: number, right: number) => boolean\n}\n\nconst StatComparison: React.FC<Props> = (props: Props) => {\n    const leftValue = props.left.aggregates.totals[props.stat]\n    const rightValue = props.right.aggregates.totals[props.stat]\n\n    return (\n        <li className=\"stat-comparison\">\n            <div className={classNames('stat-comparison__label', props.columnClass)}>{props.label}</div>\n            <div\n                className={classNames('stat-comparison__left', props.columnClass, {\n                    'stat-comparison__left--highlight': props.compare(leftValue, rightValue),\n                })}\n            >\n                {leftValue}\n            </div>\n            <div\n                className={classNames('stat-comparison__right', props.columnClass, {\n                    'stat-comparison__right--highlight': props.compare(rightValue, leftValue),\n                })}\n            >\n                {rightValue}\n            </div>\n        </li>\n    )\n}\n\nexport default StatComparison\n","import React, { useContext, useState } from 'react'\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport { useSelector } from 'react-redux'\nimport { getPointsLabel, getAllPlayers } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { FilteredDataContext, OptionType } from '../Dashboard/Dashboard'\nimport { RootState } from '../../reducers'\nimport { StatComparison } from '../StatComparison'\nimport './PlayerComparisonWidget.scss'\n\nconst TITLE = 'Player Comparison'\n\nconst PlayerComparisonWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const [leftSide, setLeftSide] = useState<ValueType<OptionType>>()\n    const [rightSide, setRightSide] = useState<ValueType<OptionType>>()\n\n    if (!data || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(data.stats.data)\n\n    const playerOptions = allPlayers\n        .sort((a, b) => a.element.web_name.localeCompare(b.element.web_name))\n        .map(player => ({\n            value: `${player.element.id}`,\n            label: `${player.element.web_name} (${\n                bootstrap.element_types.find(type => type.id === player.element.element_type)?.singular_name_short\n            }, ${bootstrap.teams.find(team => team.id === player.element.team)?.short_name})`,\n        }))\n\n    const leftSideData = leftSide\n        ? allPlayers.find(el => el.element.id === Number((leftSide as OptionType).value))\n        : null\n\n    const rightSideData = rightSide\n        ? allPlayers.find(el => el.element.id === Number((rightSide as OptionType).value))\n        : null\n\n    const pointsData = data.history.current.map(gw => {\n        return {\n            name: `GW ${gw.event}`,\n            valueLeft: leftSideData?.data.find(d => d.event.id === gw.event)?.points || 0,\n            valueRight: rightSideData?.data.find(d => d.event.id === gw.event)?.points || 0,\n        }\n    })\n\n    return (\n        <Widget title={TITLE} cssClasses=\"player-comparison-widget\">\n            <div className=\"player-comparison-widget__selection\">\n                <div className=\"player-comparison-widget__column\" />\n                <div className=\"player-comparison-widget__column\">\n                    <Select\n                        options={playerOptions}\n                        className=\"player-comparison-widget__select\"\n                        value={leftSide}\n                        onChange={option => setLeftSide(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                </div>\n                <div className=\"player-comparison-widget__column\">\n                    <Select\n                        options={playerOptions}\n                        className=\"player-comparison-widget__select\"\n                        value={rightSide}\n                        onChange={option => setRightSide(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                </div>\n            </div>\n            {leftSideData && rightSideData && (\n                <>\n                    <ul className=\"comparison-list\">\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Goals Scored\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"goals\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Assists\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"assists\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Yellow Cards\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"yellowCards\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Red Cards\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"redCards\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Clean Sheets\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"cleanSheets\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Goals Conceded\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"goalsConceded\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Own Goals\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"ownGoals\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Saves\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"saves\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Minutes\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"minutes\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Penalties Missed\"\n                            compare={(a, b) => a < b || a === b}\n                            stat=\"penaltiesMissed\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Penalties Saved\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"penaltiesSaved\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Times in Dreamteam\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"timesInDreamteam\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"BPS\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"bps\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Bonus Points\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"bonus\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Captaincies\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"captaincies\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Points\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"points\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Points on Bench\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"benchPoints\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Selections\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"selections\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Starts\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"starts\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                        <StatComparison\n                            left={leftSideData}\n                            right={rightSideData}\n                            label=\"Times on Bench\"\n                            compare={(a, b) => a > b || a === b}\n                            stat=\"benched\"\n                            columnClass=\"player-comparison-widget__column\"\n                        />\n                    </ul>\n                    {pointsData && (\n                        <div className=\"player-comparison-widget__chart\">\n                            <ResponsiveContainer height={300} width=\"100%\">\n                                <AreaChart data={pointsData} margin={{ bottom: 45, left: 15, right: 15 }}>\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey=\"valueLeft\"\n                                        stroke=\"#177B47\"\n                                        fill=\"#177B47\"\n                                        fillOpacity=\"0.75\"\n                                    />\n                                    <Area\n                                        type=\"monotone\"\n                                        dataKey=\"valueRight\"\n                                        stroke=\"#00FF87\"\n                                        fill=\"#00FF87\"\n                                        fillOpacity=\"0.75\"\n                                    />\n                                    <YAxis\n                                        tickFormatter={value => getPointsLabel(value)}\n                                        domain={['auto', 'auto']}\n                                        interval=\"preserveStartEnd\"\n                                    />\n                                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                                    <Tooltip\n                                        isAnimationActive={false}\n                                        formatter={(value, name) => [getPointsLabel(Number(value)), 'Points']}\n                                        separator=\": \"\n                                    />\n                                </AreaChart>\n                            </ResponsiveContainer>\n                        </div>\n                    )}\n                </>\n            )}\n        </Widget>\n    )\n}\n\nexport default PlayerComparisonWidget\n","import React, { useContext } from 'react'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { FilteredDataContext } from '../Dashboard/Dashboard'\n\nconst TITLE = 'Double Digit Hauls'\nconst MAX_ITEMS = 15\n\nconst DoubleDigitHaulsWidget: React.FC = () => {\n    const data = useContext(FilteredDataContext)\n\n    if (!data) {\n        return <Widget title={TITLE} />\n    }\n\n    const stats = data.stats.data\n\n    const elements = sort(\n        getAllPlayers(stats).filter(el => el.aggregates.totals.doubleDigitHauls > 0),\n        el => el.aggregates.totals.doubleDigitHauls\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals.doubleDigitHauls)}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DoubleDigitHaulsWidget\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport { useParams, useHistory } from 'react-router-dom'\nimport debounce from 'lodash/debounce'\nimport ReactSlider from 'react-slider'\nimport { StatData, Stats, History, Range } from '../../types'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport {\n    thousandsSeparator,\n    validateTeamId,\n    getPointsLabel,\n    last,\n    filterStatData,\n    filterHistoryData,\n    head,\n    getPastEvents,\n    round,\n} from '../../utilities'\nimport { TeamModal } from '../TeamModal'\nimport { fetchDataWithId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport { MissedPointsShareWidget } from '../MissedPointsShareWidget'\nimport { NearMissesWidget } from '../NearMissesWidget'\nimport { StreakWidget } from '../StreakWidget'\nimport { SettingsModal } from '../SettingsModal'\nimport { MilestonesWidget } from '../MilestonesWidget'\nimport { PlayerOverview } from '../PlayerOverview/PlayerOverview'\nimport { FormWidget } from '../FormWidget'\nimport { PriceChangeWidget } from '../PriceChangeWidget'\nimport { InjuryWidget } from '../InjuryWidget'\nimport { ExpectedPointsWidget } from '../ExpectedPointsWidget'\nimport { PopularityWidget } from '../PopularityWidget'\nimport { TransfersWidget } from '../TransfersWidget'\nimport { PlayerComparisonWidget } from '../PlayerComparisonWidget'\nimport { DoubleDigitHaulsWidget } from '../DoubleDigitHaulsWidget'\nimport './Dashboard.scss'\n\nexport type OptionType = {\n    value: string\n    label: string\n}\n\ntype DashboardParams = {\n    team?: string\n}\n\nexport type FilteredData = {\n    history: History\n    stats: {\n        data: Stats\n        chips: {\n            [key: number]: string\n        }\n        tots: {\n            xi: StatData[]\n            bench: StatData[]\n        }\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nexport const FilteredDataContext = React.createContext<FilteredData | undefined>(undefined)\n\nconst Dashboard: React.FC = () => {\n    const [sort, setSort] = useState<ValueType<OptionType>>(sortOptions[0])\n    const [isSettingsOpen, setIsSettingsOpen] = useState<boolean>(false)\n    const [range, setRange] = useState<Range>({ start: 0, end: 37 })\n    const [filteredData, setFilteredData] = useState<FilteredData | undefined>(undefined)\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const rawStatsData = useSelector((state: RootState) => state.stats.data)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n    const theme = useSelector((state: RootState) => state.settings.theme)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const rawHistory = useSelector((state: RootState) => state.history.data)\n\n    const { team } = useParams<DashboardParams>()\n    const browserHistory = useHistory()\n\n    const [isModalOpen, setIsModalOpen] = useState(!team)\n\n    const playerOverviewRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        document.documentElement.setAttribute('data-theme', theme)\n    }, [theme])\n\n    useEffect(() => {\n        if (id && !team) {\n            browserHistory.push(`/${id}/`)\n        } else if (team && validateTeamId(team)) {\n            setIsModalOpen(false)\n\n            if (Number(team) !== id) {\n                dispatch(fetchDataWithId(Number(team)))\n            }\n        } else {\n            browserHistory.push('/')\n        }\n    }, [team, browserHistory, dispatch, id])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (playerOverviewRef && playerOverviewRef.current) {\n                playerOverviewRef.current.scrollTo(playerOverviewRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [rawStatsData])\n\n    useEffect(() => {\n        setIsModalOpen(!team)\n    }, [team])\n\n    useEffect(() => {\n        setIsModalOpen(!entry?.name)\n    }, [entry])\n\n    const debouncedFiltering = useRef(\n        debounce(async (rawStatsData, rawHistory, bootstrap, range) => {\n            const [filteredStatData, filteredHistoryData] = await Promise.all([\n                filterStatData(rawStatsData, bootstrap, range),\n                filterHistoryData(rawHistory, range),\n            ])\n\n            setFilteredData({\n                stats: filteredStatData,\n                history: filteredHistoryData,\n            })\n        }, 300)\n    ).current\n\n    useEffect(() => {\n        if (!rawStatsData || !bootstrap || !rawHistory) {\n            return\n        }\n\n        debouncedFiltering(rawStatsData, rawHistory, bootstrap, range)\n    }, [rawStatsData, bootstrap, rawHistory, range, debouncedFiltering, dispatch])\n\n    const totalPoints = filteredData\n        ? (last(filteredData.history.current)?.total_points || 0) -\n          (rawHistory?.current?.find(event => event.event === (head(filteredData.history.current)?.event || 1) - 1)\n              ?.total_points || 0)\n        : 0\n\n    return (\n        <FilteredDataContext.Provider value={filteredData}>\n            <div className=\"dashboard\">\n                {isModalOpen && <TeamModal onClose={() => setIsModalOpen(false)} />}\n                {isSettingsOpen && <SettingsModal onClose={() => setIsSettingsOpen(false)} />}\n                <div\n                    className={classNames('dashboard__loading', {\n                        'dashboard__loading--hidden': !isLoading,\n                    })}\n                >\n                    <Spinner />\n                </div>\n                <div className=\"dashboard__content\">\n                    {entry && (\n                        <header className=\"dashboard__entry\">\n                            <Widget>\n                                <h1 className=\"dashboard__title\">\n                                    <SiteLink label={entry.name} />\n                                    <div className=\"small muted\">\n                                        {getPointsLabel(thousandsSeparator(totalPoints))}\n                                        {entry.summary_overall_rank && bootstrap && (\n                                            <>\n                                                {' '}\n                                                — Rank {thousandsSeparator(entry.summary_overall_rank)} (Top{' '}\n                                                {round((entry.summary_overall_rank / bootstrap.total_players) * 100)}%)\n                                            </>\n                                        )}\n                                    </div>\n                                </h1>\n                                <div>\n                                    <Button onClick={() => setIsSettingsOpen(true)} label=\"Settings\" />\n                                    {id !== undefined && (\n                                        <Button\n                                            onClick={() => setIsModalOpen(true)}\n                                            label=\"Change Team\"\n                                            disabled={isLoading}\n                                        />\n                                    )}\n                                </div>\n                            </Widget>\n                        </header>\n                    )}\n                    <div className=\"dashboard__widgets\">\n                        <FormWidget />\n                        <ExpectedPointsWidget gw=\"current\" />\n                        <ExpectedPointsWidget gw=\"next\" />\n                        <InjuryWidget />\n                        <PriceChangeWidget type=\"gains\" />\n                        <PriceChangeWidget type=\"drops\" />\n                        <PopularityWidget />\n                        <TransfersWidget type=\"in\" />\n                        <TransfersWidget type=\"out\" />\n                    </div>\n                    <h2>\n                        <span>Season</span>\n                    </h2>\n                    <div className=\"dashboard__widgets dashboard__widgets--split\">\n                        <TotsWidget />\n                        <NearMissesWidget />\n                    </div>\n                    <div className=\"dashboard__widgets\">\n                        <PlayerStatsWidget />\n                        <SeasonWidget />\n                        <HistoryWidget />\n                        <GameweekWidget />\n                        <MilestonesWidget />\n                    </div>\n                    <h2>\n                        <span>Players</span>\n                    </h2>\n                    <div className=\"dashboard__meta\">\n                        <label className=\"dashboard__meta__label\">Sort by</label>\n                        <Select\n                            options={sortOptions}\n                            value={sort}\n                            onChange={option => setSort(option)}\n                            styles={{\n                                container: provided => ({ ...provided, width: '100%' }),\n                                menu: provided => ({ ...provided, zIndex: 20 }),\n                            }}\n                        />\n                        <div className=\"dashboard__legend\">\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--started\"></div>\n                                Started\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--benched\"></div>\n                                Benched\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator dashboard__color__indicator--triple\"></div>\n                                TC\n                            </div>\n                            <div className=\"dashboard__color\">\n                                <div className=\"dashboard__color__indicator\"></div>\n                                Not Selected\n                            </div>\n                        </div>\n                    </div>\n                    <PlayerOverview sort={sort} ref={playerOverviewRef} />\n                    <div className=\"dashboard__widgets dashboard__widgets--single\">\n                        <PlayerComparisonWidget />\n                    </div>\n                    <div className=\"dashboard__widgets\">\n                        <PositionsWidget />\n                        <FormationWidget />\n                        <SelectionWidget title=\"Frequent Selections\" metric=\"selections\" />\n                        <SelectionWidget title=\"Frequent Starters\" metric=\"starts\" />\n                        <SelectionWidget title=\"Frequent Bench Players\" metric=\"benched\" />\n                        <DifferenceWidget title=\"Consistent Starters\" top />\n                        <DifferenceWidget title=\"Consistent Bench Players\" />\n                    </div>\n                    <h2>\n                        <span>Returns</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <DoubleDigitHaulsWidget />\n                    </div>\n                    <h2>\n                        <span>Teams</span>\n                    </h2>\n                    <div className=\"dashboard__widgets dashboard__widgets--single\">\n                        <TeamsWidget />\n                    </div>\n                    <h2>\n                        <span>Captains</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <CaptainWidget />\n                        <CaptainOpportunityWidget />\n                        <WrongCaptainWidget />\n                    </div>\n                    <h2>\n                        <span>Streaks</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <StreakWidget title=\"Non-Blank Streaks\" metric=\"nonBlank\" showDetailedStats />\n                        <StreakWidget title=\"Double-Digit Haul Streaks\" metric=\"doubleDigitHaul\" showDetailedStats />\n                        <StreakWidget title=\"Selection Streaks\" metric=\"selection\" showDetailedStats />\n                        <StreakWidget title=\"Start Streaks\" metric=\"start\" showDetailedStats />\n                        <StreakWidget title=\"Bench Appearance Streaks\" metric=\"bench\" />\n                    </div>\n                    <h2>\n                        <span>Contributions</span>\n                    </h2>\n                    <div className=\"dashboard__widgets\">\n                        <ContributionWidget />\n                        {range.end - range.start + 1 === rawHistory?.current?.length && (\n                            <>\n                                <MissedPointsShareWidget title=\"Most Points Scored Outside of Team\" top />\n                                <MissedPointsShareWidget title=\"Fewest Points Scored Outside of Team\" />\n                            </>\n                        )}\n                    </div>\n                    {bootstrap && getPastEvents(bootstrap.events).length > 1 && (\n                        <>\n                            <h2>\n                                <span>Graphs</span>\n                            </h2>\n                            <div className=\"dashboard__graphs\">\n                                <OverallRankWidget />\n                                <PointsWidget />\n                                <ValueWidget />\n                            </div>\n                        </>\n                    )}\n                    <div className=\"dashboard__legal\">\n                        <p>\n                            FPL Stats uses data from the official Premier League Fantasy API. This site is not\n                            affiliated with the Premier League.\n                        </p>\n                    </div>\n                    {bootstrap && getPastEvents(bootstrap.events).length > 1 && (\n                        <div className=\"dashboard__slider-wrapper\">\n                            <ReactSlider\n                                className=\"dashboard__slider\"\n                                value={[range.start, range.end]}\n                                min={(head(getPastEvents(bootstrap.events))?.id || 1) - 1}\n                                max={(last(getPastEvents(bootstrap.events))?.id || 38) - 1}\n                                onChange={([start, end]) => setRange({ start, end })}\n                                renderThumb={(props, state) => <div {...props}>GW {state.valueNow + 1}</div>}\n                                pearling\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </FilteredDataContext.Provider>\n    )\n}\n\nexport default Dashboard\n","import { combineReducers } from 'redux'\nimport { Bootstrap, History, Entry, Picks, LiveEvent, StandingsPlayer } from '../types'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport history from './history'\nimport loading from './loading'\nimport milestones from './milestones'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data:\n            | {\n                  pick: Picks\n                  live: LiveEvent\n              }[]\n            | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n        theme: 'light' | 'dark'\n    }\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n    milestones: {\n        data: StandingsPlayer[] | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n    milestones,\n})\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport reportWebVitals from './reportWebVitals'\nimport './index.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureAppStore()}>\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/:team/\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <Dashboard />\n                    </Route>\n                </Switch>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n\nreportWebVitals()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nconst STORAGE_VERSION = '2'\n\nconst isStale = () => localStorage.getItem('storageVersion') !== STORAGE_VERSION\n\nexport default function configureAppStore() {\n    const storage = localStorage.getItem('applicationSettings')\n\n    const preloadedState = storage !== null && !isStale() ? JSON.parse(storage) : {}\n\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n        preloadedState: {\n            settings: {\n                theme: 'light',\n                meanStrategy: 'average',\n                id: undefined,\n                range: {\n                    start: 0,\n                    end: 38,\n                },\n                ...preloadedState,\n            },\n        },\n    })\n\n    store.subscribe(() => {\n        const state = store.getState().settings\n\n        localStorage.setItem('storageVersion', STORAGE_VERSION)\n        localStorage.setItem(\n            'applicationSettings',\n            JSON.stringify({\n                theme: state.theme,\n                meanStrategy: state.meanStrategy,\n            })\n        )\n    })\n\n    return store\n}\n"],"sourceRoot":""}