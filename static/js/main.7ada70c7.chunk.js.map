{"version":3,"sources":["serviceWorker.ts","components/Player/Player.tsx","components/Button/Button.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/settings.ts","utilities/arrays.ts","utilities/numbers.ts","utilities/stats.ts","utilities/events.ts","utilities/chips.ts","utilities/strings.ts","reducers/loading.ts","reducers/entry.ts","reducers/history.ts","reducers/stats.ts","reducers/bootstrap.ts","reducers/settings.ts","components/Modal/Modal.tsx","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/BasePlayerWidget/BasePlayerWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/MissedPointsShareWidget/MissedPointsShareWidget.tsx","components/NearMissesWidget/NearMissesWidget.tsx","components/StreakWidget/StreakWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","Player","props","bootstrap","useSelector","state","data","player","elements","find","el","id","team","teams","position","element_types","element_type","className","classNames","extended","reversed","src","code","singular_name_short","alt","web_name","suffix","title","name","short_name","Button","secondary","type","onClick","disabled","label","Widget","settings","cssClasses","onClose","aria-label","children","Spinner","validateTeamId","value","number","Number","isNaN","isInteger","sort","series","comparator","direction","a","b","head","length","last","reduce","extractor","initialValue","acc","curr","thousandsSeparator","toString","replace","sumNumbers","round","precision","formatted","toFixed","test","split","getTotalSelections","statData","filter","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalRawPoints","rawPoints","getTotalBenchPoints","getAllPlayers","stats","Object","values","concat","getPlayerAggregate","key","getTopStatAggregate","players","aggregates","totals","getStreak","comparison","ignoreBlanks","streaks","slice","max","Math","start","indexOf","map","streak","event","end","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getTeamOfTheSeason","gk","def","mid","fwd","top","rest","xi","element","bench","getPastEvents","events","timestamp","Date","now","deadline_time_epoch","getShortName","pop","chips","bboost","freehit","wildcard","initialCaps","charAt","toUpperCase","toLowerCase","pluralise","singular","plural","parsedValue","getGWCountLabel","getPointsLabel","normaliseDiacritics","normalize","loading","createSlice","initialState","reducers","startLoading","finishLoading","actions","entry","undefined","fetchEntryStart","fetchEntrySuccess","action","payload","fetchEntry","dispatch","fetch","encodeURIComponent","response","json","history","fetchHistoryStart","fetchHistorySuccess","fetchHistory","emptyAggregates","redCards","yellowCards","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","timesInDreamteam","bps","bonus","captaincies","benchPoints","selections","starts","benched","selection","nonBlank","tots","buildDataStart","buildDataSuccess","fetchPicks","fetchEvent","fetchGameweekInformation","Promise","all","live","buildData","gameweeks","forEach","active_chip","entry_history","picks","item","total_points","keys","index","fetchBootstrapStart","fetchBootstrapSuccess","fetchBootstrap","localStorage","getItem","meanStrategy","setId","setItem","removeItem","setMeanStrategy","fetchDataWithId","Modal","useState","setValue","useDispatch","useHistory","close","useCallback","cancel","push","useEffect","listener","e","document","addEventListener","removeEventListener","onSubmit","preventDefault","htmlFor","placeholder","onChange","target","useMeanLabel","strategy","useMeanValue","average","sorted","ceil","median","TITLE","HistoryWidget","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","TotsPlayer","TotsWidget","explanations","ppg","ppp","Metric","metric","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","inDreamteam","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","current","idealCaptain","entries","Array","from","week","returner","renderTopBenchGWReturner","FormationWidget","formations","val","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","sum","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","getAggregateValues","SeasonWidget","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","doubleDigitHauls","totalPlays","summary_overall_points","Team","TeamsWidget","counts","positionPlayers","data-position","plural_name_short","SwapIcon","width","height","viewBox","fill","fillRule","d","transform","CaptainOpportunityWidget","improvements","improvement","captainData","topData","renderList","renderItem","BasePlayerWidget","showExtended","setShowExtended","filteredPlayers","includes","topPlayers","SelectionWidget","DifferenceWidget","benchedPercentage","startsPercentage","starters","percentageDiff","benchwarmers","OverallRankWidget","overall_rank","margin","bottom","left","right","dataKey","fillOpacity","stroke","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","ValueWidget","bank","WrongCaptainWidget","timesUsed","ContributionWidget","contributions","getPointsShare","MissedPointsShareWidget","NearMissesWidget","totsIds","StreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","showDetailedStats","sortings","alphabet","charCodeAt","sortOptions","Dashboard","setSort","isLoading","useParams","isModalOpen","setIsModalOpen","dashboardRef","useRef","setTimeout","scrollTo","scrollWidth","summary_overall_rank","options","option","styles","container","provided","menu","zIndex","ref","top_element_info","sorting","renderPlayerList","PointsWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","basename","path","exact","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qeAYoBA,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,4CCmCxBC,G,OAvCiB,SAACC,GAC7B,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAE9DC,EAAM,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWK,SAASC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOT,EAAMS,MACxDC,EAAI,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAWU,MAAMJ,MAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAH,OAAUJ,QAAV,IAAUA,OAAV,EAAUA,EAAQK,SACrDE,EAAQ,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAWY,cAAcN,MAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAH,OAAUJ,QAAV,IAAUA,OAAV,EAAUA,EAAQS,iBAEvE,OACI,yBACIC,UAAWC,IAAW,SAAU,CAC5B,qBAAsBhB,EAAMiB,SAC5B,mBAAoBjB,EAAMkB,YAG9B,yBACIC,IAAG,iFAAqET,QAArE,IAAqEA,OAArE,EAAqEA,EAAMU,MAA3E,OACmC,SAA1B,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUS,qBAAgC,KAAO,GADlD,WAGHC,IAAG,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,SACbR,UAAU,kBAEd,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,8BACKf,EAAMwB,SAAWxB,EAAMiB,SAAW,kCAAIZ,QAAJ,IAAIA,OAAJ,EAAIA,EAAQkB,UAA9C,OAA8DlB,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAQkB,SAC9C,kBAAjBvB,EAAMwB,OAAb,YAAwCxB,EAAMwB,OAA9C,KAA0DxB,EAAMwB,OAASxB,EAAMwB,SAAW,OAGnG,yBAAKT,UAAU,gBACX,0BAAMA,UAAU,eAAeU,MAAK,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,MAA5C,OACKhB,QADL,IACKA,OADL,EACKA,EAAMiB,YAEX,0BAAMZ,UAAU,oBAAhB,OAAoCH,QAApC,IAAoCA,OAApC,EAAoCA,EAAUS,0BCtBnDO,G,OAXiB,SAAC5B,GAAD,OAC5B,4BACIe,UAAWC,IAAW,SAAU,CAAE,oBAAqBhB,EAAM6B,YAC7DC,KAAM9B,EAAM8B,MAAQ,SACpBC,QAAS/B,EAAM+B,QACfC,SAAUhC,EAAMgC,UAEfhC,EAAMiC,SCiBAC,G,OAtBiB,SAAClC,GAC7B,IAAMS,EAAKP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAAS1B,MAE5D,OACI,yBACIM,UAAWC,IAAW,SAAUhB,EAAMoC,WAAY,CAC9C,mBAAoB3B,KAGvBT,EAAMyB,OACH,wBAAIV,UAAU,iBACTf,EAAMyB,MAAO,IACbzB,EAAMqC,SAAW,kBAAC,EAAD,CAAQJ,MAAM,IAAIF,QAAS,kCAAM/B,EAAMqC,eAAZ,aAAM,OAAArC,IAAmBsC,aAAW,WAGzF,yBAAKvB,UAAU,mBACVf,EAAMuC,UAAY,yBAAKxB,UAAU,iBAAf,0BCbpByB,G,OAdW,kBACtB,yBAAKzB,UAAU,WACX,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,qBCbV0B,EAAiB,SAACC,GAC3B,IAAMC,EAASC,OAAOF,GAEtB,OAAOA,IAAUE,OAAOC,MAAMF,IAAWC,OAAOE,UAAUH,I,QCHjDI,EAAO,SAAIC,EAAaC,GAAiF,IAA7CC,EAA4C,uDAAhB,OACjG,OAAO,YAAIF,GAAQD,MAAK,SAACI,EAAGC,GAAJ,OAAWH,EAAWE,GAAKF,EAAWG,KAAqB,SAAdF,GAAwB,EAAI,OAGxFG,EAAO,SAAIL,GACpB,OAAOA,EAAOM,OAASN,EAAO,GAAK,MAG1BO,EAAO,SAAIP,GACpB,OAAOA,EAAOM,OAASN,EAAOA,EAAOM,OAAS,GAAK,MAG1CE,EAAS,SAAIR,EAAaS,GAAyE,IAAtCC,EAAqC,uDAAd,EAC7F,OAAOV,EAAOQ,QAAO,SAACG,EAAKC,GAAN,OAAeD,EAAMF,EAAUG,KAAOF,ICXlDG,EAAqB,SAACnB,GAC/B,OAAOA,EAAMoB,WAAWC,QAAQ,wBAAyB,MAOhDC,EAAa,SAAChB,GACvB,OAAOQ,EAAOR,GAAQ,SAAAxC,GAAE,OAAIA,MAkBnByD,EAAQ,SAACvB,GAAkD,IAAnCwB,EAAkC,uDAAd,EAC/CC,EAAYzB,EAAM0B,QAAQF,GAEhC,MAAI,QAAQG,KAAKF,GACNd,EAAKc,EAAUG,MAAM,OAAS,GAGlCH,GC/BEI,EAAqB,SAACC,GAC/B,OAAOA,EAASpE,KAAKqE,QAAO,SAAAC,GAAI,OAAwB,OAApBA,EAAKC,cAAqBrB,QAGrDsB,EAAiB,SAACJ,GAC3B,OAAOA,EAASpE,KAAKqE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAcD,EAAKC,WAAa,KAAGrB,QAGnEuB,EAAkB,SAACL,GAC5B,OAAOA,EAASpE,KAAKqE,QAAO,SAAAC,GAAI,OAAwB,IAApBA,EAAKC,cAAkBrB,QAGlDwB,EAAiB,SAACN,GAC3B,OAAOhB,EAAOgB,EAASpE,MAAM,SAAAI,GAAE,OAAIA,EAAGuE,QAAU,MAOvCC,EAAoB,SAACR,GAC9B,OAAOhB,EAAOgB,EAASpE,MAAM,SAAAI,GAAE,OAAIA,EAAGyE,WAAa,MAG1CC,EAAsB,SAACV,GAChC,OAAOhB,EAAOgB,EAASpE,MAAM,SAAAI,GAAE,OAAuB,IAAlBA,EAAGmE,YAAmBnE,EAAGyE,WAAiB,MAGrEE,EAAgB,SAACC,GAC1B,OAAOC,OAAOC,OAAOF,GAAO5B,QAAO,SAACG,EAAKC,GAAN,OAAeD,EAAI4B,OAAO3B,KAAO,KAG3D4B,EAAqB,SAACnF,EAAkBoF,GAAnB,OAC9BpF,EAAOD,KAAKoD,QAAO,SAACG,EAAKvD,GAAU,IAAD,IACa,EAIC,EAJ5C,MAAiC,kBAA7B,UAAOA,EAAKgF,aAAZ,aAAO,EAAaK,MACZ,UAACrF,EAAKgF,aAAN,aAAC,EAAaK,KAAmB,GAAK9B,EAGjB,mBAA7B,UAAOvD,EAAKgF,aAAZ,aAAO,EAAaK,OACZ,UAAErF,EAAKgF,aAAP,aAAE,EAAaK,KAAoB,GAAK9B,EAG7CA,IACR,IAEM+B,EAAsB,SAACC,EAAqBF,GAAtB,OAC/BpC,EAAKN,EAAK4C,GAAS,SAAAnF,GAAE,OAAIA,EAAGoF,WAAWC,OAAOJ,QAE5CK,EAAY,SACdtB,EACAuB,GAEiB,IADjBC,EACgB,wDACVC,EAAUzB,EAASpE,KAAKoD,QAAO,SAACG,EAAKC,GACvC,OAAImC,EAAWnC,GACPoC,GAICrC,EAAIL,QAAkC,IAAxBK,EAAIA,EAAIL,OAAS,GAH1B,GAAN,mBAAWK,EAAIuC,MAAM,EAAGvC,EAAIL,OAAS,IAArC,CAAyCK,EAAIA,EAAIL,OAAS,GAAK,IAIzD,GAAN,mBAAWK,GAAX,CAAgB,IAMlB,GAAN,mBAAWA,GAAX,CAAgB,MAChBqC,EAAe,CAAC,GAAK,IAEnBG,EAAMC,KAAKD,IAAL,MAAAC,KAAI,YAAQH,IAExB,GAAY,IAARE,EACA,OAAO,KAGX,IAAME,EACF7B,EAASpE,KAAK4D,EAAWiC,EAAQC,MAAM,EAAGD,EAAQK,QAAQH,IAAMI,KAAI,SAAAC,GAAM,OAAKA,EAAS,EAAIA,EAAS,OAAMC,MACzGC,EAAMlC,EAASpE,KAAKiG,EAAM5F,GAAK,EAAI0F,GAAKM,MAExC1B,EAASf,EAAWQ,EAASpE,KAAK8F,MAAMG,EAAM5F,GAAK,EAAG4F,EAAM5F,GAAK,EAAI0F,GAAKI,KAAI,SAAAE,GAAK,OAAIA,EAAM1B,QAAU,MAE7G,MAAO,CACHsB,QACAK,MACApD,OAAQ6C,EACRpB,WAIK4B,EAAqB,SAACnC,GAAD,OAC9BsB,EAAUtB,GAAU,SAAAoC,GAAE,OAAsB,OAAlBA,EAAGjC,cAAqB,IAEzCkC,EAAiB,SAACrC,GAAD,OAC1BsB,EAAUtB,GAAU,SAAAoC,GAAE,OAAKA,EAAGjC,YAAc,GAAK,KAAG,IAE3CmC,EAAiB,SAACtC,GAAD,OAC1BsB,EAAUtB,GAAU,SAAAoC,GAAE,OAAsB,IAAlBA,EAAGjC,cAAkB,IAEtCoC,EAAoB,SAACvC,GAAD,OAC7BsB,EAAUtB,GAAU,SAAAoC,GAAE,OAAKA,EAAG3B,WAAa,GAAK,MAcvC+B,EAAqB,SAAC5B,GAC/B,IAAM6B,EAAKlE,EAAKqC,EAAM,IAAI,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAAQmB,MAAM,EAZxD,GAaLgB,EAAMnE,EAAKqC,EAAM,IAAI,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAAQmB,MAAM,EAVxD,GAWNiB,EAAMpE,EAAKqC,EAAM,IAAI,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAAQmB,MAAM,EARxD,GASNkB,EAAMrE,EAAKqC,EAAM,IAAI,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAAQmB,MAAM,EANxD,GAQNmB,EAAMJ,EACPf,MAAM,EAnBA,GAoBNX,OAAO2B,EAAIhB,MAAM,EAjBV,IAkBPX,OAAO4B,EAAIjB,MAAM,EAfV,IAgBPX,OAAO6B,EAAIlB,MAAM,EAbV,IAcNoB,EAAOvE,EACTmE,EAAIhB,MArBI,GAqBWX,OAAO4B,EAAIjB,MAlBtB,IAkBsCX,OAAO6B,EAAIlB,MAfjD,KAgBR,SAAA1F,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAM/B,MAAO,CACHwC,GAJOxE,EAAKsE,EAAI9B,OAAO+B,EAAKpB,MAAM,EAAG,KAAK,SAAA1F,GAAE,OAAIA,EAAGgH,QAAQ1G,eAAc,OAKzE2G,MAJU1E,EAAKkE,EAAGf,MA7BX,GA6ByBX,OAAO+B,EAAKpB,MAAM,KAAK,SAAA1F,GAAE,OAAIA,EAAGgH,QAAQ1G,eAAc,SCrIjF4G,EAAgB,SAACC,GAC1B,IAAMC,EAAYC,KAAKC,MACvB,OAAOH,EAAOlD,QAAO,SAAAgC,GAAK,OAAgC,IAA5BA,EAAMsB,oBAA6BH,MAGxDI,EAAe,SAACvB,GACzB,OAAOA,EAAM/E,KAAK4C,MAAM,KAAK2D,OAAS,ICRpCC,EAAmC,CACrC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,SAAU,MCJDC,EAAc,SAAC5F,GAAD,gBAA8BA,EAAM6F,OAAO,GAAGC,eAA9C,OAA8D9F,EAAM+F,cAAcvC,MAAM,KAEtGwC,EAAY,SAAChG,EAAwBiG,EAAkBC,GAChE,IAAMC,EAA+B,kBAAVnG,EAAqBA,EAAQE,OAAOF,EAAMqB,QAAQ,KAAM,KAEnF,MAAM,GAAN,OAAUrB,EAAV,YAAmC,IAAhBmG,EAAoBF,EAAWC,IAGzCE,EAAkB,SAACpG,GAAD,OAAoCgG,EAAUhG,EAAO,KAAM,QAE7EqG,EAAiB,SAACrG,GAAD,OAAoCgG,EAAUhG,EAAO,KAAM,QAE5EsG,EAAsB,SAACtG,GAAD,OAA2BA,EAAMuG,UAAU,OAAOlF,QAAQ,mBAAoB,K,kCCV3GmF,GAAUC,aAAY,CACxBzH,KAAM,UACN0H,aAAc,EACdC,SAAU,CACNC,aADM,SACOnJ,GAGT,OAFAA,GAAS,GAIboJ,cANM,SAMQpJ,GAGV,OAFAA,GAAS,MAOd,GAAwC+I,GAAQM,QAAxCF,GAAR,GAAQA,aAAcC,GAAtB,GAAsBA,cAEdL,MAAf,QCjBMO,GAAQN,aAAY,CACtBzH,KAAM,QACN0H,aAAc,CACVhJ,UAAMsJ,GAEVL,SAAU,CACNM,gBADM,SACUxJ,GACZA,EAAMC,UAAOsJ,GAEjBE,kBAJM,SAIYzJ,EAAO0J,GACrB1J,EAAMC,KAAOyJ,EAAOC,YAKzB,GAA+CL,GAAMD,QAA7CG,GAAR,GAAQA,gBAAiBC,GAAzB,GAAyBA,kBAEnBG,GACT,SAACtJ,GAAD,8CACA,WAAMuJ,GAAN,iBAAA7G,EAAA,6DACI6G,EAASL,MACTK,EAASV,MAFb,SAI2BW,MAAM,+BAAD,OACOC,mBAAmB,+CAAD,OAAgDzJ,EAAhD,QALzD,cAIU0J,EAJV,gBAQuBA,EAASC,OARhC,OAQUhK,EARV,OAUI4J,EAASJ,GAAkBxJ,IAC3B4J,EAAST,MAXb,4CADA,uDAeWE,MAAf,QCjCMY,GAAUlB,aAAY,CACxBzH,KAAM,UACN0H,aAAc,CACVhJ,UAAMsJ,GAEVL,SAAU,CACNiB,kBADM,SACYnK,GACdA,EAAMC,UAAOsJ,GAEjBa,oBAJM,SAIcpK,EAAO0J,GACvB1J,EAAMC,KAAOyJ,EAAOC,YAKzB,GAAmDO,GAAQb,QAAnDc,GAAR,GAAQA,kBAAmBC,GAA3B,GAA2BA,oBAErBC,GACT,SAACf,GAAD,8CACA,WAAMO,GAAN,iBAAA7G,EAAA,6DACI6G,EAASM,MACTN,EAASV,MAFb,SAI2BW,MAAM,+BAAD,OACOC,mBAAmB,+CAAD,OACET,EADF,gBALzD,cAIUU,EAJV,gBAUuBA,EAASC,OAVhC,OAUUhK,EAVV,OAYI4J,EAASO,GAAoBnK,IAC7B4J,EAAST,MAbb,4CADA,uDAiBWc,MAAf,Q,SCnBMI,GAAkB,CACpB5E,OAAQ,CACJ6E,SAAU,EACVC,YAAa,EACbC,MAAO,EACPC,QAAS,EACTC,YAAa,EACbC,cAAe,EACfC,SAAU,EACVC,MAAO,EACPC,QAAS,EACTC,gBAAiB,EACjBC,eAAgB,EAChBC,iBAAkB,EAClBC,IAAK,EACLC,MAAO,EACPC,YAAa,EACbzG,OAAQ,EACRE,UAAW,EACXwG,YAAa,EACbC,WAAY,EACZC,OAAQ,EACRC,QAAS,GAEb3F,QAAS,CACL4F,UAAW,KACXxF,MAAO,KACPoB,MAAO,KACPqE,SAAU,OAIZ1G,GAAQ+D,aAAY,CACtBzH,KAAM,QACN0H,aAAc,CACVhJ,UAAMsJ,EACNxB,WAAOwB,EACPqC,UAAMrC,GAEVL,SAAU,CACN2C,eADM,SACS7L,GACXA,EAAMC,UAAOsJ,EACbvJ,EAAM+H,WAAQwB,EACdvJ,EAAM4L,UAAOrC,GAEjBuC,iBANM,SAMW9L,EAAO0J,GACpB1J,EAAMC,KAAOyJ,EAAOC,QAAQ1J,KAC5BD,EAAM+H,MAAQ2B,EAAOC,QAAQ5B,MAC7B/H,EAAM4L,KAAOlC,EAAOC,QAAQiC,SAKjC,GAA6C3G,GAAMoE,QAA3CwC,GAAR,GAAQA,eAAgBC,GAAxB,GAAwBA,iBAEzBC,GAAU,uCAAG,WAAOzF,EAAegD,GAAtB,eAAAtG,EAAA,sEACQ8G,MAAM,+BAAD,OACOC,mBAAmB,+CAAD,OACET,EADF,kBACiBhD,EADjB,cAFtC,cACT0D,EADS,gBAMFA,EAASC,OANP,mFAAH,wDASV+B,GAAU,uCAAG,WAAO1F,GAAP,eAAAtD,EAAA,sEACQ8G,MAAM,+BAAD,OACOC,mBAAmB,+CAAD,OACEzD,EADF,aAFtC,cACT0D,EADS,gBAMFA,EAASC,OANP,mFAAH,sDASVgC,GAAwB,uCAAG,WAAO3F,EAAegD,GAAtB,qBAAAtG,EAAA,sEACFkJ,QAAQC,IAAI,CAACJ,GAAWzF,EAAOgD,GAAQ0C,GAAW1F,KADhD,0CACtB/B,EADsB,KAChB6H,EADgB,uBAGtB,CACH7H,OACA6H,SALyB,2CAAH,wDASjBC,GACT,SAACvM,EAAsBwJ,GAAvB,8CACA,WAAMO,GAAN,qBAAA7G,EAAA,6DACI6G,EAASgC,MACThC,EAASV,MAFb,SAI4B+C,QAAQC,IAC5B5E,EAAczH,EAAU0H,QAAQpB,IAAhC,uCAAoC,WAAME,GAAN,SAAAtD,EAAA,sEAAqBiJ,GAAyB3F,EAAMhG,GAAIgJ,GAAxD,mFAApC,wDALR,OAIUgD,EAJV,OAQUrH,EAAqC,GACrC8C,EAAmC,GAEzCuE,EAAUC,SAAQ,SAAA9F,GACVA,EAAGlC,KAAKiI,cACRzE,EAAMtB,EAAGlC,KAAKkI,cAAcnG,OAASG,EAAGlC,KAAKiI,aAGjD/F,EAAGlC,KAAKmI,MAAMH,SAAQ,SAAAI,GAAS,IAAD,IACrB1H,EAAM0H,EAAKtF,WACZpC,EAAM0H,EAAKtF,SAAW,CAClBA,QAASvH,EAAUK,SAASC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOqM,EAAKtF,WACtDpH,KAAMH,EAAU0H,OACXlD,QAAO,SAAAgC,GAAK,OAAIA,EAAMhG,GAAKmG,EAAGlC,KAAKkI,cAAcnG,SACjDF,KAAI,SAAAE,GAAK,MAAK,CACXA,QACA9B,WAAY,KACZI,OAAQ,KACRE,UAAW,KACXG,MAAO,KACPxE,SAAU,SAElBgF,WAAY6E,KAIpB,IAAM1F,GAAS,UAAA6B,EAAG2F,KAAKjM,SAASC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOqM,EAAKtF,kBAA3C,eAAqDpC,MAAM2H,eAAgB,KAE1F3H,EAAM0H,EAAKtF,SAAX,2BACOpC,EAAM0H,EAAKtF,UADlB,IAEIpH,KAAK,GAAD,mBACGgF,EAAM0H,EAAKtF,SAASpH,MADvB,CAEA,CACIqG,MAAOxG,EAAU0H,OAAOpH,MAAK,SAAAkG,GAAK,OAAIA,EAAMhG,KAAOmG,EAAGlC,KAAKkI,cAAcnG,SACzE9B,WAAYmI,EAAKnI,WACjBI,OAAmB,OAAXA,EAAkBA,EAAS+H,EAAKnI,WAAaI,EACrDE,UAAWF,EACXK,OAAO,UAAAwB,EAAG2F,KAAKjM,SAASC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOqM,EAAKtF,kBAA3C,eAAqDpC,QAAS,KACrExE,SAAUkM,EAAKlM,iBAM/ByE,OAAO2H,KAAK5H,GAAOsH,SAAQ,SAAArM,GACvB,IAAM4M,EAAQrK,OAAOvC,GAEjB+E,EAAM6H,GAAO7M,KAAKkD,OAASsD,EAAGlC,KAAKkI,cAAcnG,QACjDrB,EAAM6H,GAAN,2BACO7H,EAAM6H,IADb,IAEI7M,KAAK,GAAD,mBACGgF,EAAM6H,GAAO7M,MADhB,CAEA,CACIqG,MAAOxG,EAAU0H,OAAOpH,MAAK,SAAAkG,GAAK,OAAIA,EAAMhG,KAAOmG,EAAGlC,KAAKkI,cAAcnG,SACzE9B,WAAY,KACZI,OAAQ,KACRE,UAAW,KACXG,MAAO,KACPxE,SAAU,iBAQlCyE,OAAO2H,KAAK5H,GAAOsH,SAAQ,SAAAjM,GACvB,IP9JwB+D,EO8JlBnE,EAAS+E,EAAMxC,OAAOnC,IAE5B2E,EAAMxC,OAAOnC,IAAKmF,WAAa,CAC3BC,OAAQ,CACJ6E,SAAUlF,EAAmBnF,EAAQ,aACrCsK,YAAanF,EAAmBnF,EAAQ,gBACxCuK,MAAOpF,EAAmBnF,EAAQ,gBAClCwK,QAASrF,EAAmBnF,EAAQ,WACpCyK,YAAatF,EAAmBnF,EAAQ,gBACxC0K,cAAevF,EAAmBnF,EAAQ,kBAC1C2K,SAAUxF,EAAmBnF,EAAQ,aACrC4K,MAAOzF,EAAmBnF,EAAQ,SAClC6K,QAAS1F,EAAmBnF,EAAQ,WACpC8K,gBAAiB3F,EAAmBnF,EAAQ,oBAC5C+K,eAAgB5F,EAAmBnF,EAAQ,mBAC3CgL,iBAAkB7F,EAAmBnF,EAAQ,gBAC7CiL,IAAK9F,EAAmBnF,EAAQ,OAChCkL,MAAO/F,EAAmBnF,EAAQ,SAClCmL,aPhLgBhH,EOgLiBnE,EP/K1CmE,EAASpE,KAAKqE,QAAO,SAAArE,GAAI,OAAKA,EAAKuE,YAAc,GAAK,KAAGrB,QOgLhDyB,OAAQD,EAAezE,GACvB4E,UAAWD,EAAkB3E,GAC7BoL,YAAavG,EAAoB7E,GACjCqL,WAAYnH,EAAmBlE,GAC/BsL,OAAQ/G,EAAevE,GACvBuL,QAAS/G,EAAgBxE,IAE7B4F,QAAS,CACL4F,UAAWlF,EAAmBtG,GAC9BgG,MAAOQ,EAAexG,GACtBoH,MAAOX,EAAezG,GACtByL,SAAU/E,EAAkB1G,QAKlCD,EAAOiF,OAAOC,OAAOF,GAAO5B,QAC9B,SAACG,EAAYC,GAAb,mBAAC,eACMD,GADP,mBAEKC,EAAK4D,QAAQ1G,aAFlB,sBAEsC6C,EAAIC,EAAK4D,QAAQ1G,eAAiB,IAFxE,CAE6E8C,QAE7E,IAGJoG,EACIiC,GAAiB,CACb7L,OACA8H,QACA6D,KAAM/E,EAAmB5G,MAGjC4J,EAAST,MA7Hb,4CADA,uDAiIWnE,MAAf,QClOMnF,GAAYkJ,aAAY,CAC1BzH,KAAM,YACN0H,aAAc,CACVhJ,UAAMsJ,GAEVL,SAAU,CACN6D,oBADM,SACc/M,GAChBA,EAAMC,UAAOsJ,GAEjByD,sBAJM,SAIgBhN,EAAO0J,GACzB1J,EAAMC,KAAOyJ,EAAOC,YAKzB,GAAuD7J,GAAUuJ,QAAzD0D,GAAR,GAAQA,oBAAqBC,GAA7B,GAA6BA,sBAEvBC,GACT,SAAC3M,GAAD,8CACA,WAAMuJ,GAAN,iBAAA7G,EAAA,6DACI6G,EAASkD,MACTlD,EAASV,MAFb,SAI2BW,MAAM,+BAAD,OACOC,mBAC3B,6DANZ,cAIUC,EAJV,gBAUuBA,EAASC,OAVhC,OAUUhK,EAVV,OAYI4J,EAASwC,GAAUpM,EAAMK,IACzBuJ,EAASQ,GAAa/J,IACtBuJ,EAASD,GAAWtJ,IAEpBuJ,EAASmD,GAAsB/M,IAC/B4J,EAAST,MAjBb,4CADA,uDAqBWtJ,MAAf,QCzCMkC,GAAWgH,aAAY,CACzBzH,KAAM,WACN0H,aAAc,CACV3I,GAAI4M,aAAaC,QAAQ,YAAS5D,EAClC6D,aAAcF,aAAaC,QAAQ,iBAAmB,WAE1DjE,SAAU,CACNmE,MADM,SACArN,EAAO0J,GACT1J,EAAMM,GAAKoJ,EAAOC,QAEd3J,EAAMM,GACN4M,aAAaI,QAAQ,KAAMtN,EAAMM,IAEjC4M,aAAaK,WAAW,OAGhCC,gBAVM,SAUUxN,EAAO0J,GACnB1J,EAAMoN,aAAe1D,EAAOC,QAC5BuD,aAAaI,QAAQ,eAAgBtN,EAAMoN,kBAKhD,GAAmCpL,GAASqH,QAApCgE,GAAR,GAAQA,MAEFI,IAFN,GAAeD,gBAGlB,SAAClN,GAAD,8CACA,WAAMuJ,GAAN,SAAA7G,EAAA,sDACI6G,EAASwD,GAAM/M,IACfuJ,EAASoD,GAAe3M,IAF5B,2CADA,wDAMW0B,MAAf,QC6Ce0L,I,OApEgB,SAAC7N,GAC5B,MAA0B8N,mBAAiB,IAA3C,mBAAOpL,EAAP,KAAcqL,EAAd,KAEMtN,EAAKP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAAS1B,MAEtDuJ,EAAWgE,cACX3D,EAAU4D,cAEVC,EAAQC,uBACV,SAACC,GACG,GAAKA,GAGE,IAAK3N,EACR,YAHAuJ,EAAS4D,GAAgBhL,OAAOF,KAChC2H,EAAQgE,KAAR,WAAiB3L,EAAjB,MAKA1C,EAAMqC,SACNrC,EAAMqC,YAGd,CAAC2H,EAAUhK,EAAO0C,EAAOjC,EAAI4J,IAejC,OAZAiE,qBAAU,WACN,IAAMC,EAAW,SAACC,GACA,WAAVA,EAAE/I,KACFyI,GAAM,IAMd,OAFAO,SAASC,iBAAiB,QAASH,GAE5B,kBAAME,SAASE,oBAAoB,QAASJ,MACpD,CAACL,IAGA,0BACIU,SAAU,SAAAJ,GACNN,GAAM,GACNM,EAAEK,mBAGN,yBAAK9N,UAAU,SACX,yBAAKA,UAAU,kBAAkBgB,QAAS,kBAAMmM,GAAM,MACtD,yBAAKnN,UAAU,kBACX,4BAAQA,UAAU,iBAAlB,sBACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,wBACX,2BAAO+N,QAAQ,SAAf,WACA,2BACI/N,UAAU,eACVe,KAAK,OACLiN,YAAY,eACZrM,MAAOA,EACPsM,SAAU,SAAAR,GAAC,OAAIT,EAASS,EAAES,OAAOvM,YAI7C,4BAAQ3B,UAAU,iBACd,kBAAC,EAAD,CAAQkB,MAAM,aAAaH,KAAK,SAASE,UAAWS,EAAeC,WChE5EwM,GANwC,WACnD,IAAMC,EAAWjP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAASoL,gBAElE,OAAO,SAAC/L,GAAD,gBAAoC,YAAb2N,EAAyB,UAAY,SAA5D,YAAwE3N,KCUpE4N,GAZ0C,WACrD,IAAMD,EAAWjP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAASoL,gBAElE,OAAO,SAACvK,GACJ,MAAiB,YAAbmM,EbMW,SAACnM,GACpB,OAAOA,EAAOM,OAASU,EAAWhB,GAAUA,EAAOM,OAAS,EaN7C+L,CAAQrM,GbSL,SAACA,GACnB,IAAMsM,EAASvM,EAAKC,GAAQ,SAAAxC,GAAE,OAAIA,KAC5B2G,EAAMf,KAAKmJ,KAAKvM,EAAOM,OAAS,GAEtC,OAAIgM,EAAOhM,OAAS,IAAM,GACdgM,EAAOnI,GAAOmI,EAAOnI,EAAM,IAAM,EAGtCmI,EAAOnI,EAAM,GadTqI,CAAOxM,KCLhByM,GAAQ,kBAgGCC,GA9FiB,WAC5B,IAAMrF,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAE1DuP,EAAYT,KACZU,EAAYR,KAElB,IAAK/E,EACD,OAAO,kBAAC,EAAD,CAAQ5I,MAAOgO,KAG1B,IAAMI,EAAoB9M,EAAKsH,EAAQyF,MAAM,SAAAtP,GAAE,OAAIA,EAAGuP,OAAM,OACtDC,EAAsBjN,EAAKsH,EAAQyF,MAAM,SAAAtP,GAAE,OAAIA,EAAGuM,gBAElDkD,EAAmB5M,EAAKwM,GACxBK,EAAoB3M,EAAKsM,GAEzBM,EAAkB9M,EAAK2M,GACvBI,EAAmB7M,EAAKyM,GAExBK,EAAQR,EAAkBpL,QAAO,SAAA6L,GAAM,OAAIA,EAAOP,MAAQ,OAAMzM,OAChEiN,EAASV,EAAkBpL,QAAO,SAAA6L,GAAM,OAAIA,EAAOP,MAAQ,OAAOzM,OAClEkN,EAAUX,EAAkBpL,QAAO,SAAA6L,GAAM,OAAIA,EAAOP,MAAQ,OAAQzM,OACpEmN,EAAQZ,EAAkBpL,QAAO,SAAA6L,GAAM,OAAIA,EAAOP,MAAQ,OAASzM,OAEzE,OACI,kBAAC,EAAD,CAAQ7B,MAAOgO,IACX,wBAAI1O,UAAU,gBACTkP,GACG,wBAAIlP,UAAU,sBACV,kDACA,8BACI,2BAAI8C,EAAmBoM,EAAiBF,OAD5C,KACyDE,EAAiBS,YAD1E,MAKPR,GACG,wBAAInP,UAAU,sBACV,mDACA,8BACI,2BAAI8C,EAAmBqM,EAAkBH,OAD7C,KAC0DG,EAAkBQ,YAD5E,MAKPP,GACG,wBAAIpP,UAAU,sBACV,oDACA,8BACI,2BAAI8C,EAAmBsM,EAAgBpD,eAD3C,KACgEoD,EAAgBO,YADhF,MAKPN,GACG,wBAAIrP,UAAU,sBACV,qDACA,8BACI,2BAAI8C,EAAmBuM,EAAiBrD,eAD5C,KACiEqD,EAAiBM,YADlF,MAKR,wBAAI3P,UAAU,sBACV,8BAAO4O,EAAU,SACjB,2BACK9L,EAAmBjB,OAAOqB,EAAM2L,EAAUC,EAAkBtJ,KAAI,SAAA+J,GAAM,OAAIA,EAAOP,SAAQ,OAGlG,wBAAIhP,UAAU,sBACV,8BAAO4O,EAAU,WACjB,2BACK9L,EACGjB,OAAOqB,EAAM2L,EAAUI,EAAoBzJ,KAAI,SAAA+J,GAAM,OAAIA,EAAOvD,iBAAgB,OAI5F,wBAAIhM,UAAU,sBACV,iDACA,2BAAIsP,IAER,wBAAItP,UAAU,sBACV,kDACA,2BAAIwP,IAER,wBAAIxP,UAAU,sBACV,mDACA,2BAAIyP,IAER,wBAAIzP,UAAU,sBACV,iDACA,2BAAI0P,OC5DTE,I,OA1BqB,SAAC3Q,GACjC,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAE9DC,EAAM,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWK,SAASC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOT,EAAMS,MACxDC,EAAI,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAWU,MAAMJ,MAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAH,OAAUJ,QAAV,IAAUA,OAAV,EAAUA,EAAQK,SACrDE,EAAQ,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAWY,cAAcN,MAAK,SAAAC,GAAE,OAAIA,EAAGC,MAAH,OAAUJ,QAAV,IAAUA,OAAV,EAAUA,EAAQS,iBAEvE,OACI,yBAAKC,UAAU,eACX,yBACII,IAAG,iFAAqET,QAArE,IAAqEA,OAArE,EAAqEA,EAAMU,MAA3E,OACmC,SAA1B,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUS,qBAAgC,KAAO,GADlD,WAGHC,IAAG,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,SACbR,UAAU,uBAEd,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,qBACX,qCAAOV,QAAP,IAAOA,OAAP,EAAOA,EAAQkB,WAEnB,yBAAKR,UAAU,uBAAuBf,EAAM+E,YCvBtD0K,I,OAAQ,sBAsECmB,GApEc,WACzB,IAAM7E,EAAO7L,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAM2G,QAE3D,OAAKA,EAKD,kBAAC,EAAD,CAAQtK,MAAOgO,GAAOrN,WAAW,eAC7B,yBAAKrB,UAAU,QACX,yBAAKA,UAAU,aACVgL,EAAKxE,GACD9C,QAAO,SAAAjE,GAAE,OAAgC,IAA5BA,EAAGgH,QAAQ1G,gBACxByF,KAAI,SAAAlG,GAAM,OACP,kBAAC,GAAD,CACIoF,IAAKpF,EAAOmH,QAAQ/G,GACpBA,GAAIJ,EAAOmH,QAAQ/G,GACnBsE,OAAQ1E,EAAOuF,WAAWC,OAAOd,aAIjD,yBAAKhE,UAAU,aACVgL,EAAKxE,GACD9C,QAAO,SAAAjE,GAAE,OAAgC,IAA5BA,EAAGgH,QAAQ1G,gBACxByF,KAAI,SAAAlG,GAAM,OACP,kBAAC,GAAD,CACIoF,IAAKpF,EAAOmH,QAAQ/G,GACpBA,GAAIJ,EAAOmH,QAAQ/G,GACnBsE,OAAQ1E,EAAOuF,WAAWC,OAAOd,aAIjD,yBAAKhE,UAAU,aACVgL,EAAKxE,GACD9C,QAAO,SAAAjE,GAAE,OAAgC,IAA5BA,EAAGgH,QAAQ1G,gBACxByF,KAAI,SAAAlG,GAAM,OACP,kBAAC,GAAD,CACIoF,IAAKpF,EAAOmH,QAAQ/G,GACpBA,GAAIJ,EAAOmH,QAAQ/G,GACnBsE,OAAQ1E,EAAOuF,WAAWC,OAAOd,aAIjD,yBAAKhE,UAAU,aACVgL,EAAKxE,GACD9C,QAAO,SAAAjE,GAAE,OAAgC,IAA5BA,EAAGgH,QAAQ1G,gBACxByF,KAAI,SAAAlG,GAAM,OACP,kBAAC,GAAD,CACIoF,IAAKpF,EAAOmH,QAAQ/G,GACpBA,GAAIJ,EAAOmH,QAAQ/G,GACnBsE,OAAQ1E,EAAOuF,WAAWC,OAAOd,aAIjD,yBAAKhE,UAAU,8BACVgL,EAAKtE,MAAMlB,KAAI,SAAAlG,GAAM,OAClB,kBAAC,GAAD,CACIoF,IAAKpF,EAAOmH,QAAQ/G,GACpBA,GAAIJ,EAAOmH,QAAQ/G,GACnBsE,OAAQ1E,EAAOuF,WAAWC,OAAOd,eAvD9C,kBAAC,EAAD,CAAQtD,MAAOgO,MCVxBoB,I,OAAe,CACjBC,IAAK,kBACLC,IAAK,sBAeMC,GARiB,SAAChR,GAC7B,OACI,0BAAMe,UAAU,SAASU,MAAOoP,GAAa7Q,EAAMiR,SAC9CjR,EAAMiR,SCcJC,GAnBmB,SAAClR,GAC/B,IAAMS,EAAKP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAAS1B,MAGxD0Q,EADS,kDAA8C1Q,EAA9C,KASb,OANIT,EAAMyG,MACN0K,EAAG,UAAMA,EAAN,iBAAkBnR,EAAMyG,MAAxB,KACIzG,EAAMiP,SACbkC,EAAG,UAAMA,GAAN,OAAYnR,EAAMiP,OAAlB,MAIH,uBAAGmC,KAAMD,EAAKlC,OAAO,SAASoC,IAAI,uBAC7BrR,EAAMyG,MAAN,aAAoBzG,EAAMyG,OAAUzG,EAAMiC,MAAQjC,EAAMiC,MAAQkP,ICNvE1B,GAAQ,eAuTC6B,GA3RqB,WAChC,IAAMlM,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDiK,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAEhE,IAAKiK,IAAYjF,EACb,OAAO,kBAAC,EAAD,CAAQ3D,MAAOgO,KAG1B,IAAM8B,EAAapM,EAAcC,GAE3BoM,EAAO9L,EAAoB6L,EAAY,YACvCE,EAAU/L,EAAoB6L,EAAY,eAC1C3G,EAAQlF,EAAoB6L,EAAY,SACxC1G,EAAUnF,EAAoB6L,EAAY,WAC1CzG,EAAcpF,EAAoB6L,EAAY,eAC9CxG,EAAgBrF,EAAoB6L,EAAY,iBAChDvG,EAAWtF,EAAoB6L,EAAY,YAC3CtG,EAAQvF,EAAoB6L,EAAY,SACxCrG,EAAUxF,EAAoB6L,EAAY,WAC1CpG,EAAkBzF,EAAoB6L,EAAY,mBAClDnG,EAAiB1F,EAAoB6L,EAAY,kBACjDG,EAAchM,EAAoB6L,EAAY,oBAC9CjG,EAAM5F,EAAoB6L,EAAY,OACtChG,EAAQ7F,EAAoB6L,EAAY,SAExCI,EAAkBtO,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGoF,WAAWC,OAAO2F,gBAEnEoG,EAAcvO,EAChBN,EACIwO,EAAWhL,KAAI,SAAAlG,GAAM,kCACdA,GADc,IAEjBD,KAAM2C,EAAK,YAAI1C,EAAOD,OAAO,SAAAI,GAAE,OAAIA,EAAGuE,QAAU,WAEpD,SAAAvE,GAAE,aAAI,UAAA6C,EAAK7C,EAAGJ,aAAR,eAAe2E,SAAU,MAIjC8M,EAAqBxO,EACvBN,EACIwO,EACKhL,KAAI,SAAAlG,GAAM,kCACJA,GADI,IAEPD,KAAM2C,EACF1C,EAAOD,KAAKqE,QAAO,SAAArE,GAAI,OAAwB,IAApBA,EAAKuE,eAChC,SAAAnE,GAAE,OAAIA,EAAGyE,WAAa,UAG7BR,QAAO,SAAApE,GAAM,OAAIA,EAAOD,KAAKkD,WAClC,SAAA9C,GAAE,aAAI,UAAA6C,EAAK7C,EAAGJ,aAAR,eAAe6E,YAAa,MAIpC6M,EAAoBzO,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,WACrEgN,EAAmB1O,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGoF,WAAWC,OAAO4F,gBAEpEuG,EAAQ3H,EAAQ4H,QAAQ3O,OAExB4O,EAAe7O,EACjBN,EACIsC,OAAO8M,QACHC,MAAMC,KAAKD,MAAMJ,GAAOhF,QACnBzG,KAAI,SAAC/F,EAAIyM,GAAL,OAAe5J,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGJ,KAAK6M,GAAOhI,WAAa,SAC3EzB,QACG,SAACG,EAAKC,GAAN,OACIA,EAAI,2BAESD,GAFT,mBAGOC,EAAK4D,QAAQ/G,IAAMkD,EAAIC,EAAK4D,QAAQ/G,IAAMkD,EAAIC,EAAK4D,QAAQ/G,IAAM,GAAK,IAE3EkD,IACV,MAGZ,SAAAnD,GAAE,OAAIA,EAAG,OAIjB,OACI,kBAAC,EAAD,CAAQiB,MAAOgO,IACX,wBAAI1O,UAAU,gBACT6Q,GACG,wBAAI7Q,UAAU,sBACV,iDACA,8BACI,kBAAC,EAAD,CACIN,GAAImR,EAAYpK,QAAQ/G,GACxBe,OAAQ,WACJ,IAAM8Q,EAAOjP,EAAKuO,EAAYxR,MAE9B,OAAKkS,EAKD,oCACK,IADL,IAEMvJ,EAAeuJ,EAAKvN,QAAU,GAFpC,KAEyC,kBAAC,GAAD,CAAU0B,MAAO6L,EAAK7L,MAAMhG,KAFrE,KAJO,MAUfS,UAAQ,MAKvB4Q,GACG,wBAAI/Q,UAAU,sBACV,qDACC+Q,EAAkBlM,WAAWC,OAAO8F,OAAS,GAC1C,kBAAC,EAAD,CACIlL,GAAIqR,EAAkBtK,QAAQ/G,GAC9Be,OAAQ,kBACJ,oCACK,IADL,IAEMuH,EAAe+I,EAAkBlM,WAAWC,OAAOd,QAFzD,IAEmE,IAC9Dd,EACG6N,EAAkBlM,WAAWC,OAAOd,OAChC+M,EAAkBlM,WAAWC,OAAO8F,QACzC,IACH,kBAAC,GAAD,CAAQsF,OAAO,QAPnB,MAUJ/P,UAAQ,KAKvB2Q,GAzJgB,SAACU,GAC9B,IAAMD,EAAOjP,EAAKkP,EAASnS,MAE3B,OAAKkS,EAKD,wBAAIvR,UAAU,sBACV,uDACA,8BACI,kBAAC,EAAD,CACIN,GAAI8R,EAAS/K,QAAQ/G,GACrBe,OAAQ,kBACJ,oCACK,IADL,IAEMuH,EAAeuJ,EAAKrN,WAAa,GAFvC,KAE4C,kBAAC,GAAD,CAAUwB,MAAO6L,EAAK7L,MAAMhG,KAFxE,MAKJS,UAAQ,MAfb,KAqJwBsR,CAAyBX,GAC/CE,GACG,wBAAIhR,UAAU,sBACV,2DACCgR,EAAiBnM,WAAWC,OAAO+F,QAAU,GAC1C,kBAAC,EAAD,CACInL,GAAIsR,EAAiBvK,QAAQ/G,GAC7Be,OAAQ,kBACJ,oCACK,IADL,IAEMuH,EAAegJ,EAAiBnM,WAAWC,OAAO4F,aAFxD,IAEuE,IAClExH,EACG8N,EAAiBnM,WAAWC,OAAO4F,YAC/BsG,EAAiBnM,WAAWC,OAAO+F,SACxC,IACH,kBAAC,GAAD,CAAQqF,OAAO,QAPnB,MAUJ/P,UAAQ,KAKvB0J,GAASA,EAAMhF,WAAWC,OAAO+E,MAAQ,GACtC,wBAAI7J,UAAU,sBACV,4CACA,kBAAC,EAAD,CAAQN,GAAImK,EAAMpD,QAAQ/G,GAAIe,OAAM,UAAKoJ,EAAMhF,WAAWC,OAAO+E,OAAS1J,UAAQ,KAGzF2J,GAAWA,EAAQjF,WAAWC,OAAOgF,QAAU,GAC5C,wBAAI9J,UAAU,sBACV,8CACA,kBAAC,EAAD,CAAQN,GAAIoK,EAAQrD,QAAQ/G,GAAIe,OAAM,UAAKqJ,EAAQjF,WAAWC,OAAOgF,SAAW3J,UAAQ,KAG/F8J,GAAYA,EAASpF,WAAWC,OAAOmF,SAAW,GAC/C,wBAAIjK,UAAU,sBACV,gDACA,kBAAC,EAAD,CAAQN,GAAIuK,EAASxD,QAAQ/G,GAAIe,OAAM,UAAKwJ,EAASpF,WAAWC,OAAOmF,UAAY9J,UAAQ,KAGlG6J,GAAiBA,EAAcnF,WAAWC,OAAOkF,cAAgB,GAC9D,wBAAIhK,UAAU,sBACV,qDACA,kBAAC,EAAD,CACIN,GAAIsK,EAAcvD,QAAQ/G,GAC1Be,OAAM,UAAKuJ,EAAcnF,WAAWC,OAAOkF,eAC3C7J,UAAQ,KAInB4J,GAAeA,EAAYlF,WAAWC,OAAOiF,YAAc,GACxD,wBAAI/J,UAAU,sBACV,mDACA,kBAAC,EAAD,CACIN,GAAIqK,EAAYtD,QAAQ/G,GACxBe,OAAM,UAAKsJ,EAAYlF,WAAWC,OAAOiF,aACzC5J,UAAQ,KAInB+J,GAASA,EAAMrF,WAAWC,OAAOoF,MAAQ,GACtC,wBAAIlK,UAAU,sBACV,4CACA,kBAAC,EAAD,CAAQN,GAAIwK,EAAMzD,QAAQ/G,GAAIe,OAAM,UAAKyJ,EAAMrF,WAAWC,OAAOoF,OAAS/J,UAAQ,KAGzFiK,GAAmBA,EAAgBvF,WAAWC,OAAOsF,gBAAkB,GACpE,wBAAIpK,UAAU,sBACV,uDACA,kBAAC,EAAD,CACIN,GAAI0K,EAAgB3D,QAAQ/G,GAC5Be,OAAM,UAAK2J,EAAgBvF,WAAWC,OAAOsF,iBAC7CjK,UAAQ,KAInBkK,GAAkBA,EAAexF,WAAWC,OAAOuF,eAAiB,GACjE,wBAAIrK,UAAU,sBACV,sDACA,kBAAC,EAAD,CACIN,GAAI2K,EAAe5D,QAAQ/G,GAC3Be,OAAM,UAAK4J,EAAexF,WAAWC,OAAOuF,gBAC5ClK,UAAQ,KAInBgK,GAAWA,EAAQtF,WAAWC,OAAOqF,QAAU,GAC5C,wBAAInK,UAAU,sBACV,8CACA,kBAAC,EAAD,CACIN,GAAIyK,EAAQ1D,QAAQ/G,GACpBe,OAAM,UAAKqC,EAAmBqH,EAAQtF,WAAWC,OAAOqF,UACxDhK,UAAQ,KAInBsQ,GAAQA,EAAK5L,WAAWC,OAAO6E,SAAW,GACvC,wBAAI3J,UAAU,sBACV,gDACA,kBAAC,EAAD,CAAQN,GAAI+Q,EAAKhK,QAAQ/G,GAAIe,OAAM,UAAKgQ,EAAK5L,WAAWC,OAAO6E,UAAYxJ,UAAQ,KAG1FuQ,GAAWA,EAAQ7L,WAAWC,OAAO8E,YAAc,GAChD,wBAAI5J,UAAU,sBACV,mDACA,kBAAC,EAAD,CAAQN,GAAIgR,EAAQjK,QAAQ/G,GAAIe,OAAM,UAAKiQ,EAAQ7L,WAAWC,OAAO8E,aAAezJ,UAAQ,KAGnGqK,GAASA,EAAM3F,WAAWC,OAAO0F,MAAQ,GACtC,wBAAIxK,UAAU,sBACV,mDACA,kBAAC,EAAD,CAAQN,GAAI8K,EAAM/D,QAAQ/G,GAAIe,OAAM,UAAK+J,EAAM3F,WAAWC,OAAO0F,OAASrK,UAAQ,KAGzFoK,GAAOA,EAAI1F,WAAWC,OAAOyF,IAAM,GAChC,wBAAIvK,UAAU,sBACV,mDACA,kBAAC,EAAD,CACIN,GAAI6K,EAAI9D,QAAQ/G,GAChBe,OAAM,UAAKqC,EAAmByH,EAAI1F,WAAWC,OAAOyF,MACpDpK,UAAQ,KAInBwQ,GAAeA,EAAY9L,WAAWC,OAAOwF,iBAAmB,GAC7D,wBAAItK,UAAU,sBACV,yDACA,kBAAC,EAAD,CACIN,GAAIiR,EAAYlK,QAAQ/G,GACxBe,OAAM,UAAKkQ,EAAY9L,WAAWC,OAAOwF,kBACzCnK,UAAQ,KAInByQ,GAAmBA,EAAgB/L,WAAWC,OAAO2F,YAAc,GAChE,wBAAIzK,UAAU,sBACV,kDACA,kBAAC,EAAD,CACIN,GAAIkR,EAAgBnK,QAAQ/G,GAC5Be,OAAM,UAAKmQ,EAAgB/L,WAAWC,OAAO2F,aAC7CtK,UAAQ,KAInBgR,GACG,wBAAInR,UAAU,sBACV,+CACA,kBAAC,EAAD,CAAQN,GAAImC,OAAOsP,EAAa,IAAK1Q,OAAM,UAAK0Q,EAAa,IAAMhR,UAAQ,QCrT7FuO,GAAQ,aAiECgD,GA5DmB,WAC9B,IAAMrN,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAEtDiK,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAEhE,IAAKgF,IAAUiF,EACX,OAAO,kBAAC,EAAD,CAAQ5I,MAAOgO,KAG1B,IAAMuC,EAAQ3H,EAAQ4H,QAAQ3O,OAExBoP,EAAarN,OAAOC,OAAOF,GAC5BmB,KAAI,SAAA3F,GACD,IAAM8K,EAAa9K,EAAS2F,KAAI,SAAAlG,GAAM,OAAIA,EAAOD,KAAKmG,KAAI,SAAAnG,GAAI,OAAIA,EAAKuE,iBAEvE,OAAOyN,MAAMC,KAAKD,MAAMJ,GAAOhF,QAAQzG,KACnC,SAAC/F,EAAIyM,GAAL,OAAevB,EAAWnF,KAAI,SAAAlG,GAAM,OAAKA,EAAO4M,IAAU,GAAK,KAAGxI,QAAO,SAAAkO,GAAG,QAAMA,KAAKrP,aAG9F4C,MAAM,GAEL9F,EAAOgS,MAAMC,KAAKD,MAAMJ,GAAOhF,QAChCzG,KAAI,SAAC/F,EAAIyM,GAAL,OAAeyF,EAAWnM,KAAI,SAAA4L,GAAO,OAAIA,EAAQlF,MAAQ2F,KAAK,QAClEpP,QACG,SAACG,EAAKkP,EAAW5F,GAAjB,mBAAC,eACMtJ,GADP,mBAEKkP,EAAY,CACTC,OAAQnP,EAAIkP,GAAalP,EAAIkP,GAAWC,MAAQ,GAAK,EACrD/N,QAASpB,EAAIkP,GAAalP,EAAIkP,GAAW9N,OAAS,GAAKsF,EAAQ4H,QAAQhF,GAAOlI,YAGtF,IAGR,OACI,kBAAC,EAAD,CAAQtD,MAAOgO,IACVpK,OAAO8M,QAAQ/R,GAAMkD,OAAS,GAC3B,wBAAIvC,UAAU,gBACTgC,EAAKsC,OAAO8M,QAAQ/R,IAAO,SAAAI,GAAE,OAAIA,EAAG,GAAGsS,SAAOvM,KAAI,YAA+B,IAAD,mBAA5BsM,EAA4B,KAAjBE,EAAiB,KAC7E,OACI,wBAAIhS,UAAU,qBAAqB0E,IAAKoN,GACpC,8BA5CR,SAACA,GAAD,OACpB7O,EAAW6O,EAAUvO,MAAM,KAAKiC,KAAI,SAAA3F,GAAQ,OAAIgC,OAAOhC,OAAc,GAAK,cAAgBiS,EA2CvDG,CAAgBH,IACvB,6BACI,6BACI,2BAAI/J,EAAgBiK,EAAYD,SAEpC,yBAAK/R,UAAU,SACVgI,EAAelF,EAAmBkP,EAAYhO,SADnD,IAC8D,IACzDd,EAAM8O,EAAYhO,OAASgO,EAAYD,OAF5C,IAEoD,kBAAC,GAAD,CAAQ7B,OAAO,iBCzDjGxB,GAAQ,WAmDCwD,GAjDiB,WAC5B,IAAM7N,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAE5D,IAAKgF,EACD,OAAO,kBAAC,EAAD,CAAQ3D,MAAOgO,KAG1B,IAAMyD,EAAWnQ,EACbsC,OAAOC,OAAOF,GACTmB,KAAI,SAAA3F,GACD,OAAOA,EACF2F,KAAI,SAAAlG,GAAM,MAAK,CACZA,SACAD,KAAMC,EAAOD,KAAKqE,QAAO,SAAArE,GAAI,OAAKA,EAAKuE,YAAc,GAAK,SAE7DF,QAAO,SAAApE,GAAM,OAAIA,EAAOD,KAAKkD,OAAS,QAE9CE,QAAO,SAACG,EAAKC,GAAN,OAAeD,EAAI4B,OAAO3B,KAAO,KAC7C,SAAApD,GAAE,OAAIA,EAAGJ,KAAKkD,UAGlB,OACI,kBAAC,EAAD,CAAQ7B,MAAOgO,IACVyD,EAAS5P,OAAS,GACf,wBAAIvC,UAAU,gBACTmS,EAAS3M,KAAI,SAAA4M,GACV,IAAMC,EAAMpP,EAAWmP,EAAQ/S,KAAKmG,KAAI,SAAAnG,GAAI,OAAIA,EAAK2E,QAAU,MAE/D,OACI,wBAAIhE,UAAU,qBAAqB0E,IAAK0N,EAAQ9S,OAAOmH,QAAQ/G,IAC3D,kBAAC,EAAD,CAAQA,GAAI0S,EAAQ9S,OAAOmH,QAAQ/G,KACnC,6BACI,6BACI,2BAAIqI,EAAgBqK,EAAQ/S,KAAKkD,UAErC,yBAAKvC,UAAU,SACVgI,EAAelF,EAAmBuP,IADvC,KACgDnP,EAAMmP,EAAMD,EAAQ/S,KAAKkD,QAAS,IAC9E,kBAAC,GAAD,CAAQ2N,OAAO,iBCvCjDxB,GAAQ,YAoFC4D,GAlFkB,WAC7B,IAAMhJ,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAC1DH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAE9DuP,EAAYT,KACZU,EAAYR,KAElB,IAAK/E,IAAYpK,EACb,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAM6D,EAAcjJ,EAAQ4H,QAAQ1L,KAAI,SAAC+L,EAAMrF,GAAP,OAAiBqF,EAAKvN,OAAS9E,EAAU0H,OAAOsF,GAAOsG,uBACzFC,EAAczQ,EAAKsH,EAAQ4H,SAAS,SAAAzR,GAAE,OAAIA,EAAGuP,OAAM,OAEnD0D,EAAM1Q,EAAKsH,EAAQ4H,SAAS,SAAAzR,GAAE,OAAIA,EAAGuE,UAErC2O,EAASrQ,EAAKoQ,GACdE,EAAUpQ,EAAKkQ,GAEfG,EAAavQ,EAAKmQ,GAClBK,EAActQ,EAAKiQ,GAEzB,OACI,kBAAC,EAAD,CAAQ/R,MAAOgO,IACX,wBAAI1O,UAAU,gBACV,wBAAIA,UAAU,sBACV,8BAAO4O,EAAU,6BACjB,2BAAI5G,EAAe9E,EAAM2L,EAAU0D,OAEvC,wBAAIvS,UAAU,sBACV,wDACA,2BAAIuS,EAAY7O,QAAO,SAAAqP,GAAI,OAAIA,GAAQ,KAAGxQ,SAE9C,wBAAIvC,UAAU,sBACV,wDACA,2BAAIuS,EAAY7O,QAAO,SAAAqP,GAAI,OAAIA,EAAO,KAAGxQ,SAE7C,wBAAIvC,UAAU,sBACV,8BAAO4O,EAAU,YACjB,2BAAI9L,EAAmBjB,OAAOqB,EAAM2L,EAAUvF,EAAQ4H,QAAQ1L,KAAI,SAAA+L,GAAI,OAAIA,EAAKvC,cAElF2D,GACG,wBAAI3S,UAAU,sBACV,+CACA,8BACI,2BAAIgI,EAAe2K,EAAO3O,SAD9B,KAEI,kBAAC,GAAD,CAAU0B,MAAOiN,EAAOjN,QAF5B,MAMPkN,GACG,wBAAI5S,UAAU,sBACV,gDACA,8BACI,2BAAIgI,EAAe4K,EAAQ5O,SAD/B,KAEI,kBAAC,GAAD,CAAU0B,MAAOkN,EAAQlN,QAF7B,MAMPmN,GACG,wBAAI7S,UAAU,sBACV,8CACA,8BACI,2BAAI8C,EAAmB+P,EAAW7D,OADtC,KAEI,kBAAC,GAAD,CAAUtJ,MAAOmN,EAAWnN,QAFhC,MAMPoN,GACG,wBAAI9S,UAAU,sBACV,+CACA,8BACI,2BAAI8C,EAAmBgQ,EAAY9D,OADvC,KAEI,kBAAC,GAAD,CAAUtJ,MAAOoN,EAAYpN,QAFjC,SCzElBgJ,GAAQ,YA4DCsE,GA1DmB,WAC9B,IAAM3O,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAE9DwP,EAAYR,KAElB,IAAKhK,IAAUnF,EACX,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAMuE,EAAoC3O,OAAO8M,QAAQ/M,GAAO5B,QAC5D,SAACG,EAAD,0BAAOsQ,EAAP,KAAoB3T,EAApB,wBAAC,eACMqD,GADP,mBAEKsQ,EAAc3T,EAASgD,WAE5B,IAGJ,OACI,kBAAC,EAAD,CAAQ7B,MAAOgO,IACVpK,OAAO8M,QAAQ6B,GAAW1Q,OAAS,GAChC,wBAAIvC,UAAU,gBACV,wBAAIA,UAAU,sBACV,uCACA,2BACK2H,EACGlF,EAAO6B,OAAOC,OAAO0O,IAAY,SAAAxT,GAAE,OAAIA,KACvC,SACA,aAIX6E,OAAO8M,QAAQ6B,GAAWzN,KAAI,YAA8B,IAAD,qBAA3B0N,EAA2B,KAAd3T,EAAc,KAClD4T,EAAc9O,EAAMxC,OAAOqR,IAAc1N,KAAI,SAAAlG,GAAM,OAAIA,EAAOuF,WAAWC,OAAOd,UAEtF,OACI,wBAAIhE,UAAU,qBAAqB0E,IAAKwO,GACpC,wCACKhU,EAAUY,cAAcN,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOmC,OAAOqR,aADzD,aACK,EAAmEE,aAExE,6BACI,6BACI,2BAAIzL,EAAUpI,EAAU,SAAU,aAEtC,yBAAKS,UAAU,SACVgI,EAAelF,EAAmBG,EAAWkQ,KADlD,IACmE,IAC9DjQ,EAAM2L,EAAUsE,IAFrB,IAEoC,kBAAC,GAAD,CAAQjD,OAAO,iBC/CjFxB,GAAQ,SAER2E,GAAqB,SAACzO,EAAqBF,GAAtB,OACvBzB,EAAW2B,EAAQY,KAAI,SAAAlG,GAAM,OAAIA,EAAOuF,WAAWC,OAAOJ,QA2K/C4O,GAzKgB,WAAO,IAAD,EAC3BjP,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtD8H,EAAQhI,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAM8C,SAEtDmC,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAE1DqJ,EAAQvJ,aAAY,SAACC,GAAD,OAAsBA,EAAMsJ,MAAMrJ,QAE5D,IAAKgF,IAAUiF,IAAYnC,IAAUuB,EACjC,OAAO,kBAAC,EAAD,CAAQhI,MAAOgO,KAG1B,IAAM8B,EAAapM,EAAcC,GAE3BoM,EAAO4C,GAAmB7C,EAAY,YACtCE,EAAU2C,GAAmB7C,EAAY,eACzC3G,EAAQwJ,GAAmB7C,EAAY,SACvC1G,EAAUuJ,GAAmB7C,EAAY,WACzCzG,EAAcsJ,GAAmB7C,EAAY,eAC7CxG,EAAgBqJ,GAAmB7C,EAAY,iBAC/CvG,EAAWoJ,GAAmB7C,EAAY,YAC1CtG,EAAQmJ,GAAmB7C,EAAY,SACvCrG,EAAUkJ,GAAmB7C,EAAY,WACzCpG,EAAkBiJ,GAAmB7C,EAAY,mBACjDnG,EAAiBgJ,GAAmB7C,EAAY,kBAChDG,EAAc0C,GAAmB7C,EAAY,oBAC7CjG,EAAM8I,GAAmB7C,EAAY,OACrChG,EAAQ6I,GAAmB7C,EAAY,SAEvC+C,EAAiB9Q,EAAO6G,EAAQ4H,SAAS,SAAAzR,GAAE,OAAIA,EAAG+T,mBAClDC,EAAYhR,EAAO6G,EAAQ4H,SAAS,SAAAzR,GAAE,OAAIA,EAAGiU,qBAAuB,KACpEC,EAAelR,EAAO6G,EAAQ4H,SAAS,SAAAzR,GAAE,OAAIA,EAAGmU,mBAEhDC,EAAE,UAAGrD,EACNhR,MAAK,SAAAF,GAAM,OAA8D,IAA1DA,EAAOD,KAAKyU,WAAU,SAAAzU,GAAI,OAAwB,IAApBA,EAAKuE,wBAD/C,aAAG,EAELvE,KAAKG,MAAK,SAAAH,GAAI,OAAwB,IAApBA,EAAKuE,cAEvBmQ,EAASzR,EAAKgC,OAAO8M,QAAQjK,GAAO3H,MAAK,8CAAyB,WAAzB,SAAsC,IAE/EwU,EAAWD,EACX9Q,EACIuN,EACK9M,QAAO,SAAApE,GAAM,OAAKA,EAAOD,KAAKwC,OAAOkS,GAAU,GAAGlU,UAAY,GAAK,MACnE2F,KAAI,SAAAlG,GAAM,OAAIA,EAAOD,KAAKwC,OAAOkS,GAAU,GAAG/P,QAAU,MAEjE,KAEAiQ,EAAmBxR,EACrB+N,EAAWhL,KAAI,SAAAlG,GAAM,OAAIA,EAAOD,KAAKqE,QAAO,SAAArE,GAAI,OAAKA,EAAK6E,WAAa,GAAK,KAAG3B,WAC/E,SAAA9C,GAAE,OAAIA,KAEJyU,EAAazR,EACf+N,EAAWhL,KAAI,SAAAlG,GAAM,OAAIA,EAAOD,KAAKqE,QAAO,SAAArE,GAAI,OAAwB,OAApBA,EAAKuE,cAAqBrB,WAC9E,SAAA9C,GAAE,OAAIA,KAGV,OACI,kBAAC,EAAD,CAAQiB,MAAOgO,IACX,wBAAI1O,UAAU,gBACV,wBAAIA,UAAU,sBACV,sDACA,8BACI,kBAAC,GAAD,CAAUkO,OAAO,YAAYhN,MAAK,UAAKqS,OAG/C,wBAAIvT,UAAU,sBACV,kDACA,8BACI,2BAAIyT,GADR,KACyBzL,GAA4B,EAAbyL,GADxC,IAC0D,IACrD/K,EAAMyL,uBAAyB,EAC1BjR,EAAoB,EAAZuQ,EAAiB/K,EAAMyL,uBAA0B,KACzD,EAJV,OAQJ,wBAAInU,UAAU,sBACV,8CACA,2BAAIgI,EAAelF,EAAmB4F,EAAMyL,2BAEhD,wBAAInU,UAAU,sBACV,uDACA,2BAAIgI,EAAelF,EAAmB6Q,MAE1C,wBAAI3T,UAAU,sBACV,oDACA,8BACI,2BAAIiU,GACHC,EAAa,GAAb,YAAuBhR,EAAM+Q,EAAmBC,GAAhD,aAGDvL,IAAPkL,GACG,wBAAI7T,UAAU,sBACV,8DACA,8BACI,2BAAIgI,GAAgB6L,EAAG7P,QAAU,GAAK,IAD1C,KAEI,kBAAC,GAAD,CAAU0B,MAAOmO,EAAGnO,MAAMhG,KAF9B,MAMM,OAAbsU,GACG,wBAAIhU,UAAU,sBACV,2DACA,8BACI,2BAAIgI,EAAegM,IADvB,KAEI,kBAAC,GAAD,CAAUtO,MAAO7D,OAAOkS,KAF5B,MAMR,wBAAI/T,UAAU,sBACV,oDACA,2BAAI6J,IAER,wBAAI7J,UAAU,sBACV,+CACA,2BAAI8J,IAER,wBAAI9J,UAAU,sBACV,iDACA,2BAAIiK,IAER,wBAAIjK,UAAU,sBACV,sDACA,2BAAIgK,IAER,wBAAIhK,UAAU,sBACV,oDACA,2BAAI+J,IAER,wBAAI/J,UAAU,sBACV,6CACA,2BAAIkK,IAER,wBAAIlK,UAAU,sBACV,wDACA,2BAAIoK,IAER,wBAAIpK,UAAU,sBACV,uDACA,2BAAIqK,IAER,wBAAIrK,UAAU,sBACV,sDACA,2BAAI8C,EAAmBqH,KAE3B,wBAAInK,UAAU,sBACV,iDACA,2BAAIyQ,IAER,wBAAIzQ,UAAU,sBACV,oDACA,2BAAI0Q,IAER,wBAAI1Q,UAAU,sBACV,oDACA,2BAAI8C,EAAmB0H,KAE3B,wBAAIxK,UAAU,sBACV,2CACA,2BAAI8C,EAAmByH,KAE3B,wBAAIvK,UAAU,sBACV,0DACA,2BAAI2Q,OC7JTyD,I,OAXe,SAACnV,GAAD,OAC1B,yBAAKe,UAAU,QACX,yBACII,IAAG,0EAAqEnB,EAAMU,KAAKU,KAAhF,WACHE,IAAKtB,EAAMU,KAAKiB,WAChBZ,UAAU,kBAEd,0BAAMA,UAAU,cAAcf,EAAMU,KAAKgB,SCN3C+N,I,OAAQ,SAkFC2F,GAhFe,WAC1B,IAAMhQ,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAEpE,IAAKgF,IAAUnF,EACX,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAM4F,EAAShQ,OAAOC,OAAOF,GACxB5B,QAAO,SAACG,EAAeC,GAAhB,4BAA6BD,GAA7B,YAAqCC,EAAK2C,KAAI,SAAA/F,GAAE,OAAIA,EAAGgH,QAAQ9G,YAAQ,IAC9E8C,QAAO,SAACG,EAAgCC,GAAjC,mBAAC,eAA+CD,GAAhD,mBAAsDC,GAAQD,EAAIf,OAAOgB,KAAU,GAAK,MAAM,IAEpGjD,EAAQoC,EAAK9C,EAAUU,OAAO,SAAAH,GAAE,OAAI6U,EAAO7U,EAAGC,KAAO,KAErD8Q,EAAapM,EAAcC,GAEjC,OACI,kBAAC,EAAD,CAAQ3D,MAAOgO,GAAOrN,WAAW,gBAC5BzB,EAAM2C,OAAS,GACZ,wBAAIvC,UAAU,gBACTJ,EAAM4F,KAAI,SAAA7F,GACP,IAAMiF,EAAU4L,EAAW9M,QAAO,SAAApE,GAAM,OAAIA,EAAOmH,QAAQ9G,OAASA,EAAKD,MACnEsE,EAASf,EAAW2B,EAAQY,KAAI,SAAAlG,GAAM,OAAIA,EAAOuF,WAAWC,OAAOd,WAEzE,OACI,wBAAIhE,UAAU,qBAAqB0E,IAAK/E,EAAKD,IACzC,yBAAKM,UAAU,wBACX,kBAAC,GAAD,CAAML,KAAMA,IACZ,6BACI,6BACI,2BAAI2U,EAAO3U,EAAKD,KAAO,IAE3B,yBAAKM,UAAU,SACVgI,EAAehE,GADpB,IAC8B,IACzBY,EAAQrC,OAAS,EAAIW,EAAMc,EAASY,EAAQrC,QAAU,EAAG,IAC1D,kBAAC,GAAD,CAAQ2N,OAAO,WAI3B,6BACK5L,OAAO8M,QAAQ/M,GAAOmB,KAAI,YAA0B,IAAD,qBAAvB3F,EAAuB,KAC1C0U,EAD0C,KAChB7Q,QAC5B,SAAApE,GAAM,OAAIA,EAAOmH,QAAQ9G,OAASA,EAAKD,MAG3C,OAAK6U,EAAgBhS,OAKjB,yBACIvC,UAAU,yBACVwU,gBAAA,UACItV,EAAUY,cAAcN,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOmC,OAAOhC,aADxD,aACI,EACM4U,kBAEV/P,IAAK7E,GAEJmC,EACGuS,EAAgB7Q,QAAO,SAAApE,GAAM,OAAIA,EAAOmH,QAAQ9G,OAASA,EAAKD,OAC9D,SAAAD,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAC7BwB,KAAI,SAAAlG,GAAM,OACR,yBAAKoF,IAAKpF,EAAOmH,QAAQ/G,IACpBJ,EAAOmH,QAAQjG,SADpB,KAEKwH,EAAe1I,EAAOuF,WAAWC,OAAOd,QAF7C,SAhBD,gBC3CpC0Q,GAZY,WACvB,OACI,yBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,UAAU9U,UAAU,aACrE,0BACI+U,SAAS,UACTC,EAAE,0hDACFC,UAAU,+BCEpBvG,I,OAAQ,sBA2DCwG,GAzD4B,WACvC,IAAM7Q,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAEtDiK,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAEhE,IAAKgF,IAAUiF,EACX,OAAO,kBAAC,EAAD,CAAQ5I,MAAOgO,KAG1B,IAAM8B,EAAapM,EAAcC,GAC3B4M,EAAQ3H,EAAQ4H,QAAQ3O,OAExB4S,EAAe9D,MAAMC,KAAKD,MAAMJ,GAAOhF,QAAQzG,KAAI,SAAC/F,EAAIyM,GAAL,MAAgB,CACrE5F,IAAKhE,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGJ,KAAK6M,GAAOhI,WAAa,MAC7DkO,QAAS5B,EAAWhR,MAAK,SAAAF,GAAM,OAAKA,EAAOD,KAAK6M,GAAOtI,YAAc,GAAK,SAG9E,OACI,kBAAC,EAAD,CAAQlD,MAAOgO,GAAOrN,WAAW,8BAC5B8T,EAAa5S,OAAS,GACnB,wBAAIvC,UAAU,gBACTmV,EAAa3P,KAAI,SAAC4P,EAAalJ,GAC5B,IAAKkJ,EAAYhD,UAAYgD,EAAY9O,IACrC,OAAO,KAGX,IAAM+O,EAAcD,EAAYhD,QAAQ/S,KAAK6M,GACvCoJ,EAAUF,EAAY9O,IAAIjH,KAAK6M,GAErC,OAAImJ,EAAYnR,YAAcoR,EAAQpR,UAC3B,KAIP,wBAAIlE,UAAU,qBAAqB0E,IAAK2Q,EAAY3P,MAAMhG,IACtD,yBAAKM,UAAU,qCACX,yBAAKA,UAAU,sCACX,mCADJ,IACgB,kBAAC,EAAD,CAAQN,GAAI0V,EAAYhD,QAAQ3L,QAAQ/G,MAExD,yBAAKM,UAAU,sCACX,kCADJ,IACe,kBAAC,EAAD,CAAQN,GAAI0V,EAAY9O,IAAIG,QAAQ/G,OAGvD,yBAAKM,UAAU,yCACX,2BAAIgI,EAA8C,GAA9BqN,EAAYnR,WAAa,KADjD,IAC8D,kBAAC,GAAD,MAAa,IACvE,2BAAI8D,EAA0C,GAA1BsN,EAAQpR,WAAa,IAAzC,KAFJ,KAGI,kBAAC,GAAD,CAAUwB,MAAO2P,EAAY3P,MAAMhG,KAHvC,YCvC1B6V,I,OAAa,SAAC3Q,EAAqB4Q,GAAtB,OACf,wBAAIxV,UAAU,gBACT4E,EAAQY,KAAI,SAAAlG,GACT,IAAMyM,EAAOyJ,EAAWlW,GAExB,OAAKyM,EAKD,wBAAI/L,UAAU,qBAAqB0E,IAAKpF,EAAOmH,QAAQ/G,IAClDqM,GALE,WAmER0J,GAvD2B,SAACxW,GACvC,MAA0B8N,mBAAiB,IAA3C,mBAAOpL,EAAP,KAAcqL,EAAd,KACA,EAAwCD,oBAAkB,GAA1D,mBAAO2I,EAAP,KAAqBC,EAArB,KAEMC,EAAkBjU,EAClB1C,EAAM2F,QAAQlB,QAAO,SAAApE,GAAM,OACvB2I,EAAoB3I,EAAOmH,QAAQjG,UAC9BkH,cACAmO,SAAS5N,EAAoBtG,GAAO+F,kBAE7CzI,EAAM2F,QAENkR,EAAa7W,EAAM2F,QAAQO,MAAM,EAAGlG,EAAMmG,KAEhD,OACI,oCACI,kBAAC,EAAD,CAAQ1E,MAAOzB,EAAMyB,MAAOW,WAAYpB,IAAW,qBAAsBhB,EAAMoC,aAC1EpC,EAAM2F,QAAQrC,OAAS,GACpB,oCACKgT,GAAWO,EAAY7W,EAAMuW,YAC7BvW,EAAM2F,QAAQrC,OAAStD,EAAMmG,KAC1B,kBAAC,EAAD,CAAQlE,MAAM,WAAWF,QAAS,kBAAM2U,GAAgB,QAKvED,GACG,yBAAK1V,UAAU,wBACX,yBAAKA,UAAU,kBAAkBgB,QAAS,kBAAM2U,GAAgB,MAChE,kBAAC,EAAD,CAAQjV,MAAOzB,EAAMyB,MAAOY,QAAS,kBAAMqU,GAAgB,KACvD,yBAAK3V,UAAU,wBACX,2BAAO+N,QAAQ,SAAf,QACA,2BACI/N,UAAU,eACVe,KAAK,OACLiN,YAAY,iBACZrM,MAAOA,EACPsM,SAAU,SAAAR,GAAC,OAAIT,EAASS,EAAES,OAAOvM,QACjCjC,GAAG,WAGX,yBAAKM,UAAU,oBACV4V,EAAgBrT,OAAS,EACtBgT,GAAWK,EAAiB3W,EAAMuW,YAElC,yBAAKxV,UAAU,iBAAf,2BCxCjB+V,GAxB0B,SAAC9W,GACtC,IAAMoF,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAE5D,IAAKgF,EACD,OAAO,kBAAC,EAAD,CAAQ3D,MAAOzB,EAAMyB,QAGhC,IAAMnB,EAAWyC,EAAKoC,EAAcC,IAAQ,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAO7F,EAAMiR,WAE7E,OACI,kBAAC,GAAD,CACIxP,MAAOzB,EAAMyB,MACbkE,QAASrF,EACT6F,IApBM,GAqBNoQ,WAAY,SAAA/O,GAAO,OACf,oCACI,kBAAC,EAAD,CAAQ/G,GAAI+G,EAAQA,QAAQ/G,KAC5B,2BAAIqI,EAAgBtB,EAAQ5B,WAAWC,OAAO7F,EAAMiR,eC+CzD8F,GAhE2B,SAAC/W,GACvC,IAAMoF,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAE5D,IAAKgF,EACD,OAAO,kBAAC,EAAD,CAAQ3D,MAAOzB,EAAMyB,QAGhC,IAAMnB,EAAW6E,EAAcC,GAAOmB,KAAI,SAAAiB,GACtC,IAAMkE,EAAalE,EAAQ5B,WAAWC,OAAO6F,WACvCC,EAASnE,EAAQ5B,WAAWC,OAAO8F,OACnCC,EAAUpE,EAAQ5B,WAAWC,OAAO+F,QAE1C,OAAO,2BACApE,GADP,IAEIoE,UACAoL,kBAAoBpL,EAAUF,EAAc,IAC5CC,SACAsL,iBAAmBtL,EAASD,EAAc,SAI5CwL,EAAW,YAAI5W,GAAUyC,MAAK,SAACI,EAAGC,GACpC,IAAM+T,EAAiB/T,EAAE6T,iBAAmB9T,EAAE8T,iBAC9C,OAA0B,IAAnBE,EAAuB/T,EAAEuI,OAASxI,EAAEwI,OAASwL,KAGlDC,EAAe,YAAI9W,GAAUyC,MAAK,SAACI,EAAGC,GACxC,IAAM+T,EAAiB/T,EAAE4T,kBAAoB7T,EAAE6T,kBAC/C,OAA0B,IAAnBG,EAAuB/T,EAAEwI,QAAUzI,EAAEyI,QAAUuL,KAG1D,OACI,kBAAC,GAAD,CACI1V,MAAOzB,EAAMyB,MACbkE,QAAS3F,EAAMqH,IAAM6P,EAAWE,EAChCjR,IArCM,GAsCNoQ,WAAY,SAAA/O,GAAO,OACf,oCACI,kBAAC,EAAD,CAAQ/G,GAAI+G,EAAQA,QAAQ/G,KAC5B,6BACI,6BACI,2BACKwD,GACKjE,EAAMqH,IACFG,EAAQ5B,WAAWC,OAAO8F,OAC1BnE,EAAQ5B,WAAWC,OAAO+F,SAC5BpE,EAAQ5B,WAAWC,OAAO6F,WAC1B,KANZ,MAWJ,yBAAK3K,UAAU,SACV+H,EACG9I,EAAMqH,IAAMG,EAAQ5B,WAAWC,OAAO8F,OAASnE,EAAQ5B,WAAWC,OAAO+F,gB,QC9DnG6D,GAAQ,yBAwDC4H,GAtDqB,WAAO,IAAD,EAChChN,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAC1DH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAEpE,IAAKiK,IAAYpK,EACb,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAIrP,EAAOiK,EAAQ4H,QAAQ1L,KAAI,SAAAkD,GAC3B,IAAMhD,EAAQxG,EAAU0H,OAAOpH,MAAK,SAAAkG,GAAK,OAAIA,EAAMhG,KAAOgJ,EAAMhD,SAEhE,MAAO,CACH/E,KAAK,MAAD,OAAQ+E,EAAQuB,EAAavB,GAASgD,EAAMhD,OAChD/D,MAAO+G,EAAM6N,iBAIfnR,EAA4D,OAArD,UAAA9C,EAAKN,EAAK,YAAI3C,IAAO,SAAAI,GAAE,OAAIA,EAAGkC,iBAA9B,eAAuCA,QAAS,GAO7D,OALAtC,EAAO,YAAIA,GAAMmG,KAAI,SAAAiB,GAAO,kCACrBA,GADqB,IAExBrB,WAIA,kBAAC,EAAD,CAAQ1E,MAAOgO,IACX,yBAAK1O,UAAU,yBACX,kBAAC,KAAD,CAAqB4U,OAAQ,IAAKD,MAAM,QACpC,kBAAC,KAAD,CAAWtV,KAAMA,EAAMmX,OAAQ,CAAEC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAC1D,kBAAC,KAAD,CAAM5V,KAAK,WAAW6V,QAAQ,MAAM9B,KAAK,UAAU+B,YAAY,MAC/D,kBAAC,KAAD,CAAM9V,KAAK,WAAW6V,QAAQ,QAAQE,OAAO,UAAUhC,KAAK,UAAU+B,YAAY,MAClF,kBAAC,KAAD,CACI1W,UAAU,EACV4W,cAAe,SAAApV,GAAK,OhCpCd,SAACA,GAC/B,OAAOA,EAAQ,OAAR,UAAoBuB,EAAMvB,EAAQ,KAAlC,KAAgDA,EAAQ,IAAR,UAAiBuB,EAAMvB,EAAQ,IAAM,GAArC,eAAgDA,GgCmCvDqV,CAAmBrV,IAC3CsV,OAAQ,CAAC,EAAG7R,GACZ8R,SAAS,mBACTC,UAAW,KAEf,kBAAC,KAAD,CAAOP,QAAQ,OAAOQ,OAAQ,GAAIC,WAAW,MAAMH,SAAS,qBAC5D,kBAAC,KAAD,CAAeJ,OAAO,2BAA2BQ,gBAAgB,QACjE,kBAAC,KAAD,CACIC,mBAAmB,EACnBC,UAAW,SAAC7V,EAAOhB,GAAR,MACE,QAATA,EAAiB,MAACgI,OAAWA,GAAa,CAAC7F,EAAmBjB,OAAOF,IAAS,SAElF8V,UAAU,YC/ChC/I,GAAQ,kBA0CC4H,GAxCqB,WAChC,IAAMhN,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAC1DH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAEpE,IAAKiK,IAAYpK,EACb,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAMrP,EAAOiK,EAAQ4H,QAAQ1L,KAAI,SAAAkD,GAC7B,IAAMhD,EAAQxG,EAAU0H,OAAOpH,MAAK,SAAAkG,GAAK,OAAIA,EAAMhG,KAAOgJ,EAAMhD,SAEhE,MAAO,CACH/E,KAAK,MAAD,OAAQ+E,EAAQuB,EAAavB,GAASgD,EAAMhD,OAChD1B,OAAQ0E,EAAM1E,OACd0C,MAAOgC,EAAMkL,oBAIrB,OACI,kBAAC,EAAD,CAAQlT,MAAOgO,IACX,yBAAK1O,UAAU,SACX,kBAAC,KAAD,CAAqB4U,OAAQ,IAAKD,MAAM,QACpC,kBAAC,KAAD,CAAWtV,KAAMA,EAAMmX,OAAQ,CAAEC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAC1D,kBAAC,KAAD,CAAM5V,KAAK,WAAW6V,QAAQ,SAASE,OAAO,UAAUhC,KAAK,UAAU+B,YAAY,MACnF,kBAAC,KAAD,CAAM9V,KAAK,WAAW6V,QAAQ,QAAQE,OAAO,UAAUhC,KAAK,UAAU+B,YAAY,MAClF,kBAAC,KAAD,CAAOK,SAAS,qBAChB,kBAAC,KAAD,CAAON,QAAQ,OAAOQ,OAAQ,GAAIC,WAAW,MAAMH,SAAS,qBAC5D,kBAAC,KAAD,CAAeJ,OAAO,2BAA2BQ,gBAAgB,QACjE,kBAAC,KAAD,CACIC,mBAAmB,EACnBC,UAAW,SAAC7V,EAAOhB,GAAR,MAAiB,CAACgB,EAAO4F,EAAY5G,KAChD8W,UAAU,YCjChC/I,GAAQ,uBA4CCgJ,GA1Ce,WAC1B,IAAMpO,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAC1DH,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAEpE,IAAKiK,IAAYpK,EACb,OAAO,kBAAC,EAAD,CAAQwB,MAAOgO,KAG1B,IAAMrP,EAAOiK,EAAQ4H,QAAQ1L,KAAI,SAAAkD,GAC7B,IAAMhD,EAAQxG,EAAU0H,OAAOpH,MAAK,SAAAkG,GAAK,OAAIA,EAAMhG,KAAOgJ,EAAMhD,SAEhE,MAAO,CACH/E,KAAK,MAAD,OAAQ+E,EAAQuB,EAAavB,GAASgD,EAAMhD,OAChD/D,MAAO+G,EAAM/G,MAAQ+G,EAAMiP,SAInC,OACI,kBAAC,EAAD,CAAQjX,MAAOgO,IACX,yBAAK1O,UAAU,SACX,kBAAC,KAAD,CAAqB4U,OAAQ,IAAKD,MAAM,QACpC,kBAAC,KAAD,CAAWtV,KAAMA,EAAMmX,OAAQ,CAAEC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,KAC1D,kBAAC,KAAD,CAAM5V,KAAK,WAAW6V,QAAQ,QAAQE,OAAO,UAAUhC,KAAK,UAAU+B,YAAY,MAClF,kBAAC,KAAD,CACIE,cAAe,SAAApV,GAAK,oBAAQA,EAAQ,KACpCsV,OAAQ,CAAC,OAAQ,QACjBC,SAAS,qBAEb,kBAAC,KAAD,CAAON,QAAQ,OAAOQ,OAAQ,GAAIC,WAAW,MAAMH,SAAS,qBAC5D,kBAAC,KAAD,CAAeJ,OAAO,2BAA2BQ,gBAAgB,QACjE,kBAAC,KAAD,CACIC,mBAAmB,EACnBC,UAAW,SAAC7V,EAAOhB,GAAR,MAAiB,CAAC,OAAD,OAAKkB,OAAOF,GAAS,IAAM4F,EAAY5G,KACnE8W,UAAU,YCnChC/I,GAAQ,iBAgECkJ,GA9DsB,WACjC,IAAMvT,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDiK,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAEhE,IAAKgF,IAAUiF,EACX,OAAO,kBAAC,EAAD,CAAQ5I,MAAOgO,KAG1B,IAAM8B,EAAapM,EAAcC,GAC3B4M,EAAQ3H,EAAQ4H,QAAQ3O,OAExB4S,EAAe9D,MAAMC,KAAKD,MAAMJ,GAAOhF,QACxCzG,KAAI,SAAC/F,EAAIyM,GAAL,MAAgB,CACjB5F,IAAKhE,EAAKN,EAAKwO,GAAY,SAAA/Q,GAAE,OAAIA,EAAGJ,KAAK6M,GAAOhI,WAAa,MAC7DkO,QAAS5B,EAAWhR,MAAK,SAAAF,GAAM,OAAKA,EAAOD,KAAK6M,GAAOtI,YAAc,GAAK,SAE7EF,QACG,SAAC+C,EAASyF,GAAV,gBACK,UAAAzF,EAAQH,WAAR,eAAajH,KAAK6M,GAAOhI,YAAa,KAAM,UAAAuC,EAAQ2L,eAAR,eAAiB/S,KAAK6M,GAAOhI,YAAa,MAE9FzB,QACG,SAACG,EAAKC,GAAN,OACIA,EAAKuP,QAAL,2BAEaxP,GAFb,mBAGWC,EAAKuP,QAAQ3L,QAAQ/G,IACjBkD,EAAIC,EAAKuP,QAAQ3L,QAAQ/G,IAAMkD,EAAIC,EAAKuP,QAAQ3L,QAAQ/G,IAAM,GAAK,IAE5EkD,IACV,IAGFiV,EAAYrH,EAAW/N,QAAO,SAACG,EAAKC,GACtC,OAAO,2BACAD,GADP,mBAEKC,EAAK4D,QAAQ/G,GAAKmD,EAAKgC,WAAWC,OAAO2F,gBAE/C,IAEH,OACI,kBAAC,EAAD,CAAQ/J,MAAOgO,IACVpK,OAAO8M,QAAQ+D,GAAc5S,OAAS,GACnC,wBAAIvC,UAAU,gBACTgC,EAAKsC,OAAO8M,QAAQ+D,IAAe,SAAA1V,GAAE,OAAIA,EAAG,MAAI+F,KAAI,mCAAElG,EAAF,KAAUyS,EAAV,YACjD,wBAAI/R,UAAU,qBAAqB0E,IAAKpF,GACpC,kBAAC,EAAD,CAAQI,GAAImC,OAAOvC,KACnB,6BACI,6BACI,2BACKyS,EADL,WACoBhK,EAAgB8P,EAAUhW,OAAOvC,OAGzD,yBAAKU,UAAU,SAASkD,EAAO6O,EAAQ8F,EAAUhW,OAAOvC,IAAY,IAAK,GAAzE,aCpD1BoP,GAAQ,4BAgCCoJ,GA9BsB,WACjC,IAAMzT,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDqJ,EAAQvJ,aAAY,SAACC,GAAD,OAAsBA,EAAMsJ,MAAMrJ,QAE5D,IAAKgF,IAAUqE,GAA0C,IAAjCA,EAAMyL,uBAC1B,OAAO,kBAAC,EAAD,CAAQzT,MAAOgO,KAG1B,IAAMqJ,EAAgB/V,EAAKoC,EAAcC,IAAQ,SAAA5E,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAE5E,OACI,kBAAC,GAAD,CACItD,MAAOgO,GACP9J,QAASmT,EACT3S,IAjBM,GAkBNoQ,WAAY,SAAAlW,GAAM,OACd,oCACI,kBAAC,EAAD,CAAQI,GAAIJ,EAAOmH,QAAQ/G,KAC3B,6BACI,6BACI,2BAAIwD,EAAO5D,EAAOuF,WAAWC,OAAOd,OAAS0E,EAAMyL,uBAA0B,KAA7E,MAEJ,yBAAKnU,UAAU,SAASgI,EAAe1I,EAAOuF,WAAWC,OAAOd,eChBlFgU,GAAiB,SAAC1Y,GAAD,OACnB,IAAOA,EAAOuF,WAAWC,OAAOZ,UAAY5E,EAAOmH,QAAQuF,aAAgB,KAuChEiM,GArCkC,SAAChZ,GAC9C,IAAMoF,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtDiK,EAAUnK,aAAY,SAACC,GAAD,OAAsBA,EAAMkK,QAAQjK,QAEhE,IAAKgF,IAAUiF,EACX,OAAO,kBAAC,EAAD,CAAQ5I,MAAOzB,EAAMyB,QAGhC,IAAMnB,EAAWyC,EACboC,EAAcC,GAAOX,QAAO,SAAApE,GAAM,OAAIA,EAAOuF,WAAWC,OAAOd,OAAS,MACxE,SAAAvE,GAAE,OAAIuY,GAAevY,KACrBR,EAAMqH,IAAM,OAAS,OAGzB,OACI,kBAAC,GAAD,CACI5F,MAAOzB,EAAMyB,MACbkE,QAASrF,EACT6F,IAvBM,GAwBNoQ,WAAY,SAAA/O,GAAO,OACf,oCACI,kBAAC,EAAD,CAAQ/G,GAAI+G,EAAQA,QAAQ/G,KAC5B,6BACI,6BACI,2BAAI+G,EAAQA,QAAQuF,aAAe,GAA/B,UAAuC9I,EAAM8U,GAAevR,IAA5D,OAER,yBAAKzG,UAAU,SACVgI,EAAevB,EAAQA,QAAQuF,aAAevF,EAAQ5B,WAAWC,OAAOZ,WAD7E,MAC4F,IACvF6D,EAAgBuB,EAAQ4H,QAAQ3O,OAASkE,EAAQ5B,WAAWC,OAAO6F,mBCvC1F+D,GAAQ,gBA+BCwJ,GA7BoB,WAC/B,IAAM7T,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtD2L,EAAO7L,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAM2G,QAE3D,IAAK3G,IAAU2G,EACX,OAAO,kBAAC,EAAD,CAAQtK,MAAOgO,KAG1B,IAAMyJ,EAAUnN,EAAKxE,GAAGhC,OAAOwG,EAAKtE,OAAOlB,KAAI,SAAAlG,GAAM,OAAIA,EAAOmH,QAAQ/G,MAClEkF,EAAU5C,EACZoC,EAAcC,GAAOX,QAAO,SAAApE,GAAM,OAAK6Y,EAAQtC,SAASvW,EAAOmH,QAAQ/G,QACvE,SAAAD,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,UAG/B,OACI,kBAAC,GAAD,CACItD,MAAOgO,GACP9J,QAASA,EACTQ,IArBM,GAsBNoQ,WAAY,SAAAlW,GAAM,OACd,oCACI,kBAAC,EAAD,CAAQI,GAAIJ,EAAOmH,QAAQ/G,KAC3B,2BAAIsI,EAAelF,EAAmBxD,EAAOuF,WAAWC,OAAOd,eC8CpEoU,GA5DuB,SAACnZ,GACnC,IAAMoF,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QAE5D,IAAKgF,EACD,OAAO,kBAAC,EAAD,CAAQ3D,MAAOzB,EAAMyB,QAGhC,IAAM2X,EAAYjU,EAAcC,GAC3BrC,MAAK,SAACI,EAAGC,GAAO,IAAD,IACNiW,EAAUlW,EAAEyC,WAAWK,QAAQjG,EAAMiR,QACrCqI,EAAUlW,EAAEwC,WAAWK,QAAQjG,EAAMiR,QAErCsI,GAAgB,UAAApW,EAAEyC,WAAWK,QAAQjG,EAAMiR,eAA3B,eAAoC3N,SAAU,EAC9DkW,GAAgB,UAAApW,EAAEwC,WAAWK,QAAQjG,EAAMiR,eAA3B,eAAoC3N,SAAU,EAEpE,OAAIkW,EAAgBD,IAAkB,IACnB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASvU,SAAU,KAAa,OAAPsU,QAAO,IAAPA,OAAA,EAAAA,EAAStU,SAAU,GAGjDyU,EAAgBD,KAE1B9U,QAAO,SAAAgV,GAAQ,OAAkD,OAA9CA,EAAS7T,WAAWK,QAAQjG,EAAMiR,WAE1D,OACI,kBAAC,GAAD,CACIxP,MAAOzB,EAAMyB,MACbkE,QAASyT,EACTjT,IAnCM,GAoCNoQ,WAAY,SAAAkD,GACR,IAAMjT,EAASiT,EAAS7T,WAAWK,QAAQjG,EAAMiR,QAEjD,OAAKzK,EAKD,oCACI,kBAAC,EAAD,CAAQ/F,GAAIgZ,EAASjS,QAAQ/G,KAC7B,6BACI,yBAAKM,UAAU,YACX,kBAAC,GAAD,CAAU0F,MAAOD,EAAOH,MAAM5F,KADlC,WAC2C,kBAAC,GAAD,CAAUgG,MAAOD,EAAOE,IAAIjG,MAEvE,yBAAKM,UAAU,SACVf,EAAM0Z,kBACH,oCACK5Q,EAAgBtC,EAAOlD,QAD5B,KACuCyF,EAAevC,EAAOzB,QAAU,GADvE,IAC4E,IACvEd,GAAOuC,EAAOzB,QAAU,GAAKyB,EAAOlD,QAFzC,IAEkD,kBAAC,GAAD,CAAQ2N,OAAO,SAGjE,yBAAKlQ,UAAU,SAAS+H,EAAgBtC,EAAOlD,YAjBxD,SCKrBqW,I,OAA8D,CAChE5U,OAAQ,SAAAvE,GAAE,OAAIA,EAAGoF,WAAWC,OAAOd,QACnC8G,UAAW,SAAArL,GAAE,OAAIA,EAAGoF,WAAWC,OAAO6F,YACtCrF,MAAO,SAAA7F,GAAE,OAAIA,EAAGoF,WAAWC,OAAO8F,QAClClE,MAAO,SAAAjH,GAAE,OAAIA,EAAGoF,WAAWC,OAAO+F,SAClCgO,SAAU,SAACpV,GACP,OAAgE,EAAzDA,EAASgD,QAAQjG,SAASkH,cAAcoR,WAAW,MAI5DC,GAAc,CAChB,CAAEpX,MAAO,SAAUT,MAAO,gBAC1B,CAAES,MAAO,YAAaT,MAAO,iBAC7B,CAAES,MAAO,QAAST,MAAO,gBACzB,CAAES,MAAO,QAAST,MAAO,gBACzB,CAAES,MAAO,WAAYT,MAAO,mBAoSjB8X,GA/Ma,WACxB,MAAwBjM,mBAAgCgM,GAAY,IAApE,mBAAO/W,EAAP,KAAaiX,EAAb,KAEMC,EAAY/Z,aAAY,SAACC,GAAD,OAAsBA,EAAM+I,QAAU,KAE9DjJ,EAAYC,aAAY,SAACC,GAAD,OAAsBA,EAAMF,UAAUG,QAE9DgF,EAAQlF,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAMhF,QACtD8H,EAAQhI,aAAY,SAACC,GAAD,OAAsBA,EAAMiF,MAAM8C,SAEtDzH,EAAKP,aAAY,SAACC,GAAD,OAAsBA,EAAMgC,SAAS1B,MAEtDgJ,EAAQvJ,aAAY,SAACC,GAAD,OAAsBA,EAAMsJ,MAAMrJ,QAEpDM,EAASwZ,cAATxZ,KACF2J,EAAU4D,cAEhB,EAAsCH,oBAAUpN,GAAhD,mBAAOyZ,EAAP,KAAoBC,EAApB,KAEMC,EAAeC,iBAAuB,MAEtCtQ,EAAWgE,cA0BjB,OAxBAM,qBAAU,WACF7N,IAAOC,EACP2J,EAAQgE,KAAR,WAAiB5N,EAAjB,MACOC,GAAQ+B,EAAe/B,GAC1BkC,OAAOlC,KAAUD,GACjBuJ,EAAS4D,GAAgBhL,OAAOlC,KAGpC2J,EAAQgE,KAAK,OAElB,CAAC3N,EAAM2J,EAASL,EAAUvJ,IAE7B6N,qBAAU,WACNiM,YAAW,WACHF,GAAgBA,EAAapI,SAC7BoI,EAAapI,QAAQuI,SAASH,EAAapI,QAAQwI,YAAa,KAErE,KACJ,CAACrV,IAEJkJ,qBAAU,WACN8L,GAAgB1Z,KACjB,CAACA,IAGA,yBAAKK,UAAU,OACVoZ,GAAe,kBAAC,GAAD,CAAO9X,QAAS,kBAAM+X,GAAe,MACrD,yBACIrZ,UAAWC,IAAW,eAAgB,CAClC,wBAAyBiZ,KAG7B,kBAAC,EAAD,OAEJ,yBAAKlZ,UAAU,gBACV0I,GACG,4BAAQ1I,UAAU,oBACd,kBAAC,EAAD,KACI,wBAAIA,UAAU,oBACV,kBAAC,GAAD,CAAUkB,MAAOwH,EAAM/H,OACvB,yBAAKX,UAAU,eACVgI,EAAelF,EAAmB4F,EAAMyL,yBAD7C,eAC8E,IACzErR,EAAmB4F,EAAMiR,6BAG1BhR,IAAPjJ,GAAoB,kBAAC,EAAD,CAAQsB,QAAS,kBAAMqY,GAAe,IAAOnY,MAAM,kBAIpF,yBAAKlB,UAAU,gDACX,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,yBAAKA,UAAU,6CACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,yBAAKA,UAAU,sBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,4BACI,0CAEJ,yBAAKA,UAAU,aACX,2BAAOA,UAAU,oBAAjB,WACA,kBAAC,IAAD,CACI4Z,QAASb,GACTpX,MAAOK,EACPiM,SAAU,SAAA4L,GAAM,OAAIZ,EAAQY,IAC5BC,OAAQ,CACJC,UAAW,SAAAC,GAAQ,kCAAUA,GAAV,IAAoBrF,MAAO,UAC9CsF,KAAM,SAAAD,GAAQ,kCAAUA,GAAV,IAAoBE,OAAQ,SAGlD,yBAAKla,UAAU,eACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,yDADnB,WAIA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,yDADnB,WAIA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,wDADnB,MAIA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,0BADnB,kBAMR,yBACIA,UAAWC,IAAW,YAAa,CAC/B,sBAAuBP,KAG3B,yBAAKM,UAAU,uBAAuBma,IAAKb,GACvC,4BAAQtZ,UAAU,qBACd,0BAAMA,UAAU,sBAAhB,WACU,OAATd,QAAS,IAATA,OAAA,EAAAA,EAAW0H,SACRD,EAAczH,EAAU0H,QACnBlD,QAAO,SAAAgC,GAAK,OAAIA,EAAM0U,iBAAiBpW,OAAS,KAChDwB,KAAI,SAAAE,GAAK,OACN,0BAAM1F,UAAU,kBAAkB0E,IAAKgB,EAAMhG,IACxCuH,EAAavB,GACbyB,GAASA,EAAMzB,EAAMhG,KAClB,8BrC3RZgF,EqC2RsCyC,EAAMzB,EAAMhG,IrC3RnByH,EAAMzC,IAAQ,QAA9C,IAACA,KqC+RR,yBAAK1E,UAAU,qBACX,0BAAMA,UAAU,mBAAhB,YACA,0BAAMA,UAAU,mBAAhB,YACA,0BAAMA,UAAU,mBAAhB,WACA,0BAAMA,UAAU,mBAAhB,YAGR,wBAAIA,UAAU,mBACTqE,GAASnF,GApOb,SAACmF,EAAcnF,EAAsBmb,GAArC,OACrB/V,OAAO8M,QAAQ/M,GAAOmB,KAAI,qCAAE0N,EAAF,KAAezP,EAAf,YACtB,yBAAKiB,IAAKwO,GACN,wBAAIlT,UAAU,uBACV,qCAAOd,QAAP,IAAOA,GAAP,UAAOA,EAAWY,cAAcN,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOmC,OAAOqR,aAA5D,aAAO,EAAoEuB,mBAC3E,8BAAOhR,EAASlB,SAEnBP,EACGyB,EAASC,QAAO,SAAA+C,GAAO,OAAIA,EAAQpH,KAAKqE,QAAO,SAAAC,GAAI,OAAwB,OAApBA,EAAKC,cAAqBrB,WACjF,SAAA9C,GAAE,OAAImZ,GAASyB,EAAQ1Y,OAAOlC,MAChC+F,KAAI,SAAAiB,GAAO,OACT,wBAAI/B,IAAK+B,EAAQA,QAAQ/G,GAAIM,UAAU,mBACnC,yBAAKA,UAAU,qBACX,kBAAC,EAAD,CAAQN,GAAI+G,EAAQA,QAAQ/G,GAAIQ,UAAQ,KAE5C,yBAAKF,UAAU,oBACVyG,EAAQpH,KAAKmG,KAAI,SAAAuG,GAAI,OAClB,0BACIrH,IAAKqH,EAAKrG,MAAMhG,GAChBM,UAAWC,IAAW,kBAAmB,CACrC,2BAAgD,IAApB8L,EAAKnI,WACjC,0BAA+C,IAApBmI,EAAKnI,WAChC,2BAA4BmI,EAAKnI,mBAKjD,yBAAK5D,UAAU,qBACX,0BAAMA,UAAU,mBACZ,6BACI,2BAAIyG,EAAQ5B,WAAWC,OAAO6F,YAAgB,IAC9C,0BAAM3K,UAAU,SAAhB,IAEKyG,EAAQpH,KAAKkD,OACRW,EAAOuD,EAAQ5B,WAAWC,OAAO6F,WAAalE,EAAQpH,KAAKkD,OAAU,KACrE,EAJV,QASR,0BAAMvC,UAAU,mBACZ,6BACI,2BAAIyG,EAAQ5B,WAAWC,OAAO8F,QAAY,IAC1C,0BAAM5K,UAAU,SAAhB,IAEKyG,EAAQpH,KAAKkD,OACRW,EAAOuD,EAAQ5B,WAAWC,OAAO8F,OAASnE,EAAQpH,KAAKkD,OAAU,KACjE,EAJV,QASR,0BAAMvC,UAAU,mBACZ,6BACI,2BAAIyG,EAAQ5B,WAAWC,OAAO+F,SAAa,IAC3C,0BAAM7K,UAAU,SAAhB,IAEKyG,EAAQpH,KAAKkD,OACRW,EAAOuD,EAAQ5B,WAAWC,OAAO+F,QAAUpE,EAAQpH,KAAKkD,OAAU,KAClE,EAJV,QASR,0BAAMvC,UAAU,mBACZ,6BACI,2BAAIyG,EAAQ5B,WAAWC,OAAOd,QAAY,IAC1C,0BAAMhE,UAAU,SAAhB,IAEKyG,EAAQ5B,WAAWC,OAAO8F,OAAS,EAC9B1H,EAAMuD,EAAQ5B,WAAWC,OAAOd,OAASyC,EAAQ5B,WAAWC,OAAO8F,QACnE,EAAG,IACT,kBAAC,GAAD,CAAQsF,OAAO,QALnB,gBAiKmBoK,CAAiBjW,EAAOnF,EAAW8C,MAItE,yBAAKhC,UAAU,sBACX,kBAAC,GAAD,CAAiBU,MAAM,iBAAiBwP,OAAO,eAC/C,kBAAC,GAAD,CAAiBxP,MAAM,eAAewP,OAAO,WAC7C,kBAAC,GAAD,CAAiBxP,MAAM,oBAAoBwP,OAAO,YAClD,kBAAC,GAAD,CAAkBxP,MAAM,2BAA2B4F,KAAG,IACtD,kBAAC,GAAD,CAAkB5F,MAAM,mCAE5B,4BACI,wCAEJ,yBAAKV,UAAU,iDACX,kBAAC,GAAD,OAEJ,4BACI,2CAEJ,yBAAKA,UAAU,sBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,4BACI,0CAEJ,yBAAKA,UAAU,sBACX,kBAAC,GAAD,CAAcU,MAAM,4BAA4BwP,OAAO,WAAWyI,mBAAiB,IACnF,kBAAC,GAAD,CAAcjY,MAAM,4BAA4BwP,OAAO,YAAYyI,mBAAiB,IACpF,kBAAC,GAAD,CAAcjY,MAAM,wBAAwBwP,OAAO,QAAQyI,mBAAiB,IAC5E,kBAAC,GAAD,CAAcjY,MAAM,mCAAmCwP,OAAO,WAElE,4BACI,gDAEJ,yBAAKlQ,UAAU,sBACX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAyBU,MAAM,qCAAqC4F,KAAG,IACvE,kBAAC,GAAD,CAAyB5F,MAAM,0CAEnC,4BACI,yCAEJ,yBAAKV,UAAU,qBACX,kBAAC,GAAD,MACA,kBAACua,GAAD,MACA,kBAAC,GAAD,OAEJ,yBAAKva,UAAU,cACX,yJ,SCzTLwa,gBAAgB,CAC3BrS,WACAjJ,aACAmF,SACAjD,YACAkI,WACAZ,W,OCrCJ+R,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUC,MCPAC,aAAe,CACzBC,QAASC,GACTC,WAAW,YAAKC,mBDMZ,kBAAC,IAAD,CAAeC,SAAS,cACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,WACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,GACjB,kBAAC,GAAD,WAMpB1N,SAAS2N,eAAe,SjDyGpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ada70c7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    extended?: boolean\n    reversed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div\n            className={classNames('player', {\n                'player--condensed': !props.extended,\n                'player--reversed': props.reversed,\n            })}\n        >\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>\n                        {props.suffix && !props.extended ? <b>{player?.web_name}</b> : player?.web_name}\n                        {typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}\n                    </span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>\n                        {team?.short_name}\n                    </span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport classNames from 'classnames'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    secondary?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className={classNames('button', { 'button--secondary': props.secondary })}\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Button } from '../Button'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    cssClasses?: string\n    onClose?: () => void\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div\n            className={classNames('widget', props.cssClasses, {\n                'widget--cloaked': !id,\n            })}\n        >\n            {props.title && (\n                <h3 className=\"widget__title\">\n                    {props.title}{' '}\n                    {props.onClose && <Button label=\"X\" onClick={() => props.onClose?.()} aria-label=\"Close\" />}\n                </h3>\n            )}\n            <div className=\"widget__content\">\n                {props.children || <div className=\"widget__empty\">No data available.</div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget\n","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner\n","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}\n","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return [...series].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1))\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series.reduce((acc, curr) => acc + extractor(curr), initialValue)\n}\n","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return reduce(series, el => el)\n}\n\nexport const average = (series: number[]): number => {\n    return series.length ? sumNumbers(series) / series.length : 0\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series, el => el)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}\n","import { ElementStats, StatData, Stats, StatDataGameweek, Streak } from '../types'\nimport { StatAggregateTotals } from '../types/stat-aggregate-totals'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalCaptaincies = (statData: StatData): number => {\n    return statData.data.filter(data => (data.multiplier || 0) > 1).length\n}\n\nexport const getTotalRawPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.rawPoints || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => (el.multiplier === 0 ? el.rawPoints || 0 : 0))\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const getPlayerAggregate = (player: StatData, key: keyof ElementStats): number =>\n    player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof StatAggregateTotals): StatData | null =>\n    head(sort(players, el => el.aggregates.totals[key]))\n\nconst getStreak = (\n    statData: StatData,\n    comparison: (gw: StatDataGameweek) => boolean,\n    ignoreBlanks: boolean = false\n): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [...acc, 1]\n            }\n\n            return [...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1]\n        }\n\n        return [...acc, 0]\n    }, (ignoreBlanks ? [0] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start =\n        statData.data[sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => (streak > 0 ? streak : 1)))].event\n    const end = statData.data[start.id - 2 + max].event\n\n    const points = sumNumbers(statData.data.slice(start.id - 1, start.id - 1 + max).map(event => event.points || 0))\n\n    return {\n        start,\n        end,\n        length: max,\n        points,\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null =>\n    getStreak(statData, gw => (gw.rawPoints || 0) > 2)\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nexport const getTeamOfTheSeason = (stats: Stats): { xi: StatData[]; bench: StatData[] } => {\n    const gk = sort(stats[1], el => el.aggregates.totals.points).slice(0, MAX_GK)\n    const def = sort(stats[2], el => el.aggregates.totals.points).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => el.aggregates.totals.points).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => el.aggregates.totals.points).slice(0, MAX_FWD)\n\n    const top = gk\n        .slice(0, MIN_GK)\n        .concat(def.slice(0, MIN_DEF))\n        .concat(mid.slice(0, MIN_MID))\n        .concat(fwd.slice(0, MIN_FWD))\n    const rest = sort(\n        def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)),\n        el => el.aggregates.totals.points\n    )\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = sort(gk.slice(MIN_GK).concat(rest.slice(4)), el => el.element.element_type, 'asc')\n\n    return {\n        xi,\n        bench,\n    }\n}\n","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}\n","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null\n","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`\n\nexport const pluralise = (value: number | string, singular: string, plural: string) => {\n    const parsedValue = typeof value === 'number' ? value : Number(value.replace(/,/g, ''))\n\n    return `${value} ${parsedValue === 1 ? singular : plural}`\n}\n\nexport const getGWCountLabel = (value: number | string): string => pluralise(value, 'GW', 'GWs')\n\nexport const getPointsLabel = (value: number | string): string => pluralise(value, 'pt', 'pts')\n\nexport const normaliseDiacritics = (value: string): string => value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry =\n    (id: number): ThunkAction<void, History, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchEntryStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`\n        )\n\n        const data = await response.json()\n\n        dispatch(fetchEntrySuccess(data))\n        dispatch(finishLoading())\n    }\n\nexport default entry.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory =\n    (entry: number): ThunkAction<void, History, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchHistoryStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(\n                `https://fantasy.premierleague.com/api/entry/${entry}/history/`\n            )}`\n        )\n\n        const data = await response.json()\n\n        dispatch(fetchHistorySuccess(data))\n        dispatch(finishLoading())\n    }\n\nexport default history.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport {\n    getPastEvents,\n    getPlayerAggregate,\n    getTotalPoints,\n    getTotalBenchPoints,\n    getTotalRawPoints,\n    getTotalSelections,\n    getTotalStarts,\n    getTotalBenched,\n    getTotalCaptaincies,\n    getSelectionStreak,\n    getStartStreak,\n    getBenchStreak,\n    getNonBlankStreak,\n    getTeamOfTheSeason,\n} from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst emptyAggregates = {\n    totals: {\n        redCards: 0,\n        yellowCards: 0,\n        goals: 0,\n        assists: 0,\n        cleanSheets: 0,\n        goalsConceded: 0,\n        ownGoals: 0,\n        saves: 0,\n        minutes: 0,\n        penaltiesMissed: 0,\n        penaltiesSaved: 0,\n        timesInDreamteam: 0,\n        bps: 0,\n        bonus: 0,\n        captaincies: 0,\n        points: 0,\n        rawPoints: 0,\n        benchPoints: 0,\n        selections: 0,\n        starts: 0,\n        benched: 0,\n    },\n    streaks: {\n        selection: null,\n        start: null,\n        bench: null,\n        nonBlank: null,\n    },\n}\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n        chips: undefined,\n        tots: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.data = undefined\n            state.chips = undefined\n            state.tots = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.tots = action.payload.tots\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(\n        `https://jsonp.afeld.me/?url=${encodeURIComponent(\n            `https://fantasy.premierleague.com/api/event/${event}/live/`\n        )}`\n    )\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks; live: LiveEvent }> => {\n    const [pick, live] = await Promise.all([fetchPicks(event, entry), fetchEvent(event)])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData =\n    (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(buildDataStart())\n        dispatch(startLoading())\n\n        const gameweeks = await Promise.all(\n            getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n        )\n\n        const stats: { [key: number]: StatData } = {}\n        const chips: { [key: number]: string } = {}\n\n        gameweeks.forEach(gw => {\n            if (gw.pick.active_chip) {\n                chips[gw.pick.entry_history.event] = gw.pick.active_chip\n            }\n\n            gw.pick.picks.forEach(item => {\n                if (!stats[item.element]) {\n                    stats[item.element] = {\n                        element: bootstrap.elements.find(el => el.id === item.element)!,\n                        data: bootstrap.events\n                            .filter(event => event.id < gw.pick.entry_history.event)\n                            .map(event => ({\n                                event,\n                                multiplier: null,\n                                points: null,\n                                rawPoints: null,\n                                stats: null,\n                                position: null,\n                            })),\n                        aggregates: emptyAggregates,\n                    }\n                }\n\n                const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n                stats[item.element] = {\n                    ...stats[item.element],\n                    data: [\n                        ...stats[item.element].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: item.multiplier,\n                            points: points !== null ? points * item.multiplier : points,\n                            rawPoints: points,\n                            stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                            position: item.position,\n                        },\n                    ],\n                }\n            })\n\n            Object.keys(stats).forEach(player => {\n                const index = Number(player)\n\n                if (stats[index].data.length < gw.pick.entry_history.event) {\n                    stats[index] = {\n                        ...stats[index],\n                        data: [\n                            ...stats[index].data,\n                            {\n                                event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                                multiplier: null,\n                                points: null,\n                                rawPoints: null,\n                                stats: null,\n                                position: null,\n                            },\n                        ],\n                    }\n                }\n            })\n        })\n\n        Object.keys(stats).forEach(id => {\n            const player = stats[Number(id)]\n\n            stats[Number(id)].aggregates = {\n                totals: {\n                    redCards: getPlayerAggregate(player, 'red_cards'),\n                    yellowCards: getPlayerAggregate(player, 'yellow_cards'),\n                    goals: getPlayerAggregate(player, 'goals_scored'),\n                    assists: getPlayerAggregate(player, 'assists'),\n                    cleanSheets: getPlayerAggregate(player, 'clean_sheets'),\n                    goalsConceded: getPlayerAggregate(player, 'goals_conceded'),\n                    ownGoals: getPlayerAggregate(player, 'own_goals'),\n                    saves: getPlayerAggregate(player, 'saves'),\n                    minutes: getPlayerAggregate(player, 'minutes'),\n                    penaltiesMissed: getPlayerAggregate(player, 'penalties_missed'),\n                    penaltiesSaved: getPlayerAggregate(player, 'penalties_saved'),\n                    timesInDreamteam: getPlayerAggregate(player, 'in_dreamteam'),\n                    bps: getPlayerAggregate(player, 'bps'),\n                    bonus: getPlayerAggregate(player, 'bonus'),\n                    captaincies: getTotalCaptaincies(player),\n                    points: getTotalPoints(player),\n                    rawPoints: getTotalRawPoints(player),\n                    benchPoints: getTotalBenchPoints(player),\n                    selections: getTotalSelections(player),\n                    starts: getTotalStarts(player),\n                    benched: getTotalBenched(player),\n                },\n                streaks: {\n                    selection: getSelectionStreak(player),\n                    start: getStartStreak(player),\n                    bench: getBenchStreak(player),\n                    nonBlank: getNonBlankStreak(player),\n                },\n            }\n        })\n\n        const data = Object.values(stats).reduce(\n            (acc: Stats, curr) => ({\n                ...acc,\n                [curr.element.element_type]: [...(acc[curr.element.element_type] || []), curr],\n            }),\n            {}\n        )\n\n        dispatch(\n            buildDataSuccess({\n                data,\n                chips,\n                tots: getTeamOfTheSeason(data),\n            })\n        )\n        dispatch(finishLoading())\n    }\n\nexport default stats.reducer\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { fetchEntry } from './entry'\nimport { fetchHistory } from './history'\nimport { finishLoading, startLoading } from './loading'\nimport { buildData } from './stats'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap =\n    (id: number): ThunkAction<void, any, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(fetchBootstrapStart())\n        dispatch(startLoading())\n\n        const response = await fetch(\n            `https://jsonp.afeld.me/?url=${encodeURIComponent(\n                'https://fantasy.premierleague.com/api/bootstrap-static/'\n            )}`\n        )\n\n        const data = await response.json()\n\n        dispatch(buildData(data, id))\n        dispatch(fetchHistory(id))\n        dispatch(fetchEntry(id))\n\n        dispatch(fetchBootstrapSuccess(data))\n        dispatch(finishLoading())\n    }\n\nexport default bootstrap.reducer\n","import { Action, createSlice, ThunkAction } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\nimport { fetchBootstrap } from './bootstrap'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n        meanStrategy: localStorage.getItem('meanStrategy') || 'average',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            } else {\n                localStorage.removeItem('id')\n            }\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n            localStorage.setItem('meanStrategy', state.meanStrategy)\n        },\n    },\n})\n\nexport const { setId, setMeanStrategy } = settings.actions\n\nexport const fetchDataWithId =\n    (id: number): ThunkAction<void, Bootstrap, unknown, Action<string>> =>\n    async dispatch => {\n        dispatch(setId(id))\n        dispatch(fetchBootstrap(id))\n    }\n\nexport default settings.reducer\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { fetchDataWithId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const close = useCallback(\n        (cancel: boolean) => {\n            if (!cancel) {\n                dispatch(fetchDataWithId(Number(value)))\n                history.push(`/${value}/`)\n            } else if (!id) {\n                return\n            }\n\n            if (props.onClose) {\n                props.onClose()\n            }\n        },\n        [dispatch, props, value, id, history]\n    )\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [close])\n\n    return (\n        <form\n            onSubmit={e => {\n                close(false)\n                e.preventDefault()\n            }}\n        >\n            <div className=\"modal\">\n                <div className=\"modal__backdrop\" onClick={() => close(true)}></div>\n                <div className=\"modal__element\">\n                    <header className=\"modal__header\">Enter Your Team ID</header>\n                    <div className=\"modal__body\">\n                        <div className=\"modal__input-wrapper\">\n                            <label htmlFor=\"query\">Team ID</label>\n                            <input\n                                className=\"modal__input\"\n                                type=\"text\"\n                                placeholder=\"e.g. 4654486\"\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                            />\n                        </div>\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button label=\"Show Stats\" type=\"submit\" disabled={!validateTeamId(value)} />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst TITLE = 'Historical Data'\n\nconst HistoryWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return <Widget title={TITLE} />\n    }\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestRankedSeason.rank)}</b> ({bestRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstRankedSeason.rank)}</b> ({worstRankedSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(bestPointSeason.total_points)}</b> ({bestPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>\n                            <b>{thousandsSeparator(worstPointSeason.total_points)}</b> ({worstPointSeason.season_name})\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <b>\n                        {thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map(season => season.rank)), 0)))}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <b>\n                        {thousandsSeparator(\n                            Number(round(meanValue(pastSeasonsByPoints.map(season => season.total_points)), 0))\n                        )}\n                    </b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <b>{top1k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <b>{top10k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <b>{top100k}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <b>{top1m}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${\n                    position?.singular_name_short === 'GKP' ? '_1' : ''\n                }-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">{props.points}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst TITLE = 'Team of the Season'\n\nconst TotsWidget: React.FC = () => {\n    const tots = useSelector((state: RootState) => state.stats.tots)\n\n    if (!tots) {\n        return <Widget title={TITLE} />\n    }\n\n    return (\n        <Widget title={TITLE} cssClasses=\"tots-widget\">\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 1)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 2)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 3)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row\">\n                    {tots.xi\n                        .filter(el => el.element.element_type === 4)\n                        .map(player => (\n                            <TotsPlayer\n                                key={player.element.id}\n                                id={player.element.id}\n                                points={player.aggregates.totals.points}\n                            />\n                        ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {tots.bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={player.aggregates.totals.points}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget\n","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    ppg: 'Points per Game',\n    ppp: 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>\n            {props.metric}\n        </abbr>\n    )\n}\n\nexport default Metric\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { StatData } from '../../types'\nimport {\n    getAllPlayers,\n    getTopStatAggregate,\n    thousandsSeparator,\n    round,\n    sort,\n    head,\n    getPointsLabel,\n} from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Player Stats'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            ({getPointsLabel(week.rawPoints || 0)}, <SiteLink event={week.event.id} />)\n                        </>\n                    )}\n                    reversed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!history || !stats) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getTopStatAggregate(allPlayers, 'redCards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellowCards')\n    const goals = getTopStatAggregate(allPlayers, 'goals')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'cleanSheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goalsConceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'ownGoals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'timesInDreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(allPlayers, el => el.aggregates.totals.captaincies))\n\n    const topReturner = head(\n        sort(\n            allPlayers.map(player => ({\n                ...player,\n                data: sort([...player.data], el => el.points || 0),\n            })),\n            el => head(el.data)?.points || 0\n        )\n    )\n\n    const topBenchGWReturner = head(\n        sort(\n            allPlayers\n                .map(player => ({\n                    ...player,\n                    data: sort(\n                        player.data.filter(data => data.multiplier === 0),\n                        el => el.rawPoints || 0\n                    ),\n                }))\n                .filter(player => player.data.length),\n            el => head(el.data)?.rawPoints || 0\n        )\n    )\n\n    const topSeasonReturner = head(sort(allPlayers, el => el.aggregates.totals.points))\n    const topBenchReturner = head(sort(allPlayers, el => el.aggregates.totals.benchPoints))\n\n    const weeks = history.current.length\n\n    const idealCaptain = head(\n        sort(\n            Object.entries(\n                Array.from(Array(weeks).keys())\n                    .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n                    .reduce(\n                        (acc, curr) =>\n                            curr\n                                ? {\n                                      ...acc,\n                                      [curr.element.id]: (acc[curr.element.id] ? acc[curr.element.id] : 0) + 1,\n                                  }\n                                : acc,\n                        {} as Record<number, number>\n                    )\n            ),\n            el => el[1]\n        )\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            ({getPointsLabel(week.points || 0)}, <SiteLink event={week.event.id} />)\n                                        </>\n                                    )\n                                }}\n                                reversed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        {topSeasonReturner.aggregates.totals.starts > 0 && (\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topSeasonReturner.aggregates.totals.points)},{' '}\n                                        {round(\n                                            topSeasonReturner.aggregates.totals.points /\n                                                topSeasonReturner.aggregates.totals.starts\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        {topBenchReturner.aggregates.totals.benched > 0 && (\n                            <Player\n                                id={topBenchReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        ({getPointsLabel(topBenchReturner.aggregates.totals.benchPoints)},{' '}\n                                        {round(\n                                            topBenchReturner.aggregates.totals.benchPoints /\n                                                topBenchReturner.aggregates.totals.benched\n                                        )}{' '}\n                                        <Metric metric=\"ppg\" />)\n                                    </>\n                                )}\n                                reversed\n                            />\n                        )}\n                    </li>\n                )}\n                {goals && goals.aggregates.totals.goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.element.id} suffix={`${goals.aggregates.totals.goals}`} reversed />\n                    </li>\n                )}\n                {assists && assists.aggregates.totals.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.element.id} suffix={`${assists.aggregates.totals.assists}`} reversed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.aggregates.totals.ownGoals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.element.id} suffix={`${ownGoals.aggregates.totals.ownGoals}`} reversed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.aggregates.totals.goalsConceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player\n                            id={goalsConceded.element.id}\n                            suffix={`${goalsConceded.aggregates.totals.goalsConceded}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.aggregates.totals.cleanSheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player\n                            id={cleanSheets.element.id}\n                            suffix={`${cleanSheets.aggregates.totals.cleanSheets}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {saves && saves.aggregates.totals.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.element.id} suffix={`${saves.aggregates.totals.saves}`} reversed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.aggregates.totals.penaltiesMissed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player\n                            id={penaltiesMissed.element.id}\n                            suffix={`${penaltiesMissed.aggregates.totals.penaltiesMissed}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.aggregates.totals.penaltiesSaved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player\n                            id={penaltiesSaved.element.id}\n                            suffix={`${penaltiesSaved.aggregates.totals.penaltiesSaved}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {minutes && minutes.aggregates.totals.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player\n                            id={minutes.element.id}\n                            suffix={`${thousandsSeparator(minutes.aggregates.totals.minutes as number)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {reds && reds.aggregates.totals.redCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.element.id} suffix={`${reds.aggregates.totals.redCards}`} reversed />\n                    </li>\n                )}\n                {yellows && yellows.aggregates.totals.yellowCards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.element.id} suffix={`${yellows.aggregates.totals.yellowCards}`} reversed />\n                    </li>\n                )}\n                {bonus && bonus.aggregates.totals.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.element.id} suffix={`${bonus.aggregates.totals.bonus}`} reversed />\n                    </li>\n                )}\n                {bps && bps.aggregates.totals.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player\n                            id={bps.element.id}\n                            suffix={`${thousandsSeparator(bps.aggregates.totals.bps)}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.aggregates.totals.timesInDreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player\n                            id={inDreamteam.element.id}\n                            suffix={`${inDreamteam.aggregates.totals.timesInDreamteam}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.aggregates.totals.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player\n                            id={mostCaptaincies.element.id}\n                            suffix={`${mostCaptaincies.aggregates.totals.captaincies}`}\n                            reversed\n                        />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} reversed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst TITLE = 'Formations'\n\nconst formatFormation = (formation: string) =>\n    sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object.values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map(\n                (el, index) => selections.map(player => (player[index] || 0) > 0).filter(val => !!val).length\n            )\n        })\n        .slice(1)\n\n    const data = Array.from(Array(weeks).keys())\n        .map((el, index) => formations.map(entries => entries[index]).join('-'))\n        .reduce(\n            (acc, formation, index) => ({\n                ...acc,\n                [formation]: {\n                    count: (acc[formation] ? acc[formation].count : 0) + 1,\n                    points: (acc[formation] ? acc[formation].points : 0) + history.current[index].points,\n                },\n            }),\n            {} as Record<string, FormationInformation>\n        )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(data).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(data), el => el[1].count).map(([formation, information]) => {\n                        return (\n                            <li className=\"widget__list__item\" key={formation}>\n                                <span>{formatFormation(formation)}</span>\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(information.count)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(information.points))},{' '}\n                                        {round(information.points / information.count)} <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default FormationWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, sort, getPointsLabel, getGWCountLabel } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\n\nconst TITLE = 'Captains'\n\nconst CaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={TITLE} />\n    }\n\n    const captains = sort(\n        Object.values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {captains.length > 0 && (\n                <ul className=\"widget__list\">\n                    {captains.map(captain => {\n                        const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                        return (\n                            <li className=\"widget__list__item\" key={captain.player.element.id}>\n                                <Player id={captain.player.element.id} />\n                                <div>\n                                    <div>\n                                        <b>{getGWCountLabel(captain.data.length)}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sum))}, {round(sum / captain.data.length)}{' '}\n                                        <Metric metric=\"ppg\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\n\nconst TITLE = 'Gameweeks'\n\nconst GameweekWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <b>{getPointsLabel(round(meanValue(differences)))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <b>{differences.filter(diff => diff >= 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <b>{differences.filter(diff => diff < 0).length}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <b>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</b>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(bestGW.points)}</b> (\n                            <SiteLink event={bestGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            <b>{getPointsLabel(worstGW.points)}</b> (\n                            <SiteLink event={worstGW.event} />)\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(bestGWRank.rank)}</b> (\n                            <SiteLink event={bestGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            <b>{thousandsSeparator(worstGWRank.rank)}</b> (\n                            <SiteLink event={worstGWRank.event} />)\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, reduce, getPointsLabel, pluralise } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric'\n\nconst TITLE = 'Positions'\n\nconst PositionsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const positions: Record<string, number> = Object.entries(stats).reduce(\n        (acc, [elementType, elements]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }),\n        {}\n    )\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(positions).length > 0 && (\n                <ul className=\"widget__list\">\n                    <li className=\"widget__list__item\">\n                        <span>Total</span>\n                        <b>\n                            {pluralise(\n                                reduce(Object.values(positions), el => el),\n                                'Player',\n                                'Players'\n                            )}\n                        </b>\n                    </li>\n                    {Object.entries(positions).map(([elementType, elements]) => {\n                        const totalPoints = stats[Number(elementType)].map(player => player.aggregates.totals.points)\n\n                        return (\n                            <li className=\"widget__list__item\" key={elementType}>\n                                <span>\n                                    {bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}\n                                </span>\n                                <div>\n                                    <div>\n                                        <b>{pluralise(elements, 'Player', 'Players')}</b>\n                                    </div>\n                                    <div className=\"muted\">\n                                        {getPointsLabel(thousandsSeparator(sumNumbers(totalPoints)))},{' '}\n                                        {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default PositionsWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, head, thousandsSeparator, sumNumbers, reduce, round, getPointsLabel } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { StatData } from '../../types'\nimport { StatAggregateTotals } from '../../types'\n\nconst TITLE = 'Season'\n\nconst getAggregateValues = (players: StatData[], key: keyof StatAggregateTotals): number =>\n    sumNumbers(players.map(player => player.aggregates.totals[key]))\n\nconst SeasonWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !history || !chips || !entry) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getAggregateValues(allPlayers, 'redCards')\n    const yellows = getAggregateValues(allPlayers, 'yellowCards')\n    const goals = getAggregateValues(allPlayers, 'goals')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'cleanSheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goalsConceded')\n    const ownGoals = getAggregateValues(allPlayers, 'ownGoals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penaltiesMissed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penaltiesSaved')\n    const inDreamteam = getAggregateValues(allPlayers, 'timesInDreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => player.data.findIndex(data => data.multiplier === 3) !== -1)\n        ?.data.find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(chips).find(([gw, chip]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(\n              allPlayers\n                  .filter(player => (player.data[Number(bbWeek) - 1].position || 0) > 11)\n                  .map(player => player.data[Number(bbWeek) - 1].points || 0)\n          )\n        : null\n\n    const doubleDigitHauls = reduce(\n        allPlayers.map(player => player.data.filter(data => (data.rawPoints || 0) > 9).length),\n        el => el\n    )\n    const totalPlays = reduce(\n        allPlayers.map(player => player.data.filter(data => data.multiplier !== null).length),\n        el => el\n    )\n\n    return (\n        <Widget title={TITLE}>\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>\n                        <b>{totalHits}</b> ({getPointsLabel(totalHits * -4)},{' '}\n                        {entry.summary_overall_points > 0\n                            ? round(((totalHits * 4) / entry.summary_overall_points) * 100)\n                            : 0}\n                        %)\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points</span>\n                    <b>{getPointsLabel(thousandsSeparator(entry.summary_overall_points))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <b>{getPointsLabel(thousandsSeparator(totalBenched))}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>\n                        <b>{doubleDigitHauls}</b>\n                        {totalPlays > 0 && ` (${round(doubleDigitHauls / totalPlays)}%)`}\n                    </span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel((tc.points || 0) / 3)}</b> (\n                            <SiteLink event={tc.event.id} />)\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            <b>{getPointsLabel(bbPoints)}</b> (\n                            <SiteLink event={Number(bbWeek)} />)\n                        </span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <b>{goals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <b>{assists}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <b>{ownGoals}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <b>{goalsConceded}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <b>{cleanSheets}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <b>{saves}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <b>{penaltiesMissed}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <b>{penaltiesSaved}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <b>{thousandsSeparator(minutes)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <b>{reds}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <b>{yellows}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <b>{thousandsSeparator(bonus)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <b>{thousandsSeparator(bps)}</b>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <b>{inDreamteam}</b>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget\n","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport './TeamsWidget.scss'\n\nconst TITLE = 'Teams'\n\nconst TeamsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [...acc, ...curr.map(el => el.element.team)], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title={TITLE} cssClasses=\"teams-widget\">\n            {teams.length > 0 && (\n                <ul className=\"widget__list\">\n                    {teams.map(team => {\n                        const players = allPlayers.filter(player => player.element.team === team.id)\n                        const points = sumNumbers(players.map(player => player.aggregates.totals.points))\n\n                        return (\n                            <li className=\"teams-widget__item\" key={team.id}>\n                                <div className=\"teams-widget__header\">\n                                    <Team team={team} />\n                                    <div>\n                                        <div>\n                                            <b>{counts[team.id] || 0}</b>\n                                        </div>\n                                        <div className=\"muted\">\n                                            {getPointsLabel(points)},{' '}\n                                            {players.length > 0 ? round(points / players.length) : 0}{' '}\n                                            <Metric metric=\"ppp\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>\n                                    {Object.entries(stats).map(([position, players]) => {\n                                        const positionPlayers = players.filter(\n                                            player => player.element.team === team.id\n                                        )\n\n                                        if (!positionPlayers.length) {\n                                            return null\n                                        }\n\n                                        return (\n                                            <div\n                                                className=\"teams-widget__position\"\n                                                data-position={\n                                                    bootstrap.element_types.find(el => el.id === Number(position))\n                                                        ?.plural_name_short\n                                                }\n                                                key={position}\n                                            >\n                                                {sort(\n                                                    positionPlayers.filter(player => player.element.team === team.id),\n                                                    el => el.aggregates.totals.points\n                                                ).map(player => (\n                                                    <div key={player.element.id}>\n                                                        {player.element.web_name} (\n                                                        {getPointsLabel(player.aggregates.totals.points)})\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default TeamsWidget\n","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"#94968C\" className=\"swap-icon\">\n            <path\n                fillRule=\"evenodd\"\n                d=\"M53.6485838,32.0017628 L50.0028805,32.002243 L44.1795487,32.002243 L42.8449352,32.002243 C42.2448392,32.002243 41.6106577,32.2648846 41.1853096,32.6869358 C40.7782045,33.0941023 40.4723956,33.7595891 40.5007201,34.3468117 C40.5285646,34.9508394 40.7258761,35.5807952 41.1853096,36.0066875 C41.6447432,36.4287387 42.2069131,36.6913803 42.8449352,36.6913803 L46.4978397,36.6913803 L47.9851176,36.6913803 L45.4666347,39.209763 C43.6044167,41.0722619 41.7383581,42.9386019 39.8780605,44.7991802 C38.2707633,46.4067198 36.6673068,48.0104182 35.0585694,49.6193983 C34.2803649,50.3977202 33.4867979,51.1722009 32.7181949,51.9601258 L32.6845895,51.9937362 C32.2568411,52.4215492 32,53.0481439 32,53.6536121 C32,54.2317118 32.2530005,54.9140038 32.6845895,55.313488 C33.1305809,55.7206545 33.7157945,56.0265096 34.3442151,55.9981808 C34.9721555,55.9703321 35.5592895,55.7600268 36.0038406,55.313488 L37.931349,53.3856888 L42.5261642,48.7906607 L48.1147384,43.2007634 C49.1805089,42.1348321 50.2462794,41.0689008 51.3115699,40.0034497 L51.3115699,43.8239971 L51.3115699,45.1597723 C51.3115699,45.7599588 51.5741719,46.3937558 51.9961594,46.8196481 C52.4032645,47.2263345 53.068651,47.5321896 53.6557849,47.5038608 C54.2597216,47.4760121 54.8895823,47.279151 55.3154105,46.8196481 C55.7316371,46.3582247 56,45.7954898 56,45.1597723 L56,41.5058366 L56,35.6821067 L56,34.3468117 C56,34.0073461 55.9183869,33.6846859 55.781085,33.3893941 C55.6649064,33.1209907 55.5084013,32.8717932 55.3082093,32.6864556 C54.8617379,32.2792891 54.2770043,31.9739142 53.6485838,32.0017628 Z\"\n                transform=\"rotate(45 71.042 -6.799)\"\n            ></path>\n        </svg>\n    )\n}\n\nexport default SwapIcon\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport './CaptainOpportunityWidget.scss'\n\nconst TITLE = 'Missed Captaincies'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys()).map((el, index) => ({\n        top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n        captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n    }))\n\n    return (\n        <Widget title={TITLE} cssClasses=\"captain-opportunity-widget\">\n            {improvements.length > 0 && (\n                <ul className=\"widget__list\">\n                    {improvements.map((improvement, index) => {\n                        if (!improvement.captain || !improvement.top) {\n                            return null\n                        }\n\n                        const captainData = improvement.captain.data[index]\n                        const topData = improvement.top.data[index]\n\n                        if (captainData.rawPoints === topData.rawPoints) {\n                            return null\n                        }\n\n                        return (\n                            <li className=\"widget__list__item\" key={captainData.event.id}>\n                                <div className=\"captain-opportunity-widget__group\">\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>OUT:</b> <Player id={improvement.captain.element.id} />\n                                    </div>\n                                    <div className=\"captain-opportunity-widget__player\">\n                                        <b>IN:</b> <Player id={improvement.top.element.id} />\n                                    </div>\n                                </div>\n                                <div className=\"captain-opportunity-widget__swap-info\">\n                                    <b>{getPointsLabel((captainData.rawPoints || 0) * 2)}</b> <SwapIcon />{' '}\n                                    <b>{getPointsLabel((topData.rawPoints || 0) * 2)} </b> (\n                                    <SiteLink event={captainData.event.id} />)\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget\n","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport { StatData } from '../../types'\nimport { normaliseDiacritics } from '../../utilities'\nimport { Button } from '../Button'\nimport { Widget } from '../Widget'\nimport './BasePlayerWidget.scss'\n\ntype Props = {\n    title: string\n    max: number\n    players: StatData[]\n    renderItem: (player: StatData) => JSX.Element | null\n    cssClasses?: string\n}\n\nconst renderList = (players: StatData[], renderItem: (player: StatData) => JSX.Element | null): JSX.Element => (\n    <ul className=\"widget__list\">\n        {players.map(player => {\n            const item = renderItem(player)\n\n            if (!item) {\n                return null\n            }\n\n            return (\n                <li className=\"widget__list__item\" key={player.element.id}>\n                    {item}\n                </li>\n            )\n        })}\n    </ul>\n)\n\nconst BasePlayerWidget: React.FC<Props> = (props: Props) => {\n    const [value, setValue] = useState<string>('')\n    const [showExtended, setShowExtended] = useState<boolean>(false)\n\n    const filteredPlayers = value\n        ? props.players.filter(player =>\n              normaliseDiacritics(player.element.web_name)\n                  .toLowerCase()\n                  .includes(normaliseDiacritics(value).toLowerCase())\n          )\n        : props.players\n\n    const topPlayers = props.players.slice(0, props.max)\n\n    return (\n        <>\n            <Widget title={props.title} cssClasses={classNames('base-player-widget', props.cssClasses)}>\n                {props.players.length > 0 && (\n                    <>\n                        {renderList(topPlayers, props.renderItem)}\n                        {props.players.length > props.max && (\n                            <Button label=\"Show all\" onClick={() => setShowExtended(true)} />\n                        )}\n                    </>\n                )}\n            </Widget>\n            {showExtended && (\n                <div className=\"modal modal--players\">\n                    <div className=\"modal__backdrop\" onClick={() => setShowExtended(false)}></div>\n                    <Widget title={props.title} onClose={() => setShowExtended(false)}>\n                        <div className=\"modal__input-wrapper\">\n                            <label htmlFor=\"query\">Name</label>\n                            <input\n                                className=\"modal__input\"\n                                type=\"text\"\n                                placeholder=\"Filter by name\"\n                                value={value}\n                                onChange={e => setValue(e.target.value)}\n                                id=\"query\"\n                            />\n                        </div>\n                        <div className=\"widget__scroller\">\n                            {filteredPlayers.length > 0 ? (\n                                renderList(filteredPlayers, props.renderItem)\n                            ) : (\n                                <div className=\"widget__empty\">No data available.</div>\n                            )}\n                        </div>\n                    </Widget>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default BasePlayerWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: 'selections' | 'starts' | 'benched'\n}\n\nconst SelectionWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = sort(getAllPlayers(stats), el => el.aggregates.totals[props.metric])\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <b>{getGWCountLabel(element.aggregates.totals[props.metric])}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default SelectionWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getGWCountLabel, round } from '../../utilities'\nimport { Player } from '../Player'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = getAllPlayers(stats).map(element => {\n        const selections = element.aggregates.totals.selections\n        const starts = element.aggregates.totals.starts\n        const benched = element.aggregates.totals.benched\n\n        return {\n            ...element,\n            benched,\n            benchedPercentage: (benched / selections) * 100,\n            starts,\n            startsPercentage: (starts / selections) * 100,\n        }\n    })\n\n    const starters = [...elements].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const benchwarmers = [...elements].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={props.top ? starters : benchwarmers}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>\n                                {round(\n                                    ((props.top\n                                        ? element.aggregates.totals.starts\n                                        : element.aggregates.totals.benched) /\n                                        element.aggregates.totals.selections) *\n                                        100\n                                )}\n                                %\n                            </b>\n                        </div>\n                        <div className=\"muted\">\n                            {getGWCountLabel(\n                                props.top ? element.aggregates.totals.starts : element.aggregates.totals.benched\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default DifferenceWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\n\nconst TITLE = 'Overall Rank Evolution'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([...data], el => el.value))?.value || 0) * 1.05\n\n    data = [...data].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#ffffff\" fillOpacity=\"1\" />\n                        <YAxis\n                            reversed={true}\n                            tickFormatter={value => thousandsShorthand(value)}\n                            domain={[1, max]}\n                            interval=\"preserveStartEnd\"\n                            tickCount={10}\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) =>\n                                name === 'max' ? [undefined, undefined] : [thousandsSeparator(Number(value)), 'Rank']\n                            }\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst TITLE = 'Gameweek Points'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                        <YAxis interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [value, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst TITLE = 'Team Value Evolution'\n\nconst ValueWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return <Widget title={TITLE} />\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title={TITLE}>\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <YAxis\n                            tickFormatter={value => `£${value / 10}`}\n                            domain={['auto', 'auto']}\n                            interval=\"preserveStartEnd\"\n                        />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip\n                            isAnimationActive={false}\n                            formatter={(value, name) => [`£${Number(value) / 10}`, initialCaps(name)]}\n                            separator=\": \"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getGWCountLabel, head, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst TITLE = 'Wrong Captains'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={TITLE} />\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .filter(\n            (element, index) =>\n                (element.top?.data[index].rawPoints || 0) > (element.captain?.data[index].rawPoints || 0)\n        )\n        .reduce(\n            (acc, curr) =>\n                curr.captain\n                    ? {\n                          ...acc,\n                          [curr.captain.element.id]:\n                              (acc[curr.captain.element.id] ? acc[curr.captain.element.id] : 0) + 1,\n                      }\n                    : acc,\n            {} as Record<number, number>\n        )\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.aggregates.totals.captaincies,\n        }\n    }, {} as Record<number, number>)\n\n    return (\n        <Widget title={TITLE}>\n            {Object.entries(improvements).length > 0 && (\n                <ul className=\"widget__list\">\n                    {sort(Object.entries(improvements), el => el[1]).map(([player, count]) => (\n                        <li className=\"widget__list__item\" key={player}>\n                            <Player id={Number(player)} />\n                            <div>\n                                <div>\n                                    <b>\n                                        {count} out of {getGWCountLabel(timesUsed[Number(player)])}\n                                    </b>\n                                </div>\n                                <div className=\"muted\">{round((count / timesUsed[Number(player)]) * 100, 1)}%</div>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\nconst TITLE = 'Total Points Contribution'\n\nconst ContributionWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !entry || entry.summary_overall_points === 0) {\n        return <Widget title={TITLE} />\n    }\n\n    const contributions = sort(getAllPlayers(stats), el => el.aggregates.totals.points)\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={contributions}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <div>\n                        <div>\n                            <b>{round((player.aggregates.totals.points / entry.summary_overall_points) * 100)}%</b>\n                        </div>\n                        <div className=\"muted\">{getPointsLabel(player.aggregates.totals.points)}</div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default ContributionWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getPointsLabel, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { getGWCountLabel } from '../../utilities/strings'\nimport { StatData } from '../../types'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst getPointsShare = (player: StatData): number =>\n    100 - (player.aggregates.totals.rawPoints / player.element.total_points) * 100\n\nconst MissedPointsShareWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return <Widget title={props.title} />\n    }\n\n    const elements = sort(\n        getAllPlayers(stats).filter(player => player.aggregates.totals.points > 0),\n        el => getPointsShare(el),\n        props.top ? 'desc' : 'asc'\n    )\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={elements}\n            max={MAX_ITEMS}\n            renderItem={element => (\n                <>\n                    <Player id={element.element.id} />\n                    <div>\n                        <div>\n                            <b>{element.element.total_points > 0 && `${round(getPointsShare(element))}%`}</b>\n                        </div>\n                        <div className=\"muted\">\n                            {getPointsLabel(element.element.total_points - element.aggregates.totals.rawPoints)} in{' '}\n                            {getGWCountLabel(history.current.length - element.aggregates.totals.selections)}\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default MissedPointsShareWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getPointsLabel, sort, thousandsSeparator } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 15\nconst TITLE = 'Other Players'\n\nconst NearMissesWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const tots = useSelector((state: RootState) => state.stats.tots)\n\n    if (!stats || !tots) {\n        return <Widget title={TITLE} />\n    }\n\n    const totsIds = tots.xi.concat(tots.bench).map(player => player.element.id)\n    const players = sort(\n        getAllPlayers(stats).filter(player => !totsIds.includes(player.element.id)),\n        el => el.aggregates.totals.points\n    )\n\n    return (\n        <BasePlayerWidget\n            title={TITLE}\n            players={players}\n            max={MAX_ITEMS}\n            renderItem={player => (\n                <>\n                    <Player id={player.element.id} />\n                    <b>{getPointsLabel(thousandsSeparator(player.aggregates.totals.points))}</b>\n                </>\n            )}\n        />\n    )\n}\n\nexport default NearMissesWidget\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { StatAggregateStreaks } from '../../types'\nimport { getAllPlayers, getGWCountLabel, getPointsLabel, round } from '../../utilities'\nimport { BasePlayerWidget } from '../BasePlayerWidget'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\ntype Props = {\n    title: string\n    metric: keyof StatAggregateStreaks\n    showDetailedStats?: boolean\n}\n\nconst StreakWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return <Widget title={props.title} />\n    }\n\n    const streakers = getAllPlayers(stats)\n        .sort((a, b) => {\n            const aStreak = a.aggregates.streaks[props.metric]\n            const bStreak = b.aggregates.streaks[props.metric]\n\n            const aStreakLength = a.aggregates.streaks[props.metric]?.length || 0\n            const bStreakLength = b.aggregates.streaks[props.metric]?.length || 0\n\n            if (bStreakLength - aStreakLength === 0) {\n                return (bStreak?.points || 0) - (aStreak?.points || 0)\n            }\n\n            return bStreakLength - aStreakLength\n        })\n        .filter(streaker => streaker.aggregates.streaks[props.metric] !== null)\n\n    return (\n        <BasePlayerWidget\n            title={props.title}\n            players={streakers}\n            max={MAX_ITEMS}\n            renderItem={streaker => {\n                const streak = streaker.aggregates.streaks[props.metric]\n\n                if (!streak) {\n                    return null\n                }\n\n                return (\n                    <>\n                        <Player id={streaker.element.id} />\n                        <div>\n                            <div className=\"duration\">\n                                <SiteLink event={streak.start.id} /> – <SiteLink event={streak.end.id} />\n                            </div>\n                            <div className=\"muted\">\n                                {props.showDetailedStats ? (\n                                    <>\n                                        {getGWCountLabel(streak.length)}, {getPointsLabel(streak.points || 0)},{' '}\n                                        {round((streak.points || 0) / streak.length)} <Metric metric=\"ppg\" />\n                                    </>\n                                ) : (\n                                    <div className=\"muted\">{getGWCountLabel(streak.length)}</div>\n                                )}\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n        />\n    )\n}\n\nexport default StreakWidget\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport {\n    getPastEvents,\n    getChipAbbreviation,\n    thousandsSeparator,\n    getShortName,\n    validateTeamId,\n    round,\n    sort,\n    getPointsLabel,\n} from '../../utilities'\nimport { Modal } from '../Modal'\nimport { fetchDataWithId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { Metric } from '../Metric'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport { MissedPointsShareWidget } from '../MissedPointsShareWidget'\nimport { NearMissesWidget } from '../NearMissesWidget'\nimport { StreakWidget } from '../StreakWidget'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype DashboardParams = {\n    team?: string\n}\n\nconst sortings: { [key: string]: (statData: StatData) => number } = {\n    points: el => el.aggregates.totals.points,\n    selection: el => el.aggregates.totals.selections,\n    start: el => el.aggregates.totals.starts,\n    bench: el => el.aggregates.totals.benched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    },\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderPlayerList = (stats: Stats, bootstrap: Bootstrap, sorting: OptionType): JSX.Element[] =>\n    Object.entries(stats).map(([elementType, statData]) => (\n        <div key={elementType}>\n            <li className=\"dashboard__category\">\n                <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                <span>{statData.length}</span>\n            </li>\n            {sort(\n                statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length),\n                el => sortings[sorting.value](el)\n            ).map(element => (\n                <li key={element.element.id} className=\"dashboard__item\">\n                    <div className=\"dashboard__player\">\n                        <Player id={element.element.id} extended />\n                    </div>\n                    <div className=\"dashboard__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('dashboard__stat', {\n                                    'dashboard__stat--benched': item.multiplier === 0,\n                                    'dashboard__stat--triple': item.multiplier === 3,\n                                    'dashboard__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"dashboard__totals\">\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.selections}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.selections / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.starts}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.starts / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.benched}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.data.length\n                                        ? round((element.aggregates.totals.benched / element.data.length) * 100)\n                                        : 0}\n                                    %)\n                                </span>\n                            </div>\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <div>\n                                <b>{element.aggregates.totals.points}</b>{' '}\n                                <span className=\"muted\">\n                                    (\n                                    {element.aggregates.totals.starts > 0\n                                        ? round(element.aggregates.totals.points / element.aggregates.totals.starts)\n                                        : 0}{' '}\n                                    <Metric metric=\"ppg\" />)\n                                </span>\n                            </div>\n                        </span>\n                    </div>\n                </li>\n            ))}\n        </div>\n    ))\n\nconst Dashboard: React.FC = () => {\n    const [sort, setSort] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const { team } = useParams<DashboardParams>()\n    const history = useHistory()\n\n    const [isModalOpen, setIsModalOpen] = useState(!team)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (id && !team) {\n            history.push(`/${id}/`)\n        } else if (team && validateTeamId(team)) {\n            if (Number(team) !== id) {\n                dispatch(fetchDataWithId(Number(team)))\n            }\n        } else {\n            history.push('/')\n        }\n    }, [team, history, dispatch, id])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [stats])\n\n    useEffect(() => {\n        setIsModalOpen(!team)\n    }, [team])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && <Modal onClose={() => setIsModalOpen(false)} />}\n            <div\n                className={classNames('app__loading', {\n                    'app__loading--hidden': !isLoading,\n                })}\n            >\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <SiteLink label={entry.name} />\n                                <div className=\"small muted\">\n                                    {getPointsLabel(thousandsSeparator(entry.summary_overall_points))} — Rank{' '}\n                                    {thousandsSeparator(entry.summary_overall_rank)}\n                                </div>\n                            </h1>\n                            {id !== undefined && <Button onClick={() => setIsModalOpen(true)} label=\"Change Team\" />}\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <NearMissesWidget />\n                </div>\n                <div className=\"dashboard__widgets dashboard__widgets-duo\">\n                    <PlayerStatsWidget />\n                    <SeasonWidget />\n                    <HistoryWidget />\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <GameweekWidget />\n                    <PositionsWidget />\n                    <FormationWidget />\n                </div>\n                <h2>\n                    <span>Players</span>\n                </h2>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">Sort by</label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: provided => ({ ...provided, width: '100%' }),\n                            menu: provided => ({ ...provided, zIndex: 20 }),\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div\n                    className={classNames('dashboard', {\n                        'dashboard--cloaked': !id,\n                    })}\n                >\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">Player</span>\n                            {bootstrap?.events &&\n                                getPastEvents(bootstrap.events)\n                                    .filter(event => event.top_element_info.points > 0)\n                                    .map(event => (\n                                        <span className=\"dashboard__stat\" key={event.id}>\n                                            {getShortName(event)}\n                                            {chips && chips[event.id] && (\n                                                <div>{getChipAbbreviation(chips[event.id])}</div>\n                                            )}\n                                        </span>\n                                    ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">Selected</span>\n                                <span className=\"dashboard__stat\">Starting</span>\n                                <span className=\"dashboard__stat\">Benched</span>\n                                <span className=\"dashboard__stat\">Points</span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && bootstrap && renderPlayerList(stats, bootstrap, sort as OptionType)}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <SelectionWidget title=\"Top Selections\" metric=\"selections\" />\n                    <SelectionWidget title=\"Top Starters\" metric=\"starts\" />\n                    <SelectionWidget title=\"Top Bench Players\" metric=\"benched\" />\n                    <DifferenceWidget title=\"Most Consistent Starters\" top />\n                    <DifferenceWidget title=\"Most Consistent Bench Players\" />\n                </div>\n                <h2>\n                    <span>Teams</span>\n                </h2>\n                <div className=\"dashboard__widgets dashboard__widgets--single\">\n                    <TeamsWidget />\n                </div>\n                <h2>\n                    <span>Captains</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <CaptainWidget />\n                    <CaptainOpportunityWidget />\n                    <WrongCaptainWidget />\n                </div>\n                <h2>\n                    <span>Streaks</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <StreakWidget title=\"Highest Non-Blank Streaks\" metric=\"nonBlank\" showDetailedStats />\n                    <StreakWidget title=\"Highest Selection Streaks\" metric=\"selection\" showDetailedStats />\n                    <StreakWidget title=\"Highest Start Streaks\" metric=\"start\" showDetailedStats />\n                    <StreakWidget title=\"Highest Bench Appearance Streaks\" metric=\"bench\" />\n                </div>\n                <h2>\n                    <span>Contributions</span>\n                </h2>\n                <div className=\"dashboard__widgets\">\n                    <ContributionWidget />\n                    <MissedPointsShareWidget title=\"Most Points Scored Outside of Team\" top />\n                    <MissedPointsShareWidget title=\"Fewest Points Scored Outside of Team\" />\n                </div>\n                <h2>\n                    <span>Graphs</span>\n                </h2>\n                <div className=\"dashboard__graphs\">\n                    <OverallRankWidget />\n                    <PointsWidget />\n                    <ValueWidget />\n                </div>\n                <div className=\"app__legal\">\n                    <p>\n                        FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated\n                        with the Premier League.\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import { combineReducers } from 'redux'\nimport { Bootstrap, Stats, History, Entry, StatData } from '../types'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport history from './history'\nimport loading from './loading'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data: Stats | undefined\n        chips:\n            | {\n                  [key: number]: string\n              }\n            | undefined\n        tots:\n            | {\n                  xi: StatData[]\n                  bench: StatData[]\n              }\n            | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n    }\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport './index.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={configureAppStore()}>\n            <BrowserRouter basename=\"/fpl-stats\">\n                <Switch>\n                    <Route path=\"/:team/\">\n                        <Dashboard />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <Dashboard />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [...getDefaultMiddleware()],\n    })\n\n    return store\n}\n"],"sourceRoot":""}