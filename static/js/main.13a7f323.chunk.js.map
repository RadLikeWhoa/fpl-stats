{"version":3,"sources":["serviceWorker.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Spinner/Spinner.tsx","components/Widget/Widget.tsx","components/Team/Team.tsx","utilities/settings.ts","utilities/stats.ts","utilities/numbers.ts","utilities/events.ts","utilities/chips.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/clickOutside.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/TotsPlayer/TotsPlayer.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","bootstrap","createSlice","name","initialState","loading","data","undefined","reducers","fetchBootstrapStart","state","fetchBootstrapSuccess","action","payload","actions","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","condensed","src","code","singular_name_short","alt","web_name","suffix","title","short_name","Spinner","Widget","classNames","cloaked","children","Team","validateTeamId","value","number","Number","isNaN","isInteger","getTotalSelections","statData","filter","pick","multiplier","length","getTotalStarts","getTotalBenched","getTotalPoints","reduce","acc","points","thousandsSeparator","toString","replace","getPastEvents","events","timestamp","Date","now","event","deadline_time_epoch","getShortName","split","pop","chips","bboost","freehit","wildcard","settings","localStorage","getItem","setId","setItem","Button","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","key","onSubmit","preventDefault","placeholder","onChange","stats","buildDataStart","buildDataSuccess","fetchPicks","entry","a","fetch","encodeURIComponent","response","json","fetchEvent","fetchGameweekInformation","Promise","all","live","history","fetchHistoryStart","fetchHistorySuccess","TotsPlayer","sortings","selection","start","bench","alphabet","toLowerCase","charCodeAt","sortOptions","renderDifferenceWidget","top","Object","values","curr","map","selections","benched","starts","benchedPercentage","startsPercentage","topStarters","sort","b","percentageDiff","topBenchwarmers","slice","toFixed","Dashboard","isModalOpen","setIsModalOpen","setSort","isLoadingBootstrap","isLoadingStats","isLoadingHistory","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","gameweeks","forEach","gw","active_chip","entry_history","picks","item","total_points","keys","index","buildData","stringify","gk","def","mid","fwd","rest","xi","renderTots","gws","bestGW","worstGW","allPlayers","aggregateStats","reds","yellows","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","inDreamteam","bps","bonus","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","mostCaptaincies","captaincies","href","rel","red_cards","yellow_cards","goals_scored","clean_sheets","goals_conceded","own_goals","penalties_missed","penalties_saved","in_dreamteam","renderStatsWidget","options","option","styles","container","provided","width","menu","zIndex","top_element_info","entries","elementType","plural_name_short","renderSelectionWidget","renderStartersWidget","renderBenchWidget","counts","renderTeamsWidget","positions","plural_name","renderPositionWidget","overall_rank","height","margin","bottom","left","right","dataKey","stroke","fill","reversed","tickFormatter","thousandsShorthand","interval","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","renderOverallRankWidget","charAt","toUpperCase","renderPointsWidget","bank","domain","renderValueWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13a7f323.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.loading = true\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    condensed?: boolean\n    suffix?: string\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className={`player ${props.condensed ? 'player--condensed' : ''}`}>\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}{props.suffix && ` (${props.suffix})`}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","import React from 'react'\nimport './Widget.scss'\nimport { Spinner } from '../Spinner'\nimport classNames from 'classnames'\n\ntype Props = {\n    title: string\n    children: React.ReactNode\n    loading?: boolean\n    cloaked?: boolean\n}\n\nconst Widget: React.FC<Props> = (props: Props) => (\n    <div className={classNames('widget', {\n        'widget--cloaked': props.cloaked,\n    })}>\n        <h2 className=\"widget__title\">{props.title}</h2>\n        <div className=\"widget__content\">\n            {props.loading && <div className=\"widget__loading\">\n                <Spinner />\n            </div>}\n            {props.children}\n        </div>\n    </div>\n)\n\nexport default Widget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","import { StatData } from '../types'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return statData.data.reduce((acc, pick) => acc + (pick.points || 0), 0);\n}","export const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${(value / 1000000).toFixed(0)}M` : value > 999 ? `${(value / 1000).toFixed(0)}K` : `${value}`\n}","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            }\n        },\n    },\n})\n\nexport const { setId } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className=\"button\"\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null);\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback();\n      }\n    };\n\n    if (element.current) {\n      document.addEventListener('click', listener);\n    } else {\n      document.removeEventListener('click', listener);\n    }\n\n    return () => document.removeEventListener('click', listener);\n  }, [element, callback]);\n\n  return element;\n};\n\nexport default useClickOutside;\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport useClickOutside from '../../hooks/clickOutside';\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        loading: true,\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.loading = true\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.loading = false\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/event/${event}/live/`)}`)\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks, live: LiveEvent }> => {\n    const [ pick, live ] = await Promise.all([\n        fetchPicks(event, entry),\n        fetchEvent(event),\n    ])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n\n    const gameweeks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    gameweeks.forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < gw.pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        stats: null,\n                    })),\n                }\n            }\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: (gw.live.elements.find(el => el.id === item.element)?.stats.total_points || 0) * item.multiplier,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            stats: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n}\n\nexport default history.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">\n                    {props.points}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer","import React, { useState, useEffect, useRef } from 'react'\nimport { Bootstrap, StatData, Stats, History, ElementStats } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Team } from '../Team'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, thousandsShorthand, getTotalPoints } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport classNames from 'classnames'\nimport { fetchHistory } from '../../reducers/history'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport './Dashboard.scss'\nimport TotsPlayer from '../TotsPlayer/TotsPlayer'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    points: getTotalPoints,\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderSelectionWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalSelections(b) - getTotalSelections(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalSelections(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderStartersWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalStarts(b) - getTotalStarts(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalStarts(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderBenchWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalBenched(b) - getTotalBenched(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalBenched(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderDifferenceWidget = (stats: Stats, top: boolean = false): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <ul className=\"widget__list\">\n            {top && topStarters.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.startsPercentage.toFixed(1)}% ({element.starts})</span>\n                </li>\n            ))}\n            {!top && topBenchwarmers.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.benchedPercentage.toFixed(1)}% ({element.benched})</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderPositionWidget = (stats: Stats, bootstrap: Bootstrap): JSX.Element => {\n    const positions: Record<string, number> = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <ul className=\"widget__list\">\n            <li className=\"widget__list__item\">\n                <span>Total</span>\n                <span>{Object.values(positions).reduce((acc, curr) => acc + curr, 0)}</span>\n            </li>\n            {Object.entries(positions).map(([ elementType, elements ]) => (\n                <li className=\"widget__list__item\">\n                    <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                    <span>{Number(elements)}</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderTeamsWidget = (stats: Stats, bootstrap: Bootstrap): JSX.Element => {\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = [ ...bootstrap.teams ].sort((a, b) => (counts[b.id] || 0) - (counts[a.id] || 0))\n\n    return (\n        <ul className=\"widget__list\">\n            {teams.map(team => (\n                <li className=\"widget__list__item\">\n                    <Team team={team} />\n                    <span>{counts[team.id] || 0}</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderOverallRankWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    return (\n        <div className=\"chart chart--reversed\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} interval=\"preserveStart\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={value => [ thousandsSeparator(Number(value)), '' ]} separator=\"\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderPointsWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" />\n                    <YAxis />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderValueWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderTots = (stats: Stats): JSX.Element => {\n    const gk = [...stats[1]].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, 2)\n    const def = [...stats[2]].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, 5)\n    const mid = [...stats[3]].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, 5)\n    const fwd = [...stats[4]].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, 3)\n\n    const top = [gk[0], ...def.slice(0, 3), ...mid.slice(0, 2), ...fwd.slice(0, 1)]\n    const rest = [...def.slice(3), ...mid.slice(2), ...fwd.slice(1)].sort((a, b) => getTotalPoints(b) - getTotalPoints(a))\n\n    const xi = [...top, ...rest.slice(0, 4)].sort((a, b) => a.element.element_type - b.element.element_type)\n    const bench = [gk[1], ...rest.slice(4)].sort((a, b) => a.element.element_type - b.element.element_type)\n\n    return (\n        <div className=\"dashboard__tots\">\n            <div className=\"dashboard__tots-row\">\n                {xi.filter(el => el.element.element_type === 1).map(player => (\n                    <TotsPlayer\n                        id={player.element.id}\n                        points={getTotalPoints(player)}\n                    />\n                ))}\n            </div>\n            <div className=\"dashboard__tots-row\">\n                {xi.filter(el => el.element.element_type === 2).map(player => (\n                    <TotsPlayer\n                        id={player.element.id}\n                        points={getTotalPoints(player)}\n                    />\n                ))}\n            </div>\n            <div className=\"dashboard__tots-row\">\n                {xi.filter(el => el.element.element_type === 3).map(player => (\n                    <TotsPlayer\n                        id={player.element.id}\n                        points={getTotalPoints(player)}\n                    />\n                ))}\n            </div>\n            <div className=\"dashboard__tots-row\">\n                {xi.filter(el => el.element.element_type === 4).map(player => (\n                    <TotsPlayer\n                        id={player.element.id}\n                        points={getTotalPoints(player)}\n                    />\n                ))}\n            </div>\n            <div className=\"dashboard__tots-row dashboard__tots-row--bench\">\n                {bench.map(player => (\n                    <TotsPlayer\n                        id={player.element.id}\n                        points={getTotalPoints(player)}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nconst renderStatsWidget = (history: History, stats: Stats, id: number | undefined): JSX.Element => {\n    const gws = [ ...history.current ].sort((a, b) => b.points - a.points)\n\n    const bestGW = gws[0]\n    const worstGW = gws[gws.length - 1]\n\n    const allPlayers = Object.values(stats).reduce((acc, curr) => [ ...acc, ...curr ]);\n\n    const aggregateStats = (key: keyof ElementStats) => allPlayers.map(player => ({\n        player,\n        [key]: player.data.reduce((acc, data) => {\n            if (typeof data.stats?.[key] === 'number') {\n                return ((data.stats?.[key] as number) || 0) + acc;\n            }\n\n            if (typeof data.stats?.[key] === 'boolean') {\n                return (+(data.stats?.[key] as boolean) || 0) + acc;\n            }\n\n            return acc;\n        }, 0)\n    })).sort((a, b) => (b[key] as number) - (a[key] as number))[0]\n\n    const reds = aggregateStats('red_cards')\n    const yellows = aggregateStats('yellow_cards')\n    const goals = aggregateStats('goals_scored')\n    const assists = aggregateStats('assists')\n    const cleanSheets = aggregateStats('clean_sheets')\n    const goalsConceded = aggregateStats('goals_conceded')\n    const ownGoals = aggregateStats('own_goals')\n    const saves = aggregateStats('saves')\n    const minutes = aggregateStats('minutes')\n    const penaltiesMissed = aggregateStats('penalties_missed')\n    const penaltiesSaved = aggregateStats('penalties_saved')\n    const inDreamteam = aggregateStats('in_dreamteam')\n    const bps = aggregateStats('bps')\n    const bonus = aggregateStats('bonus')\n\n    const totalTransfers = history.current.reduce((acc,event) => acc + event.event_transfers, 0)\n    const totalHits = history.current.reduce((acc,event) => acc + event.event_transfers_cost / 4, 0)\n    const totalBenched = history.current.reduce((acc,event) => acc + event.points_on_bench, 0)\n\n    const mostCaptaincies = allPlayers.map(player => ({\n        player,\n        captaincies: player.data.filter(data => data.multiplier && data.multiplier > 1).length,\n    })).sort((a, b) => b.captaincies - a.captaincies)[0]\n\n    return (\n        <ul className=\"widget__list\">\n            <li className=\"widget__list__item\">\n                <span>Total Transfers Made</span>\n                <span>\n                    <a href={`https://fantasy.premierleague.com/entry/${id}/transfers`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {totalTransfers}\n                    </a>\n                </span>\n            </li>\n            <li className=\"widget__list__item\">\n                <span>Total Hits Taken</span>\n                <span>{totalHits} ({totalHits * -4} pts)</span>\n            </li>\n            <li className=\"widget__list__item\">\n                <span>Total Points on Bench</span>\n                <span>{totalBenched} pts</span>\n            </li>\n            <li className=\"widget__list__item\">\n                <span>Best Gameweek</span>\n                <span>\n                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bestGW.event}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        GW {bestGW.event}\n                    </a> ({bestGW.points} pts)\n                </span>\n            </li>\n            <li className=\"widget__list__item\">\n                <span>Worst Gameweek</span>\n                <span>\n                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${worstGW.event}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                        GW {worstGW.event}\n                    </a> ({worstGW.points} pts)\n                </span>\n            </li>\n            {reds.red_cards > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Red Cards</span>\n                    <Player id={reds.player.element.id} suffix={`${reds.red_cards}`} condensed />\n                </li>\n            )}\n            {yellows.yellow_cards > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Yellow Cards</span>\n                    <Player id={yellows.player.element.id} suffix={`${yellows.yellow_cards}`} condensed />\n                </li>\n            )}\n            {goals.goals_scored > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Top Scorer</span>\n                    <Player id={goals.player.element.id} suffix={`${goals.goals_scored}`} condensed />\n                </li>\n            )}\n            {assists.assists > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Assists</span>\n                    <Player id={assists.player.element.id} suffix={`${assists.assists}`} condensed />\n                </li>\n            )}\n            {bonus.bonus > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Bonus Points</span>\n                    <Player id={bonus.player.element.id} suffix={`${bonus.bonus}`} condensed />\n                </li>\n            )}\n            {bps.bps > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Highest Total BPS</span>\n                    <Player id={bps.player.element.id} suffix={`${bps.bps}`} condensed />\n                </li>\n            )}\n            {cleanSheets.clean_sheets > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Clean Sheets</span>\n                    <Player id={cleanSheets.player.element.id} suffix={`${cleanSheets.clean_sheets}`} condensed />\n                </li>\n            )}\n            {goalsConceded.goals_conceded > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Goals Conceded</span>\n                    <Player id={goalsConceded.player.element.id} suffix={`${goalsConceded.goals_conceded}`} condensed />\n                </li>\n            )}\n            {saves.saves > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Saves</span>\n                    <Player id={saves.player.element.id} suffix={`${saves.saves}`} condensed />\n                </li>\n            )}\n            {ownGoals.own_goals > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Own Goals</span>\n                    <Player id={ownGoals.player.element.id} suffix={`${ownGoals.own_goals}`} condensed />\n                </li>\n            )}\n            {penaltiesMissed.penalties_missed > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Penalties Missed</span>\n                    <Player id={penaltiesMissed.player.element.id} suffix={`${penaltiesMissed.penalties_missed}`} condensed />\n                </li>\n            )}\n            {penaltiesSaved.penalties_saved > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Penalties Saved</span>\n                    <Player id={penaltiesSaved.player.element.id} suffix={`${penaltiesSaved.penalties_saved}`} condensed />\n                </li>\n            )}\n            {minutes.minutes > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Minutes</span>\n                    <Player id={minutes.player.element.id} suffix={`${thousandsSeparator(minutes.minutes as number)}`} condensed />\n                </li>\n            )}\n            {inDreamteam.in_dreamteam > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Times in Dreamteam</span>\n                    <Player id={inDreamteam.player.element.id} suffix={`${inDreamteam.in_dreamteam}`} condensed />\n                </li>\n            )}\n            {mostCaptaincies.captaincies > 0 && (\n                <li className=\"widget__list__item\">\n                    <span>Most Captaincies</span>\n                    <Player id={mostCaptaincies.player.element.id} suffix={`${mostCaptaincies.captaincies}`} condensed />\n                </li>\n            )}\n        </ul>\n    )\n}\n\nconst Dashboard: React.FC = () => {\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoadingBootstrap,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                <div className=\"app__legend\">\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                        Started\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                        Benched\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                        TC\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator\"></div>\n                        Not Selected\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <Widget\n                        title=\"Team of the Season\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderTots(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Stats\"\n                        loading={isLoadingHistory || isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {(history && stats) && renderStatsWidget(history, stats, id)}\n                    </Widget>\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    {isLoadingStats && (\n                        <div className=\"dashboard__loading\">\n                            <Spinner />\n                        </div>\n                    )}\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Points\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && Object.entries(stats).map(([ elementType, statData ]) => (\n                                <div key={elementType}>\n                                    <li className=\"dashboard__category\">\n                                        <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                                        <span>{statData.length}</span>\n                                    </li>\n                                    {statData\n                                        .filter(element => element.data.filter(pick => pick.multiplier !== null).length)\n                                        .sort((a, b) => sortings[(sort as OptionType).value](b) - sortings[(sort as OptionType).value](a))\n                                        .map(element => (\n                                            <li key={element.element.id} className=\"dashboard__item\">\n                                                <div className=\"dashboard__player\">\n                                                    <Player id={element.element.id} />\n                                                </div>\n                                                <div className=\"dashboard__stats\">\n                                                    {element.data.map(item => (\n                                                        <span\n                                                            key={item.event.id}\n                                                            className={classNames('dashboard__stat', {\n                                                                'dashboard__stat--benched': item.multiplier === 0,\n                                                                'dashboard__stat--triple': item.multiplier === 3,\n                                                                'dashboard__stat--started': item.multiplier,\n                                                            })}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div className=\"dashboard__totals\">\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalSelections(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalSelections(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalStarts(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalStarts(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalBenched(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalBenched(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                    <span className=\"dashboard__stat dashboard__stat--wide\">\n                                                        {getTotalPoints(element)}\n                                                    </span>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <Widget\n                        title=\"Top Selections\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderSelectionWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderStartersWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderBenchWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats, true)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Breakdown by Team\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && bootstrap && renderTeamsWidget(stats, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Breakdown by Position\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && bootstrap && renderPositionWidget(stats, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <Widget\n                        title=\"Overall Rank Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderOverallRankWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Gameweek Points\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderPointsWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Team Value Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderValueWidget(history, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n            {id !== undefined && (\n                <div className=\"app__footer\">\n                    <div className=\"app__footer__content\">\n                        <Button\n                            onClick={() => setIsModalOpen(true)}\n                            label=\"Change Team\"\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport { Bootstrap, Stats, History } from '../types'\nimport history from './history';\n\nexport type RootState = {\n    bootstrap: {\n        loading: boolean,\n        data: Bootstrap | undefined,\n    },\n    stats: {\n        loading: boolean,\n        data: Stats | undefined,\n        chips: {\n            [key: number]: string,\n        } | undefined,\n    },\n    settings: {\n        id: number | undefined,\n    },\n    history: {\n        loading: boolean,\n        data: History | undefined,\n    },\n}\n\nexport default combineReducers({\n    bootstrap,\n    stats,\n    settings,\n    history,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}