{"version":3,"sources":["serviceWorker.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Spinner/Spinner.tsx","components/Widget/Widget.tsx","components/Team/Team.tsx","utilities/settings.ts","utilities/stats.ts","utilities/numbers.ts","utilities/events.ts","utilities/chips.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/clickOutside.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","bootstrap","createSlice","name","initialState","loading","data","undefined","reducers","fetchBootstrapStart","state","fetchBootstrapSuccess","action","payload","actions","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","src","code","singular_name_short","alt","web_name","title","short_name","Spinner","Widget","classNames","cloaked","children","Team","validateTeamId","value","number","Number","isNaN","isInteger","getTotalSelections","statData","filter","pick","multiplier","length","getTotalStarts","getTotalBenched","thousandsSeparator","toString","replace","getPastEvents","events","timestamp","Date","now","event","deadline_time_epoch","getShortName","split","pop","chips","bboost","freehit","wildcard","settings","localStorage","getItem","setId","setItem","Button","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","key","onSubmit","preventDefault","placeholder","onChange","stats","buildDataStart","buildDataSuccess","fetchPicks","entry","a","fetch","encodeURIComponent","response","json","history","fetchHistoryStart","fetchHistorySuccess","sortings","selection","start","bench","alphabet","toLowerCase","charCodeAt","sortOptions","renderDifferenceWidget","top","Object","values","reduce","acc","curr","map","selections","benched","starts","benchedPercentage","startsPercentage","topStarters","sort","b","percentageDiff","topBenchwarmers","slice","toFixed","Dashboard","filteredStats","setFilteredStats","filteredHistory","setFilteredHistory","isModalOpen","setIsModalOpen","setSort","isLoadingBootstrap","isLoadingStats","isLoadingHistory","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","Promise","all","picks","forEach","active_chip","entry_history","item","keys","index","buildData","stringify","entries","elementType","topPoints","top_element_info","points","options","option","styles","container","provided","width","menu","zIndex","plural_name_short","renderSelectionWidget","renderStartersWidget","renderBenchWidget","counts","renderTeamsWidget","positions","plural_name","renderPositionWidget","overall_rank","height","margin","bottom","left","right","dataKey","stroke","fill","reversed","tickFormatter","thousandsShorthand","interval","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","renderOverallRankWidget","points_on_bench","charAt","toUpperCase","renderPointsWidget","bank","domain","renderValueWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f93fba0d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.loading = true\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","import React from 'react'\nimport './Widget.scss'\nimport { Spinner } from '../Spinner'\nimport classNames from 'classnames'\n\ntype Props = {\n    title: string\n    children: React.ReactNode\n    loading?: boolean\n    cloaked?: boolean\n}\n\nconst Widget: React.FC<Props> = (props: Props) => (\n    <div className={classNames('widget', {\n        'widget--cloaked': props.cloaked,\n    })}>\n        <h2 className=\"widget__title\">{props.title}</h2>\n        <div className=\"widget__content\">\n            {props.loading && <div className=\"widget__loading\">\n                <Spinner />\n            </div>}\n            {props.children}\n        </div>\n    </div>\n)\n\nexport default Widget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","import { StatData } from '../types'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}","export const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${(value / 1000000).toFixed(0)}M` : value > 999 ? `${(value / 1000).toFixed(0)}K` : `${value}`\n}","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            }\n        },\n    },\n})\n\nexport const { setId } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className=\"button\"\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null);\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback();\n      }\n    };\n\n    if (element.current) {\n      document.addEventListener('click', listener);\n    } else {\n      document.removeEventListener('click', listener);\n    }\n\n    return () => document.removeEventListener('click', listener);\n  }, [element, callback]);\n\n  return element;\n};\n\nexport default useClickOutside;\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport useClickOutside from '../../hooks/clickOutside';\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData } from '../types'\nimport { getPastEvents } from '../utilities'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        loading: true,\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.loading = true\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.loading = false\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n\n    const picks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchPicks(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    picks.forEach(pick => {\n        if (pick.active_chip) {\n            chips[pick.entry_history.event] = pick.active_chip\n        }\n\n        pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                    })),\n                }\n            }\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === pick.entry_history.event)!,\n                            multiplier: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n}\n\nexport default history.reducer","import React, { useState, useEffect, useRef } from 'react'\nimport { Bootstrap, StatData, Stats, History } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Team } from '../Team'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, thousandsShorthand } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport classNames from 'classnames'\nimport { fetchHistory } from '../../reducers/history'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderSelectionWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalSelections(b) - getTotalSelections(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalSelections(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderStartersWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalStarts(b) - getTotalStarts(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalStarts(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderBenchWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .sort((a, b) => getTotalBenched(b) - getTotalBenched(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalBenched(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderDifferenceWidget = (stats: Stats, top: boolean = false): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => [ ...acc, ...curr ], [])\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <ul className=\"widget__list\">\n            {top && topStarters.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.startsPercentage.toFixed(1)}% ({element.starts})</span>\n                </li>\n            ))}\n            {!top && topBenchwarmers.slice(0, 10).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.benchedPercentage.toFixed(1)}% ({element.benched})</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderPositionWidget = (stats: Stats, bootstrap: Bootstrap): JSX.Element => {\n    const positions = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <ul className=\"widget__list\">\n            {Object.entries(positions).map(([ elementType, elements ]) => (\n                <li className=\"widget__list__item\">\n                    <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                    <span>{Number(elements)}</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderTeamsWidget = (stats: Stats, bootstrap: Bootstrap): JSX.Element => {\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = [ ...bootstrap.teams ].sort((a, b) => (counts[b.id] || 0) - (counts[a.id] || 0))\n\n    return (\n        <ul className=\"widget__list\">\n            {teams.map(team => (\n                <li className=\"widget__list__item\">\n                    <Team team={team} />\n                    <span>{counts[team.id] || 0}</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderOverallRankWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    return (\n        <div className=\"chart chart--reversed\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} interval=\"preserveStart\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={value => [ thousandsSeparator(Number(value)), '' ]} separator=\"\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderPointsWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" />\n                    <YAxis />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderValueWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" />\n                    <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst Dashboard: React.FC = () => {\n    const [ filteredStats, setFilteredStats ] = useState<Stats | undefined>(undefined)\n    const [ filteredHistory, setFilteredHistory ] = useState<History | undefined>(undefined)\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    useEffect(() => {\n        if (!stats) {\n            setFilteredStats(undefined)\n            return\n        }\n\n        setFilteredStats(Object.entries(stats).reduce((acc: Stats, [ elementType, stats ]) => ({\n            ...acc,\n            [Number(elementType)]: stats.map(element => ({\n                ...element,\n                data: element.data.filter(item => {\n                    const topPoints = bootstrap?.events.find(event => event.id === item.event.id)?.top_element_info.points\n                    return topPoints && topPoints > 0\n                }),\n            })),\n        }), {}))\n    }, [ stats, bootstrap ])\n\n    useEffect(() => {\n        if (!history) {\n            setFilteredHistory(undefined)\n            return\n        }\n\n        setFilteredHistory({\n            ...history,\n            current: history.current.filter(current => {\n                const topPoints = bootstrap?.events.find(event => event.id === current.event)?.top_element_info.points\n                return topPoints && topPoints > 0\n            })\n        })\n    }, [ history, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoadingBootstrap,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n\n                <div className=\"app__legend\">\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                        Started\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                        Benched\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                        TC\n                    </div>\n                    <div className=\"app__color\">\n                        <div className=\"app__color__indicator\"></div>\n                        Not Selected\n                    </div>\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    {isLoadingStats && (\n                        <div className=\"dashboard__loading\">\n                            <Spinner />\n                        </div>\n                    )}\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {filteredStats && Object.entries(filteredStats).map(([ elementType, statData ]) => (\n                                <div key={elementType}>\n                                    <li className=\"dashboard__category\">\n                                        <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                                        <span>{statData.length}</span>\n                                    </li>\n                                    {statData\n                                        .filter(element => element.data.filter(pick => pick.multiplier !== null).length)\n                                        .sort((a, b) => sortings[(sort as OptionType).value](b) - sortings[(sort as OptionType).value](a))\n                                        .map(element => (\n                                            <li key={element.element.id} className=\"dashboard__item\">\n                                                <div className=\"dashboard__player\">\n                                                    <Player id={element.element.id} />\n                                                </div>\n                                                <div className=\"dashboard__stats\">\n                                                    {element.data.map(item => (\n                                                        <span\n                                                            key={item.event.id}\n                                                            className={classNames('dashboard__stat', {\n                                                                'dashboard__stat--benched': item.multiplier === 0,\n                                                                'dashboard__stat--triple': item.multiplier === 3,\n                                                                'dashboard__stat--started': item.multiplier,\n                                                            })}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div className=\"dashboard__totals\">\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalSelections(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalSelections(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalStarts(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalStarts(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalBenched(element)}\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {(getTotalBenched(element) / element.data.length * 100).toFixed(1)}%\n                                                    </span>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <Widget\n                        title=\"Top Selections\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && renderSelectionWidget(filteredStats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && renderStartersWidget(filteredStats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && renderBenchWidget(filteredStats)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && renderDifferenceWidget(filteredStats, true)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && renderDifferenceWidget(filteredStats)}\n                    </Widget>\n                    <Widget\n                        title=\"Breakdown by Team\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && bootstrap && renderTeamsWidget(filteredStats, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Breakdown by Position\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {filteredStats && bootstrap && renderPositionWidget(filteredStats, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <Widget\n                        title=\"Overall Rank Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {filteredHistory && bootstrap && renderOverallRankWidget(filteredHistory, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Gameweek Points\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {filteredHistory && bootstrap && renderPointsWidget(filteredHistory, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Team Value Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {filteredHistory && bootstrap && renderValueWidget(filteredHistory, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n            {id !== undefined && (\n                <div className=\"app__footer\">\n                    <div className=\"app__footer__content\">\n                        <Button\n                            onClick={() => setIsModalOpen(true)}\n                            label=\"Change Team\"\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport { Bootstrap, Stats, History } from '../types'\nimport history from './history';\n\nexport type RootState = {\n    bootstrap: {\n        loading: boolean,\n        data: Bootstrap | undefined,\n    },\n    stats: {\n        loading: boolean,\n        data: Stats | undefined,\n        chips: {\n            [key: number]: string,\n        } | undefined,\n    },\n    settings: {\n        id: number | undefined,\n    },\n    history: {\n        loading: boolean,\n        data: History | undefined,\n    },\n}\n\nexport default combineReducers({\n    bootstrap,\n    stats,\n    settings,\n    history,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}