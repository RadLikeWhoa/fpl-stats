{"version":3,"sources":["serviceWorker.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Spinner/Spinner.tsx","components/Widget/Widget.tsx","utilities/settings.ts","utilities/numbers.ts","utilities/stats.ts","utilities/events.ts","utilities/chips.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/useClickOutside.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","reducers/entry.ts","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/NonBlankStreakWidget/NonBlankStreakWidget.tsx","components/SelectionStreakWidget/SelectionStreakWidget.tsx","components/StartStreakWidget/StartStreakWidget.tsx","components/BenchStreakWidget/BenchStreakWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","bootstrap","createSlice","name","initialState","loading","data","undefined","reducers","fetchBootstrapStart","state","fetchBootstrapSuccess","action","payload","actions","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","condensed","src","code","singular_name_short","alt","web_name","suffix","title","short_name","Spinner","Widget","classNames","cloaked","children","validateTeamId","value","number","Number","isNaN","isInteger","thousandsSeparator","toString","replace","sumNumbers","series","reduce","acc","curr","sort","direction","a","b","getTotalSelections","statData","filter","pick","multiplier","length","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalBenchPoints","rawPoints","getAllPlayers","stats","Object","values","concat","aggregateStats","players","key","map","getTopStatAggregate","getStreak","comparison","ignoreBlanks","streaks","slice","max","Math","start","indexOf","streak","event","end","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getPastEvents","events","timestamp","Date","now","deadline_time_epoch","getShortName","split","pop","chips","bboost","freehit","wildcard","settings","localStorage","getItem","meanStrategy","setId","setItem","removeItem","setMeanStrategy","Button","secondary","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","useMeanLabel","strategy","useMeanValue","average","sorted","mid","ceil","median","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","onSubmit","preventDefault","placeholder","onChange","buildDataStart","buildDataSuccess","fetchPicks","entry","fetch","encodeURIComponent","response","json","fetchEvent","fetchGameweekInformation","Promise","all","live","history","fetchHistoryStart","fetchHistorySuccess","HistoryWidget","isLoadingHistory","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","total_points","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","round","TotsPlayer","TotsWidget","isLoadingStats","gk","def","fwd","top","rest","xi","bench","explanations","Metric","metric","PlayerStatsWidget","allPlayers","reds","yellows","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","inDreamteam","bps","bonus","mostCaptaincies","captaincies","topReturner","topSeasonReturner","topBenchReturner","href","rel","toFixed","red_cards","yellow_cards","goals_scored","clean_sheets","goals_conceded","own_goals","penalties_missed","penalties_saved","in_dreamteam","FormationWidget","weeks","formations","selections","Array","from","keys","index","val","entries","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","sum","GameweekWidget","isLoadingBootstrap","differences","week","average_entry_score","sortedRanks","gws","bestGW","worstGW","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","fetchEntryStart","fetchEntrySuccess","SeasonWidget","stat","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","Team","counts","NonBlankStreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","SelectionStreakWidget","StartStreakWidget","BenchStreakWidget","sortings","selection","alphabet","toLowerCase","charCodeAt","sortOptions","renderDifferenceWidget","benched","starts","benchedPercentage","startsPercentage","topStarters","percentageDiff","topBenchwarmers","Dashboard","isModalOpen","setIsModalOpen","setSort","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","gameweeks","forEach","active_chip","entry_history","picks","item","buildData","fetchHistory","fetchEntry","stringify","summary_overall_points","summary_overall_rank","options","option","styles","container","provided","width","menu","zIndex","top_element_info","plural_name_short","renderSelectionWidget","renderStartersWidget","renderBenchWidget","TeamsWidget","overall_rank","height","margin","bottom","left","right","dataKey","fill","fillOpacity","stroke","reversed","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","renderOverallRankWidget","charAt","toUpperCase","renderPointsWidget","bank","renderValueWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8991553b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.loading = true\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    condensed?: boolean\n    suffix?: string | (() => JSX.Element)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className={`player ${props.condensed ? 'player--condensed' : ''}`}>\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}{typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","import React from 'react'\nimport './Widget.scss'\nimport { Spinner } from '../Spinner'\nimport classNames from 'classnames'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    loading?: boolean\n    cloaked?: boolean\n}\n\nconst Widget: React.FC<Props> = (props: Props) => (\n    <div className={classNames('widget', {\n        'widget--cloaked': props.cloaked,\n    })}>\n        {props.title && (\n            <h2 className=\"widget__title\">{props.title}</h2>\n        )}\n        <div className=\"widget__content\">\n            {props.loading && <div className=\"widget__loading\">\n                <Spinner />\n            </div>}\n            {props.children}\n        </div>\n    </div>\n)\n\nexport default Widget","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","export const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${(value / 1000000).toFixed(1)}M` : value > 999 ? `${(value / 1000).toFixed(0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return series.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport const average = (series: number[]): number => {\n    return sumNumbers(series) / series.length\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const sort = (series: number[], direction: 'asc' | 'desc' = 'desc'): number[] => {\n    if (direction === 'asc') {\n        return [ ...series ].sort((a, b) => a - b)\n    }\n\n    return [ ...series ].sort((a, b) => b - a)\n}","import { ElementStats, Event, StatData, Stats, StatDataGameweek } from '../types'\nimport { sumNumbers } from './numbers'\n\ntype Streak = {\n    start: Event\n    end: Event\n    length: number\n    points?: number\n}\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return statData.data.reduce((acc, pick) => acc + (pick.points || 0), 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return statData.data.reduce((acc, pick) => acc + (pick.multiplier === 0 ? (pick.rawPoints || 0) : 0), 0)\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const aggregateStats = (players: StatData[], key: keyof ElementStats) => players.map(player => ({\n    player,\n    [key]: player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n})).sort((a, b) => (b[key] as number) - (a[key] as number))\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof ElementStats) => aggregateStats(players, key)[0]\n\nconst getStreak = (statData: StatData, comparison: (gw: StatDataGameweek) => boolean, ignoreBlanks: boolean = false): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [ ...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1 ]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [ ...acc, 1 ]\n            }\n\n            return [ ...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1 ]\n        }\n\n        return [ ...acc, 0 ]\n    }, (ignoreBlanks ? [ 0 ] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start = statData.data[sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => streak > 0 ? streak : 1))].event\n    const end = statData.data[start.id - 2 + max].event\n\n    const points = sumNumbers(statData.data\n        .slice(start.id - 1, start.id - 1 + max)\n        .map(event => event.points || 0))\n\n    return {\n        start,\n        end,\n        length: max,\n        points,\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => (gw.rawPoints || 0) > 2)","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n        meanStrategy: localStorage.getItem('meanStrategy') || 'average',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            } else {\n                localStorage.removeItem('id')\n            }\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n            localStorage.setItem('meanStrategy', state.meanStrategy)\n        }\n    },\n})\n\nexport const { setId, setMeanStrategy } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport classNames from 'classnames'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    secondary?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className={classNames('button', { 'button--secondary': props.secondary })}\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null)\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback()\n      }\n    }\n\n    if (element.current) {\n      document.addEventListener('click', listener)\n    } else {\n      document.removeEventListener('click', listener)\n    }\n\n    return () => document.removeEventListener('click', listener)\n  }, [element, callback])\n\n  return element\n}\n\nexport default useClickOutside\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { useClickOutside } from '../../hooks'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        loading: true,\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.loading = true\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.loading = false\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/event/${event}/live/`)}`)\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks, live: LiveEvent }> => {\n    const [ pick, live ] = await Promise.all([\n        fetchPicks(event, entry),\n        fetchEvent(event),\n    ])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n\n    const gameweeks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    gameweeks.forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < gw.pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n}\n\nexport default history.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst HistoryWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return (\n            <Widget\n                title=\"Historical Data\"\n                loading={isLoadingHistory}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const pastSeasonsByRank = [ ...history.past ].sort((a, b) => a.rank - b.rank)\n    const pastSeasonsByPoints = [ ...history.past ].sort((a, b) => b.total_points - a.total_points)\n\n    const bestRankedSeason = pastSeasonsByRank[0]\n    const worstRankedSeason = pastSeasonsByRank[pastSeasonsByRank.length - 1]\n\n    const bestPointSeason = pastSeasonsByPoints[0]\n    const worstPointSeason = pastSeasonsByPoints[pastSeasonsByPoints.length - 1]\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget\n            title=\"Historical Data\"\n            loading={isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Best Season Rank</span>\n                    <span>{thousandsSeparator(bestRankedSeason.rank)} ({bestRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Points Finish</span>\n                    <span>{thousandsSeparator(bestPointSeason.total_points)} ({bestPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Season Rank</span>\n                    <span>{thousandsSeparator(worstRankedSeason.rank)} ({worstRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Points Finish</span>\n                    <span>{thousandsSeparator(worstPointSeason.total_points)} ({worstPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByRank.map((season) => season.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByPoints.map((season) => season.total_points))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <span>{top1k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <span>{top10k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <span>{top100k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <span>{top1m}</span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">\n                    {props.points}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints } from '../../utilities'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nconst TotsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Team of the Season\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const gk = [ ...stats[1] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_GK)\n    const def = [ ...stats[2] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_DEF)\n    const mid = [ ...stats[3] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_MID)\n    const fwd = [ ...stats[4] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_FWD)\n\n    const top = [ ...gk.slice(0, MIN_GK), ...def.slice(0, MIN_DEF), ...mid.slice(0, MIN_MID), ...fwd.slice(0, MIN_FWD) ]\n    const rest = [ ...def.slice(MIN_DEF), ...mid.slice(MIN_MID), ...fwd.slice(MIN_FWD) ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a))\n\n    const xi = [ ...top, ...rest.slice(0, 4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n    const bench = [ ...gk.slice(MIN_GK), ...rest.slice(4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n\n    return (\n        <Widget\n            title=\"Team of the Season\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 1).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 2).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 3).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 4).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {bench.map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    'ppg': 'Points per Game',\n    'ppp': 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>{props.metric}</abbr>\n    )\n}\n\nexport default Metric","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getTopStatAggregate, getTotalBenchPoints, getTotalPoints, getTotalStarts, thousandsSeparator } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst PlayerStatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!history || !stats) {\n        return (\n            <Widget\n                title=\"Player Stats\"\n                loading={isLoadingHistory || isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getTopStatAggregate(allPlayers, 'red_cards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellow_cards')\n    const goals = getTopStatAggregate(allPlayers, 'goals_scored')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'clean_sheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goals_conceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'own_goals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penalties_missed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penalties_saved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'in_dreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = allPlayers.map(player => ({\n        player,\n        captaincies: player.data.filter(data => data.multiplier && data.multiplier > 1).length,\n    })).sort((a, b) => b.captaincies - a.captaincies)[0]\n\n    const topReturner = allPlayers\n        .map(player => ({\n            ...player,\n            data: [ ...player.data ].sort((a, b) => (b.points || 0) - (a.points || 0)),\n        }))\n        .sort((a, b) => (b.data[0].points || 0) - (a.data[0].points || 0))[0]\n\n    const topSeasonReturner = allPlayers.sort((a, b) => getTotalPoints(b) - getTotalPoints(a))[0]\n    const topBenchReturner = allPlayers.sort((a, b) => getTotalBenchPoints(b) - getTotalBenchPoints(a))[0]\n\n    return (\n        <Widget\n            title=\"Player Stats\"\n            loading={isLoadingHistory || isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Top GW Returner</span>\n                    <span>\n                        <Player\n                            id={topReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {topReturner.data[0].points} pts,\n                                        {' '}\n                                        <a href={`https://fantasy.premierleague.com/entry/${id}/event/${topReturner.data[0].event.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            GW {topReturner.data[0].event.id}\n                                        </a>\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top Season Returner</span>\n                    <span>\n                        <Player\n                            id={topSeasonReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {getTotalPoints(topSeasonReturner)} pts,\n                                        {' '}\n                                        {(getTotalPoints(topSeasonReturner) / getTotalStarts(topSeasonReturner)).toFixed(1)}\n                                        {' '}\n                                        <Metric metric=\"ppg\" />\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Most Points While Benched</span>\n                    <Player\n                        id={topBenchReturner.element.id}\n                        suffix={() => (\n                            <>\n                                {' '}\n                                (\n                                    {getTotalBenchPoints(topBenchReturner)} pts,\n                                    {' '}\n                                    {(getTotalBenchPoints(topBenchReturner) / topBenchReturner.data.filter(data => data.multiplier === 0).length).toFixed(1)}\n                                    {' '}\n                                    <Metric metric=\"ppg\" />\n                                )\n                            </>\n                        )}\n                        condensed\n                    />\n                </li>\n                {reds.red_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.player.element.id} suffix={`${reds.red_cards}`} condensed />\n                    </li>\n                )}\n                {yellows.yellow_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.player.element.id} suffix={`${yellows.yellow_cards}`} condensed />\n                    </li>\n                )}\n                {goals.goals_scored > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.player.element.id} suffix={`${goals.goals_scored}`} condensed />\n                    </li>\n                )}\n                {assists.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.player.element.id} suffix={`${assists.assists}`} condensed />\n                    </li>\n                )}\n                {bonus.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.player.element.id} suffix={`${bonus.bonus}`} condensed />\n                    </li>\n                )}\n                {bps.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player id={bps.player.element.id} suffix={`${bps.bps}`} condensed />\n                    </li>\n                )}\n                {cleanSheets.clean_sheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player id={cleanSheets.player.element.id} suffix={`${cleanSheets.clean_sheets}`} condensed />\n                    </li>\n                )}\n                {goalsConceded.goals_conceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player id={goalsConceded.player.element.id} suffix={`${goalsConceded.goals_conceded}`} condensed />\n                    </li>\n                )}\n                {saves.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.player.element.id} suffix={`${saves.saves}`} condensed />\n                    </li>\n                )}\n                {ownGoals.own_goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.player.element.id} suffix={`${ownGoals.own_goals}`} condensed />\n                    </li>\n                )}\n                {penaltiesMissed.penalties_missed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player id={penaltiesMissed.player.element.id} suffix={`${penaltiesMissed.penalties_missed}`} condensed />\n                    </li>\n                )}\n                {penaltiesSaved.penalties_saved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player id={penaltiesSaved.player.element.id} suffix={`${penaltiesSaved.penalties_saved}`} condensed />\n                    </li>\n                )}\n                {minutes.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player id={minutes.player.element.id} suffix={`${thousandsSeparator(minutes.minutes as number)}`} condensed />\n                    </li>\n                )}\n                {inDreamteam.in_dreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player id={inDreamteam.player.element.id} suffix={`${inDreamteam.in_dreamteam}`} condensed />\n                    </li>\n                )}\n                {mostCaptaincies.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player id={mostCaptaincies.player.element.id} suffix={`${mostCaptaincies.captaincies}`} condensed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst formatFormation = (formation: string) => sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!stats || !history) {\n        return (\n            <Widget\n                title=\"Formations\"\n                loading={isLoadingStats || isLoadingHistory}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object\n        .values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map((el, index) => selections\n                .map(player => (player[index] || 0) > 0)\n                .filter(val => !!val)\n                .length\n            )\n        })\n        .slice(1)\n\n    const data = Array\n        .from(Array(weeks).keys())\n        .map((el, index) => formations\n            .map(entries => entries[index])\n            .join('-')\n        )\n        .reduce((acc, formation, index) => {\n            if (acc[formation]) {\n                return {\n                    ...acc,\n                    [formation]: {\n                        count: acc[formation].count + 1,\n                        points: acc[formation].points + history.current[index].points,\n                    }\n                }\n            }\n\n            return {\n                ...acc,\n                [formation]: {\n                    count: 1,\n                    points: history.current[index].points,\n                }\n            }\n        }, {} as Record<string, FormationInformation>)\n\n    return (\n        <Widget\n            title=\"Formations\"\n            loading={isLoadingStats || isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {Object.entries(data).sort((a, b) => b[1].count - a[1].count).map(([ formation, information ]) => {\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{formatFormation(formation)}</span>\n                            <span>{information.count} ({thousandsSeparator(information.points)} pts, {(information.points / information.count).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default FormationWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst CaptainWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Captains\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const captains = Object\n        .values(stats)\n        .map(position => {\n            return position\n                .map(player => ({\n                    player,\n                    data: player.data.filter(data => (data.multiplier || 0) > 1),\n                }))\n                .filter(player => player.data.length > 0)\n        })\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => b.data.length - a.data.length)\n\n    return (\n        <Widget\n            title=\"Captains\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {captains.map(captain => {\n                    const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={captain.player.element.id} />\n                            <span>{captain.data.length} ({thousandsSeparator(sum)} pts, {(sum / captain.data.length).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default CaptainWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator } from '../../utilities'\n\nconst GameweekWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget\n                title=\"Gameweeks\"\n                loading={isLoadingHistory || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = [ ...history.current ].sort((a, b) => a.rank - b.rank)\n\n    const gws = [ ...history.current ].sort((a, b) => b.points - a.points)\n\n    const bestGW = gws[0]\n    const worstGW = gws[gws.length - 1]\n\n    return (\n        <Widget\n            title=\"Gameweeks\"\n            loading={isLoadingHistory || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <span>{meanValue(differences).toFixed(1)} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <span>{differences.filter(diff => diff >= 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <span>{differences.filter(diff => diff < 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(history.current.map(week => week.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Gameweek</span>\n                    <span>\n                        {bestGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bestGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {bestGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Gameweek</span>\n                    <span>\n                        {worstGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${worstGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {worstGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[0].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[0].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[0].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[sortedRanks.length - 1].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[sortedRanks.length - 1].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[sortedRanks.length - 1].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints, thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst PositionsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget\n                title=\"Positions\"\n                loading={isLoadingStats || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const positions: Record<string, number> = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <Widget\n            title=\"Positions\"\n            loading={isLoadingStats || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total</span>\n                    <span>{Object.values(positions).reduce((acc, curr) => acc + curr, 0)}</span>\n                </li>\n                {Object.entries(positions).map(([ elementType, elements ]) => {\n                    const totalPoints = stats[Number(elementType)].map(player => getTotalPoints(player))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                            <span>\n                                {elements}\n                                {' '}\n                                ({thousandsSeparator(sumNumbers(totalPoints))} pts, {meanValue(totalPoints).toFixed(1)} <Metric metric=\"ppp\" />)\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PositionsWidget","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry = (id: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchEntryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchEntrySuccess(data))\n}\n\nexport default entry.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { aggregateStats, getAllPlayers, thousandsSeparator } from '../../utilities'\nimport { sumNumbers } from '../../utilities/numbers';\n\nconst SeasonWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!stats || !history || !chips) {\n        return (\n            <Widget\n                title=\"Season\"\n                loading={isLoadingStats || isLoadingHistory}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = aggregateStats(allPlayers, 'red_cards').map(stat => stat['red_cards'] as number)\n    const yellows = aggregateStats(allPlayers, 'yellow_cards').map(stat => stat['yellow_cards'] as number)\n    const goals = aggregateStats(allPlayers, 'goals_scored').map(stat => stat['goals_scored'] as number)\n    const assists = aggregateStats(allPlayers, 'assists').map(stat => stat['assists'] as number)\n    const cleanSheets = aggregateStats(allPlayers, 'clean_sheets').map(stat => stat['clean_sheets'] as number)\n    const goalsConceded = aggregateStats(allPlayers, 'goals_conceded').map(stat => stat['goals_conceded'] as number)\n    const ownGoals = aggregateStats(allPlayers, 'own_goals').map(stat => stat['own_goals'] as number)\n    const saves = aggregateStats(allPlayers, 'saves').map(stat => stat['saves'] as number)\n    const minutes = aggregateStats(allPlayers, 'minutes').map(stat => stat['minutes'] as number)\n    const penaltiesMissed = aggregateStats(allPlayers, 'penalties_missed').map(stat => stat['penalties_missed'] as number)\n    const penaltiesSaved = aggregateStats(allPlayers, 'penalties_saved').map(stat => stat['penalties_saved'] as number)\n    const inDreamteam = aggregateStats(allPlayers, 'in_dreamteam').map(stat => stat['in_dreamteam'] as number)\n    const bps = aggregateStats(allPlayers, 'bps').map(stat => stat['bps'] as number)\n    const bonus = aggregateStats(allPlayers, 'bonus').map(stat => stat['bonus'] as number)\n\n    const totalTransfers = history.current.reduce((acc,event) => acc + event.event_transfers, 0)\n    const totalHits = history.current.reduce((acc,event) => acc + event.event_transfers_cost / 4, 0)\n    const totalBenched = history.current.reduce((acc,event) => acc + event.points_on_bench, 0)\n\n    const tc = allPlayers\n        .find(player => player.data.findIndex(data => data.multiplier === 3) !== -1)\n        ?.data\n        .find(data => data.multiplier === 3)\n\n    const bbWeek = Object.entries(chips).find(([ gw, chip ]) => chip === 'bboost')?.[0]\n\n    const bbPoints = bbWeek\n        ? sumNumbers(allPlayers\n            .filter(player => (player.data[Number(bbWeek) - 1].position || 0) > 11)\n            .map(player => player.data[Number(bbWeek) - 1].points || 0))\n        : null\n\n    return (\n        <Widget\n            title=\"Season\"\n            loading={isLoadingStats || isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <a href={`https://fantasy.premierleague.com/entry/${id}/transfers`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {totalTransfers}\n                        </a>\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>{totalHits} ({totalHits * -4} pts)</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <span>{totalBenched} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <span>{sumNumbers(reds)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <span>{sumNumbers(yellows)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <span>{sumNumbers(goals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <span>{sumNumbers(goalsConceded)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <span>{sumNumbers(assists)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <span>{sumNumbers(cleanSheets)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <span>{sumNumbers(ownGoals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <span>{sumNumbers(saves)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <span>{thousandsSeparator(sumNumbers(minutes))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <span>{sumNumbers(penaltiesMissed)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <span>{sumNumbers(penaltiesSaved)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <span>{sumNumbers(inDreamteam)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <span>{thousandsSeparator(sumNumbers(bps))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <span>{thousandsSeparator(sumNumbers(bonus))}</span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            {(tc.points || 0) / 3} pts\n                            (\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/event/${tc.event.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    GW {tc.event.id}\n                                </a>\n                            )\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            {bbPoints} pts\n                            (\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bbWeek}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    GW {bbWeek}\n                                </a>\n                            )\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalPoints, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\n\nconst SeasonWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget\n                title=\"Teams\"\n                loading={isLoadingStats || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = [ ...bootstrap.teams ].sort((a, b) => (counts[b.id] || 0) - (counts[a.id] || 0))\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget\n            title=\"Teams\"\n            loading={isLoadingStats || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {teams.map(team => {\n                    const players = allPlayers.filter(player => player.element.team === team.id)\n                    const points = sumNumbers(players.map(player => getTotalPoints(player)))\n\n                    const positions: Record<string, number> = bootstrap.element_types\n                        .reduce((acc, curr) => ({\n                            ...acc,\n                            [curr.id]: players.filter(player => player.element.element_type === curr.id).length,\n                        }), {})\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Team team={team} />\n                            <span>\n                                {counts[team.id] || 0}\n                                {' '}\n                                (\n                                    {Object.values(positions).join('-')},\n                                    {' '}\n                                    {points} pts, {players.length ? (points / players.length).toFixed(1) : 0}\n                                    {' '}\n                                    <Metric metric=\"ppp\" />\n                                )\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getNonBlankStreak } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst NonBlankStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Highest Non-Blank Streaks\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getNonBlankStreak(a)\n        const bStreak = getNonBlankStreak(b)\n\n        const aStreakLength = getNonBlankStreak(a)?.length || 0\n        const bStreakLength = getNonBlankStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget\n            title=\"Highest Non-Blank Streaks\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getNonBlankStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.start.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.start.id}\n                                    </a>\n                                    {' – '}\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.end.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.end.id}\n                                    </a>\n                                </div>\n                                <div>\n                                    ({streak.length} GWs, {streak.points} pts, {((streak.points || 0) / streak.length).toFixed(1)} <Metric metric=\"ppg\" />)\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default NonBlankStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getSelectionStreak } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst SelectionStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Highest Selection Streaks\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getSelectionStreak(a)\n        const bStreak = getSelectionStreak(b)\n\n        const aStreakLength = getSelectionStreak(a)?.length || 0\n        const bStreakLength = getSelectionStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget\n            title=\"Highest Selection Streaks\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getSelectionStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.start.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.start.id}\n                                    </a>\n                                    {' – '}\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.end.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.end.id}\n                                    </a>\n                                </div>\n                                <div>\n                                    (\n                                        {streak.length} GWs, {streak.points} pts, {((streak.points || 0) / streak.length).toFixed(1)} <Metric metric=\"ppg\" />\n                                    )\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SelectionStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getStartStreak } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst StartStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Highest Start Streaks\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getStartStreak(a)\n        const bStreak = getStartStreak(b)\n\n        const aStreakLength = getStartStreak(a)?.length || 0\n        const bStreakLength = getStartStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget\n            title=\"Highest Start Streaks\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getStartStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.start.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.start.id}\n                                    </a>\n                                    {' – '}\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.end.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.end.id}\n                                    </a>\n                                </div>\n                                <div>\n                                    (\n                                        {streak.length} GWs, {streak.points} pts, {((streak.points || 0) / streak.length).toFixed(1)} <Metric metric=\"ppg\" />\n                                    )\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default StartStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getBenchStreak } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst BenchStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Highest Bench Appearance Streaks\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => (getBenchStreak(b)?.length || 0) - (getBenchStreak(a)?.length || 0)).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget\n            title=\"Highest Bench Appearance Streaks\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getBenchStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.start.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.start.id}\n                                    </a>\n                                    {' – '}\n                                    <a href={`https://fantasy.premierleague.com/entry/${id}/event/${streak.end.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        GW {streak.end.id}\n                                    </a>\n                                </div>\n                                <div>\n                                    ({streak.length} GWs)\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default BenchStreakWidget","import React, { useState, useEffect, useRef } from 'react'\nimport { Bootstrap, StatData, Stats, History } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, thousandsShorthand, getTotalPoints } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport classNames from 'classnames'\nimport { fetchHistory } from '../../reducers/history'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { fetchEntry } from '../../reducers/entry'\nimport { Metric } from '../Metric'\nimport { SeasonWidget } from '../SeasonWidget';\nimport { TeamsWidget } from '../TeamsWidget'\nimport './Dashboard.scss'\nimport { NonBlankStreakWidget } from '../NonBlankStreakWidget'\nimport { SelectionStreakWidget } from '../SelectionStreakWidget'\nimport { StartStreakWidget } from '../StartStreakWidget';\nimport { BenchStreakWidget } from '../BenchStreakWidget';\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    points: getTotalPoints,\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderSelectionWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalSelections(b) - getTotalSelections(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalSelections(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderStartersWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalStarts(b) - getTotalStarts(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalStarts(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderBenchWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalBenched(b) - getTotalBenched(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalBenched(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderDifferenceWidget = (stats: Stats, top: boolean = false): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <ul className=\"widget__list\">\n            {top && topStarters.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.startsPercentage.toFixed(1)}% ({element.starts})</span>\n                </li>\n            ))}\n            {!top && topBenchwarmers.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.benchedPercentage.toFixed(1)}% ({element.benched})</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderOverallRankWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = [ ...data ].sort((a, b) => b.value - a.value)[0].value * 1.05\n\n    data = [ ...data ].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <div className=\"chart chart--reversed\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#ffffff\" fillOpacity=\"1\" />\n                    <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} domain={[1, max]} interval=\"preserveStartEnd\" tickCount={10} />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => name === 'max' ? [undefined, undefined] : [ thousandsSeparator(Number(value)), 'Rank' ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderPointsWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                    <YAxis interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderValueWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst Dashboard: React.FC = () => {\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n            dispatch(fetchEntry(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoadingBootstrap,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {entry.name}\n                                </a>\n                                <div className=\"small\">{entry.summary_overall_points} pts — Rank {thousandsSeparator(entry.summary_overall_rank)}</div>\n                            </h1>\n                            {id !== undefined && (\n                                <Button\n                                    onClick={() => setIsModalOpen(true)}\n                                    label=\"Change Team\"\n                                />\n                            )}\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <PlayerStatsWidget />\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    {isLoadingStats && (\n                        <div className=\"dashboard__loading\">\n                            <Spinner />\n                        </div>\n                    )}\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Points\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && Object.entries(stats).map(([ elementType, statData ]) => (\n                                <div key={elementType}>\n                                    <li className=\"dashboard__category\">\n                                        <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                                        <span>{statData.length}</span>\n                                    </li>\n                                    {statData\n                                        .filter(element => element.data.filter(pick => pick.multiplier !== null).length)\n                                        .sort((a, b) => sortings[(sort as OptionType).value](b) - sortings[(sort as OptionType).value](a))\n                                        .map(element => (\n                                            <li key={element.element.id} className=\"dashboard__item\">\n                                                <div className=\"dashboard__player\">\n                                                    <Player id={element.element.id} />\n                                                </div>\n                                                <div className=\"dashboard__stats\">\n                                                    {element.data.map(item => (\n                                                        <span\n                                                            key={item.event.id}\n                                                            className={classNames('dashboard__stat', {\n                                                                'dashboard__stat--benched': item.multiplier === 0,\n                                                                'dashboard__stat--triple': item.multiplier === 3,\n                                                                'dashboard__stat--started': item.multiplier,\n                                                            })}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div className=\"dashboard__totals\">\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalSelections(element)} ({(getTotalSelections(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalStarts(element)} ({(getTotalStarts(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalBenched(element)} ({(getTotalBenched(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        <span>\n                                                            {getTotalPoints(element)} ({getTotalStarts(element) > 0 ? (getTotalPoints(element) / getTotalStarts(element)).toFixed(1) : 0} <Metric metric=\"ppg\" />)\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <Widget\n                        title=\"Top Selections\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderSelectionWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderStartersWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Bench Players\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderBenchWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats, true)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Bench Players\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats)}\n                    </Widget>\n                    <TeamsWidget />\n                    <PositionsWidget />\n                    <HistoryWidget />\n                    <FormationWidget />\n                    <CaptainWidget />\n                    <GameweekWidget />\n                    <SeasonWidget />\n                    <NonBlankStreakWidget />\n                    <SelectionStreakWidget />\n                    <StartStreakWidget />\n                    <BenchStreakWidget />\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <Widget\n                        title=\"Overall Rank Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderOverallRankWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Gameweek Points\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderPointsWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Team Value Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderValueWidget(history, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport { Bootstrap, Stats, History, Entry } from '../types'\nimport history from './history'\n\nexport type RootState = {\n    bootstrap: {\n        loading: boolean\n        data: Bootstrap | undefined\n    }\n    stats: {\n        loading: boolean\n        data: Stats | undefined\n        chips: {\n            [key: number]: string\n        } | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n    }\n    history: {\n        loading: boolean\n        data: History | undefined\n    }\n    entry: {\n        loading: boolean\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}