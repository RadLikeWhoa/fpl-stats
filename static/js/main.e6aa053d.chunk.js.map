{"version":3,"sources":["serviceWorker.ts","reducers/loading.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Widget/Widget.tsx","components/Spinner/Spinner.tsx","utilities/settings.ts","utilities/arrays.ts","utilities/numbers.ts","utilities/stats.ts","utilities/events.ts","utilities/chips.ts","utilities/strings.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/useClickOutside.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/SiteLink/SiteLink.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","reducers/entry.ts","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/NonBlankStreakWidget/NonBlankStreakWidget.tsx","components/SelectionStreakWidget/SelectionStreakWidget.tsx","components/StartStreakWidget/StartStreakWidget.tsx","components/BenchStreakWidget/BenchStreakWidget.tsx","components/SwapIcon/SwapIcon.tsx","components/CaptainOpportunityWidget/CaptainOpportunityWidget.tsx","components/SelectionWidget/SelectionWidget.tsx","components/StarterWidget/StarterWidget.tsx","components/BenchWidget/BenchWidget.tsx","components/DifferenceWidget/DifferenceWidget.tsx","components/OverallRankWidget/OverallRankWidget.tsx","components/PointsWidget/PointsWidget.tsx","components/ValueWidget/ValueWidget.tsx","components/WrongCaptainWidget/WrongCaptainWidget.tsx","components/ContributionWidget/ContributionWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","loading","createSlice","name","initialState","reducers","startLoading","state","finishLoading","actions","bootstrap","data","undefined","fetchBootstrapStart","fetchBootstrapSuccess","action","payload","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","classNames","condensed","src","code","singular_name_short","alt","web_name","suffix","title","short_name","Widget","settings","children","Spinner","validateTeamId","value","number","Number","isNaN","isInteger","sort","series","comparator","direction","a","b","head","length","last","reduce","extractor","initialValue","acc","curr","thousandsSeparator","toString","replace","sumNumbers","round","precision","formatted","toFixed","test","split","getTotalSelections","statData","filter","pick","multiplier","getTotalStarts","getTotalBenched","getTotalPoints","points","getTotalBenchPoints","rawPoints","getAllPlayers","stats","Object","values","concat","aggregateStats","players","key","map","getTopStatAggregate","getStreak","comparison","ignoreBlanks","streaks","slice","max","Math","start","indexOf","streak","event","end","getSelectionStreak","gw","getStartStreak","getBenchStreak","getNonBlankStreak","getPastEvents","events","timestamp","Date","now","deadline_time_epoch","getShortName","pop","chips","bboost","freehit","wildcard","initialCaps","charAt","toUpperCase","toLowerCase","localStorage","getItem","meanStrategy","setId","setItem","removeItem","setMeanStrategy","Button","secondary","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","useMeanLabel","strategy","useMeanValue","average","sorted","mid","ceil","median","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","onSubmit","preventDefault","placeholder","onChange","buildDataStart","buildDataSuccess","fetchPicks","entry","fetch","encodeURIComponent","response","json","fetchEvent","fetchGameweekInformation","Promise","all","live","history","fetchHistoryStart","fetchHistorySuccess","HistoryWidget","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","total_points","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","TotsPlayer","TotsWidget","gk","def","fwd","top","rest","xi","bench","explanations","Metric","metric","SiteLink","url","href","rel","PlayerStatsWidget","allPlayers","reds","yellows","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","inDreamteam","bps","bonus","mostCaptaincies","topReturner","topBenchGWReturner","topSeasonReturner","topBenchReturner","weeks","idealCaptain","entries","Array","from","keys","index","week","returner","renderTopBenchGWReturner","FormationWidget","formations","selections","val","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","sum","GameweekWidget","differences","average_entry_score","sortedRanks","gws","bestGW","worstGW","bestGWRank","worstGWRank","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","fetchEntryStart","fetchEntrySuccess","getAggregateValues","stat","SeasonWidget","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","doubleDigitHauls","totalPlays","summary_overall_points","Team","TeamsWidget","counts","plural_name_short","NonBlankStreakWidget","streakers","aStreak","bStreak","aStreakLength","bStreakLength","streaker","SelectionStreakWidget","StartStreakWidget","BenchStreakWidget","SwapIcon","width","height","viewBox","fill","fillRule","d","transform","CaptainOpportunityWidget","improvements","improvement","captainData","topData","StarterWidget","BenchWidget","DifferenceWidget","benched","starts","benchedPercentage","startsPercentage","topStarters","percentageDiff","topBenchwarmers","OverallRankWidget","overall_rank","margin","bottom","left","right","dataKey","fillOpacity","stroke","reversed","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","ValueWidget","bank","WrongCaptainWidget","timesUsed","ContributionWidget","contributions","sortings","selection","alphabet","charCodeAt","sortOptions","Dashboard","isModalOpen","setIsModalOpen","setSort","isLoading","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","gameweeks","forEach","active_chip","entry_history","picks","item","buildData","fetchHistory","fetchEntry","stringify","summary_overall_rank","options","option","styles","container","provided","menu","zIndex","top_element_info","sorting","renderPlayerList","SelectionWidget","PointsWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e6aa053d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst loading = createSlice({\n    name: 'loading',\n    initialState: 0,\n    reducers: {\n        startLoading(state) {\n            state += 1\n\n            return state\n        },\n        finishLoading(state) {\n            state -= 1\n\n            return state\n        },\n    },\n})\n\nexport const { startLoading, finishLoading } = loading.actions\n\nexport default loading.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.data = undefined\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n    dispatch(startLoading())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n    dispatch(finishLoading())\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    condensed?: boolean\n    suffix?: string | (() => JSX.Element | null)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className={classNames('player', { 'player--condensed': props.condensed })}>\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}{typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport classNames from 'classnames'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Widget.scss'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n}\n\nconst Widget: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    return (\n        <div className={classNames('widget', {\n            'widget--cloaked': !id,\n        })}>\n            {props.title && (\n                <h2 className=\"widget__title\">{props.title}</h2>\n            )}\n            <div className=\"widget__content\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Widget","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","export const sort = <T>(series: T[], comparator: (element: T) => number, direction: 'asc' | 'desc' = 'desc'): T[] => {\n    return [ ...series ].sort((a, b) => (comparator(a) - comparator(b)) * (direction === 'desc' ? -1 : 1))\n}\n\nexport const head = <T>(series: T[]): T | null => {\n    return series.length ? series[0] : null\n}\n\nexport const last = <T>(series: T[]): T | null => {\n    return series.length ? series[series.length - 1] : null\n}\n\nexport const reduce = <T>(series: T[], extractor: (element: T) => number, initialValue: number = 0): number => {\n    return series.reduce((acc, curr) => acc + extractor(curr), initialValue)\n}","import { head, reduce, sort } from './arrays'\n\nexport const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${round(value / 1000000)}M` : value > 999 ? `${round(value / 1000, 0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return reduce(series, el => el)\n}\n\nexport const average = (series: number[]): number => {\n    return sumNumbers(series) / series.length\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series, el => el)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const round = (value: number, precision: number = 1): string => {\n    const formatted = value.toFixed(precision)\n\n    if (/\\.0+$/.test(formatted)) {\n        return head(formatted.split('.')) || ''\n    }\n\n    return formatted\n}","import { ElementStats, Event, StatData, Stats, StatDataGameweek } from '../types'\nimport { head, reduce, sort } from './arrays'\nimport { sumNumbers } from './numbers'\n\nexport type Streak = {\n    start: Event\n    end: Event\n    length: number\n    points?: number\n}\n\nexport type AggregateStat = {\n    player: StatData\n    value: number\n}\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.points || 0)\n}\n\nexport const getTotalBenchPoints = (statData: StatData): number => {\n    return reduce(statData.data, el => el.multiplier === 0 ? (el.rawPoints || 0) : 0)\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const aggregateStats = (players: StatData[], key: keyof ElementStats): AggregateStat[] => sort(players.map(player => ({\n    player,\n    value: player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n})), el => el.value)\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof ElementStats): AggregateStat | null => head(aggregateStats(players, key))\n\nconst getStreak = (statData: StatData, comparison: (gw: StatDataGameweek) => boolean, ignoreBlanks: boolean = false): Streak | null => {\n    const streaks = statData.data.reduce((acc, curr) => {\n        if (comparison(curr)) {\n            if (ignoreBlanks) {\n                return [ ...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1 ]\n            }\n\n            if (!acc.length || acc[acc.length - 1] === 0) {\n                return [ ...acc, 1 ]\n            }\n\n            return [ ...acc.slice(0, acc.length - 1), acc[acc.length - 1] + 1 ]\n        }\n\n        return [ ...acc, 0 ]\n    }, (ignoreBlanks ? [ 0 ] : []) as number[])\n\n    const max = Math.max(...streaks)\n\n    if (max === 0) {\n        return null\n    }\n\n    const start = statData.data[sumNumbers(streaks.slice(0, streaks.indexOf(max)).map(streak => streak > 0 ? streak : 1))].event\n    const end = statData.data[start.id - 2 + max].event\n\n    const points = sumNumbers(statData.data\n        .slice(start.id - 1, start.id - 1 + max)\n        .map(event => event.points || 0))\n\n    return {\n        start,\n        end,\n        length: max,\n        points,\n    }\n}\n\nexport const getSelectionStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => gw.multiplier !== null, true)\n\nexport const getStartStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => (gw.multiplier || 0) > 0, true)\n\nexport const getBenchStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => gw.multiplier === 0, true)\n\nexport const getNonBlankStreak = (statData: StatData): Streak | null => getStreak(statData, (gw) => (gw.rawPoints || 0) > 2)","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","export const initialCaps = (value: string): string => `${value.charAt(0).toUpperCase()}${value.toLowerCase().slice(1)}`","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n        meanStrategy: localStorage.getItem('meanStrategy') || 'average',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            } else {\n                localStorage.removeItem('id')\n            }\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n            localStorage.setItem('meanStrategy', state.meanStrategy)\n        }\n    },\n})\n\nexport const { setId, setMeanStrategy } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport classNames from 'classnames'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    secondary?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className={classNames('button', { 'button--secondary': props.secondary })}\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null)\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback()\n      }\n    }\n\n    if (element.current) {\n      document.addEventListener('click', listener)\n    } else {\n      document.removeEventListener('click', listener)\n    }\n\n    return () => document.removeEventListener('click', listener)\n  }, [element, callback])\n\n  return element\n}\n\nexport default useClickOutside\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { useClickOutside } from '../../hooks'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\nimport { finishLoading, startLoading } from './loading'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/event/${event}/live/`)}`)\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks, live: LiveEvent }> => {\n    const [ pick, live ] = await Promise.all([\n        fetchPicks(event, entry),\n        fetchEvent(event),\n    ])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n    dispatch(startLoading())\n\n    const gameweeks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    gameweeks.forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < gw.pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n    dispatch(finishLoading())\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n    dispatch(startLoading())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n    dispatch(finishLoading())\n}\n\nexport default history.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst HistoryWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return (\n            <Widget title=\"Historical Data\" />\n        )\n    }\n\n    const pastSeasonsByRank = sort(history.past, el => el.rank, 'asc')\n    const pastSeasonsByPoints = sort(history.past, el => el.total_points)\n\n    const bestRankedSeason = head(pastSeasonsByRank)\n    const worstRankedSeason = last(pastSeasonsByRank)\n\n    const bestPointSeason = head(pastSeasonsByPoints)\n    const worstPointSeason = last(pastSeasonsByPoints)\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget title=\"Historical Data\">\n            <ul className=\"widget__list\">\n                {bestRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Season Rank</span>\n                        <span>{thousandsSeparator(bestRankedSeason.rank)} ({bestRankedSeason.season_name})</span>\n                    </li>\n                )}\n                {bestPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Points Finish</span>\n                        <span>{thousandsSeparator(bestPointSeason.total_points)} ({bestPointSeason.season_name})</span>\n                    </li>\n                )}\n                {worstRankedSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Season Rank</span>\n                        <span>{thousandsSeparator(worstRankedSeason.rank)} ({worstRankedSeason.season_name})</span>\n                    </li>\n                )}\n                {worstPointSeason && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Points Finish</span>\n                        <span>{thousandsSeparator(worstPointSeason.total_points)} ({worstPointSeason.season_name})</span>\n                    </li>\n                )}\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <span>{thousandsSeparator(Number(round(meanValue(pastSeasonsByRank.map((season) => season.rank)), 0)))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <span>{thousandsSeparator(Number(round(meanValue(pastSeasonsByPoints.map((season) => season.total_points)), 0)))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <span>{top1k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <span>{top10k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <span>{top100k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <span>{top1m}</span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">\n                    {props.points}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints, sort } from '../../utilities'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nconst TotsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Team of the Season\" />\n        )\n    }\n\n    const gk = sort(stats[1], el => getTotalPoints(el)).slice(0, MAX_GK)\n    const def = sort(stats[2], el => getTotalPoints(el)).slice(0, MAX_DEF)\n    const mid = sort(stats[3], el => getTotalPoints(el)).slice(0, MAX_MID)\n    const fwd = sort(stats[4], el => getTotalPoints(el)).slice(0, MAX_FWD)\n\n    const top = gk.slice(0, MIN_GK).concat(def.slice(0, MIN_DEF)).concat(mid.slice(0, MIN_MID)).concat(fwd.slice(0, MIN_FWD))\n    const rest = sort(def.slice(MIN_DEF).concat(mid.slice(MIN_MID)).concat(fwd.slice(MIN_FWD)), el => getTotalPoints(el))\n\n    const xi = sort(top.concat(rest.slice(0, 4)), el => el.element.element_type, 'asc')\n    const bench = sort(gk.slice(MIN_GK).concat(rest.slice(4)), el => el.element.element_type, 'asc')\n\n    return (\n        <Widget title=\"Team of the Season\">\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 1).map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 2).map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 3).map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 4).map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {bench.map(player => (\n                        <TotsPlayer\n                            key={player.element.id}\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    'ppg': 'Points per Game',\n    'ppp': 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>{props.metric}</abbr>\n    )\n}\n\nexport default Metric","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\n\ntype Props = {\n    label?: string\n    event?: number\n    target?: 'transfers'\n}\n\nconst SiteLink: React.FC<Props> = (props: Props) => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const baseUrl = `https://fantasy.premierleague.com/entry/${id}/`\n    let url = baseUrl\n\n    if (props.event) {\n        url = `${url}event/${props.event}/`\n    } else if (props.target) {\n        url = `${url}${props.target}/`\n    }\n\n    return (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.event ? `GW ${props.event}` : props.label ? props.label : url}\n        </a>\n    )\n}\n\nexport default SiteLink","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { StatData } from '../../types'\nimport { getAllPlayers, getTopStatAggregate, getTotalBenchPoints, getTotalPoints, getTotalStarts, thousandsSeparator, round, sort, head } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst renderTopBenchGWReturner = (returner: StatData): JSX.Element | null => {\n    const week = head(returner.data)\n\n    if (!week || week.multiplier !== 0) {\n        return null\n    }\n\n    return (\n        <li className=\"widget__list__item\">\n            <span>Top GW Bench Returner</span>\n            <span>\n                <Player\n                    id={returner.element.id}\n                    suffix={() => (\n                        <>\n                            {' '}\n                            (\n                                {week.rawPoints} pts,\n                                {' '}\n                                <SiteLink event={week.event.id} />\n                            )\n                        </>\n                    )}\n                    condensed\n                />\n            </span>\n        </li>\n    )\n}\n\nconst PlayerStatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!history || !stats) {\n        return (\n            <Widget title=\"Player Stats\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getTopStatAggregate(allPlayers, 'red_cards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellow_cards')\n    const goals = getTopStatAggregate(allPlayers, 'goals_scored')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'clean_sheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goals_conceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'own_goals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penalties_missed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penalties_saved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'in_dreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = head(sort(\n        allPlayers.map(player => ({\n            player,\n            value: player.data.filter(data => data.multiplier && data.multiplier > 1).length,\n        })),\n        el => el.value\n    ))\n\n    const topReturner = head(sort(\n        allPlayers\n            .map(player => ({\n                ...player,\n                data: sort([ ...player.data ], el => el.points || 0),\n            })),\n        el => head(el.data)?.points || 0\n    ))\n\n    const topBenchGWReturner = head(sort(\n        allPlayers\n            .map(player => ({\n                ...player,\n                data: sort(player.data.filter(data => data.multiplier === 0), el => el.rawPoints || 0),\n            }))\n            .filter(player => player.data.length),\n        el => head(el.data)?.rawPoints || 0\n    ))\n\n    const topSeasonReturner = head(sort(allPlayers, el => getTotalPoints(el)))\n    const topBenchReturner = head(sort(allPlayers, el => getTotalBenchPoints(el)))\n\n    const weeks = history.current.length\n\n    const idealCaptain = head(sort(\n        Object.entries(Array.from(Array(weeks).keys())\n            .map((el, index) => head(sort(allPlayers, el => el.data[index].rawPoints || 0)))\n            .reduce((acc, curr) => curr ? ({\n                ...acc,\n                [curr.element.id]: acc[curr.element.id] ? acc[curr.element.id] + 1 : 1,\n            }) : acc, {} as Record<number, number>)),\n        el => el[1]\n    ))\n\n    return (\n        <Widget title=\"Player Stats\">\n            <ul className=\"widget__list\">\n                {topReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top GW Returner</span>\n                        <span>\n                            <Player\n                                id={topReturner.element.id}\n                                suffix={() => {\n                                    const week = head(topReturner.data)\n\n                                    if (!week) {\n                                        return null\n                                    }\n\n                                    return (\n                                        <>\n                                            {' '}\n                                            (\n                                                {week.points} pts,\n                                                {' '}\n                                                <SiteLink event={week.event.id} />\n                                            )\n                                        </>\n                                    )\n                                }}\n                                condensed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topSeasonReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Season Returner</span>\n                        <span>\n                            <Player\n                                id={topSeasonReturner.element.id}\n                                suffix={() => (\n                                    <>\n                                        {' '}\n                                        (\n                                            {getTotalPoints(topSeasonReturner)} pts,\n                                            {' '}\n                                            {round(getTotalPoints(topSeasonReturner) / getTotalStarts(topSeasonReturner))}\n                                            {' '}\n                                            <Metric metric=\"ppg\" />\n                                        )\n                                    </>\n                                )}\n                                condensed\n                            />\n                        </span>\n                    </li>\n                )}\n                {topBenchGWReturner && renderTopBenchGWReturner(topBenchGWReturner)}\n                {topBenchReturner && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Points While Benched</span>\n                        <Player\n                            id={topBenchReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {getTotalBenchPoints(topBenchReturner)} pts,\n                                        {' '}\n                                        {round(getTotalBenchPoints(topBenchReturner) / topBenchReturner.data.filter(data => data.multiplier === 0).length)}\n                                        {' '}\n                                        <Metric metric=\"ppg\" />\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </li>\n                )}\n                {reds && reds.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.player.element.id} suffix={`${reds.value}`} condensed />\n                    </li>\n                )}\n                {yellows && yellows.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.player.element.id} suffix={`${yellows.value}`} condensed />\n                    </li>\n                )}\n                {goals && goals.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.player.element.id} suffix={`${goals.value}`} condensed />\n                    </li>\n                )}\n                {assists && assists.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.player.element.id} suffix={`${assists.value}`} condensed />\n                    </li>\n                )}\n                {bonus && bonus.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.player.element.id} suffix={`${bonus.value}`} condensed />\n                    </li>\n                )}\n                {bps && bps.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player id={bps.player.element.id} suffix={`${bps.value}`} condensed />\n                    </li>\n                )}\n                {cleanSheets && cleanSheets.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player id={cleanSheets.player.element.id} suffix={`${cleanSheets.value}`} condensed />\n                    </li>\n                )}\n                {goalsConceded && goalsConceded.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player id={goalsConceded.player.element.id} suffix={`${goalsConceded.value}`} condensed />\n                    </li>\n                )}\n                {saves && saves.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.player.element.id} suffix={`${saves.value}`} condensed />\n                    </li>\n                )}\n                {ownGoals && ownGoals.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.player.element.id} suffix={`${ownGoals.value}`} condensed />\n                    </li>\n                )}\n                {penaltiesMissed && penaltiesMissed.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player id={penaltiesMissed.player.element.id} suffix={`${penaltiesMissed.value}`} condensed />\n                    </li>\n                )}\n                {penaltiesSaved && penaltiesSaved.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player id={penaltiesSaved.player.element.id} suffix={`${penaltiesSaved.value}`} condensed />\n                    </li>\n                )}\n                {minutes && minutes.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player id={minutes.player.element.id} suffix={`${thousandsSeparator(minutes.value as number)}`} condensed />\n                    </li>\n                )}\n                {inDreamteam && inDreamteam.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player id={inDreamteam.player.element.id} suffix={`${inDreamteam.value}`} condensed />\n                    </li>\n                )}\n                {mostCaptaincies && mostCaptaincies.value > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player id={mostCaptaincies.player.element.id} suffix={`${mostCaptaincies.value}`} condensed />\n                    </li>\n                )}\n                {idealCaptain && (\n                    <li className=\"widget__list__item\">\n                        <span>Ideal Captain</span>\n                        <Player id={Number(idealCaptain[0])} suffix={`${idealCaptain[1]}`} condensed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers, round, sort } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst formatFormation = (formation: string) => sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return (\n            <Widget title=\"Formations\" />\n        )\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object\n        .values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map((el, index) => selections\n                .map(player => (player[index] || 0) > 0)\n                .filter(val => !!val)\n                .length\n            )\n        })\n        .slice(1)\n\n    const data = Array\n        .from(Array(weeks).keys())\n        .map((el, index) => formations\n            .map(entries => entries[index])\n            .join('-')\n        )\n        .reduce((acc, formation, index) => {\n            if (acc[formation]) {\n                return {\n                    ...acc,\n                    [formation]: {\n                        count: acc[formation].count + 1,\n                        points: acc[formation].points + history.current[index].points,\n                    }\n                }\n            }\n\n            return {\n                ...acc,\n                [formation]: {\n                    count: 1,\n                    points: history.current[index].points,\n                }\n            }\n        }, {} as Record<string, FormationInformation>)\n\n    return (\n        <Widget title=\"Formations\">\n            <ul className=\"widget__list\">\n                {sort(Object.entries(data), el => el[1].count).map(([ formation, information ]) => {\n                    return (\n                        <li className=\"widget__list__item\" key={formation}>\n                            <span>{formatFormation(formation)}</span>\n                            <span>{information.count} ({thousandsSeparator(information.points)} pts, {round(information.points / information.count)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default FormationWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst CaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Captains\" />\n        )\n    }\n\n    const captains = sort(\n        Object\n            .values(stats)\n            .map(position => {\n                return position\n                    .map(player => ({\n                        player,\n                        data: player.data.filter(data => (data.multiplier || 0) > 1),\n                    }))\n                    .filter(player => player.data.length > 0)\n            })\n            .reduce((acc, curr) => acc.concat(curr), []),\n        el => el.data.length\n    )\n\n    return (\n        <Widget title=\"Captains\">\n            <ul className=\"widget__list\">\n                {captains.map(captain => {\n                    const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                    return (\n                        <li className=\"widget__list__item\" key={captain.player.element.id}>\n                            <Player id={captain.player.element.id} />\n                            <span>{captain.data.length} ({thousandsSeparator(sum)} pts, {round(sum / captain.data.length)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default CaptainWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { head, last, round, sort, thousandsSeparator } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\n\nconst GameweekWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget title=\"Gameweeks\" />\n        )\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = sort(history.current, el => el.rank, 'asc')\n\n    const gws = sort(history.current, el => el.points)\n\n    const bestGW = head(gws)\n    const worstGW = last(gws)\n\n    const bestGWRank = head(sortedRanks)\n    const worstGWRank = last(sortedRanks)\n\n    return (\n        <Widget title=\"Gameweeks\">\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <span>{round(meanValue(differences))} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <span>{differences.filter(diff => diff >= 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <span>{differences.filter(diff => diff < 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <span>{thousandsSeparator(Number(round(meanValue(history.current.map(week => week.rank)))))}</span>\n                </li>\n                {bestGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Best Gameweek</span>\n                        <span>\n                            {bestGW.points} pts\n                            {' '}\n                            (\n                                <SiteLink event={bestGW.event} />\n                            )\n                        </span>\n                    </li>\n                )}\n                {worstGW && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst Gameweek</span>\n                        <span>\n                            {worstGW.points} pts\n                            {' '}\n                            (\n                                <SiteLink event={worstGW.event} />\n                            )\n                        </span>\n                    </li>\n                )}\n                {bestGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Best GW Rank</span>\n                        <span>\n                            {thousandsSeparator(bestGWRank.rank)}\n                            {' '}\n                            (\n                                <SiteLink event={bestGWRank.event} />\n                            )\n                        </span>\n                    </li>\n                )}\n                {worstGWRank && (\n                    <li className=\"widget__list__item\">\n                        <span>Worst GW Rank</span>\n                        <span>\n                            {thousandsSeparator(worstGWRank.rank)}\n                            {' '}\n                            (\n                                <SiteLink event={worstGWRank.event} />\n                            )\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints, thousandsSeparator, sumNumbers, round, reduce } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst PositionsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget title=\"Positions\" />\n        )\n    }\n\n    const positions: Record<string, number> = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <Widget title=\"Positions\">\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total</span>\n                    <span>{reduce(Object.values(positions), el => el)}</span>\n                </li>\n                {Object.entries(positions).map(([ elementType, elements ]) => {\n                    const totalPoints = stats[Number(elementType)].map(player => getTotalPoints(player))\n\n                    return (\n                        <li className=\"widget__list__item\" key={elementType}>\n                            <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                            <span>\n                                {elements}\n                                {' '}\n                                ({thousandsSeparator(sumNumbers(totalPoints))} pts, {round(meanValue(totalPoints))} <Metric metric=\"ppp\" />)\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PositionsWidget","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\nimport { finishLoading, startLoading } from './loading'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry = (id: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchEntryStart())\n    dispatch(startLoading())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchEntrySuccess(data))\n    dispatch(finishLoading())\n}\n\nexport default entry.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { aggregateStats, getAllPlayers, head, thousandsSeparator, sumNumbers, reduce, round } from '../../utilities'\nimport { SiteLink } from '../SiteLink'\nimport { ElementStats, StatData } from '../../types'\n\nconst getAggregateValues = (players: StatData[], key: keyof ElementStats): number[] => aggregateStats(players, key).map(stat => stat.value)\n\nconst SeasonWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !history || !chips || !entry) {\n        return (\n            <Widget title=\"Season\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getAggregateValues(allPlayers, 'red_cards')\n    const yellows = getAggregateValues(allPlayers, 'yellow_cards')\n    const goals = getAggregateValues(allPlayers, 'goals_scored')\n    const assists = getAggregateValues(allPlayers, 'assists')\n    const cleanSheets = getAggregateValues(allPlayers, 'clean_sheets')\n    const goalsConceded = getAggregateValues(allPlayers, 'goals_conceded')\n    const ownGoals = getAggregateValues(allPlayers, 'own_goals')\n    const saves = getAggregateValues(allPlayers, 'saves')\n    const minutes = getAggregateValues(allPlayers, 'minutes')\n    const penaltiesMissed = getAggregateValues(allPlayers, 'penalties_missed')\n    const penaltiesSaved = getAggregateValues(allPlayers, 'penalties_saved')\n    const inDreamteam = getAggregateValues(allPlayers, 'in_dreamteam')\n    const bps = getAggregateValues(allPlayers, 'bps')\n    const bonus = getAggregateValues(allPlayers, 'bonus')\n\n    const totalTransfers = reduce(history.current, el => el.event_transfers)\n    const totalHits = reduce(history.current, el => el.event_transfers_cost / 4)\n    const totalBenched = reduce(history.current, el => el.points_on_bench)\n\n    const tc = allPlayers\n        .find(player => player.data.findIndex(data => data.multiplier === 3) !== -1)\n        ?.data\n        .find(data => data.multiplier === 3)\n\n    const bbWeek = head(Object.entries(chips).find(([ gw, chip ]) => chip === 'bboost') || [])\n\n    const bbPoints = bbWeek\n        ? sumNumbers(allPlayers\n            .filter(player => (player.data[Number(bbWeek) - 1].position || 0) > 11)\n            .map(player => player.data[Number(bbWeek) - 1].points || 0))\n        : null\n\n    const doubleDigitHauls = reduce(allPlayers.map(player => player.data.filter(data => (data.rawPoints || 0) > 9).length), el => el)\n    const totalPlays = reduce(allPlayers.map(player => player.data.filter(data => data.multiplier !== null).length), el => el)\n\n    return (\n        <Widget title=\"Season\">\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <SiteLink target=\"transfers\" label={`${totalTransfers}`} />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>{totalHits} ({totalHits * -4} pts{entry.summary_overall_points > 0 ? `, ${round(totalHits * 4 / entry.summary_overall_points * 100)}%)` : ')'}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <span>{totalBenched} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Double Digit Hauls</span>\n                    <span>{doubleDigitHauls} {totalPlays > 0 && `(${round(doubleDigitHauls / totalPlays)}%)`}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <span>{sumNumbers(reds)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <span>{sumNumbers(yellows)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <span>{sumNumbers(goals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <span>{sumNumbers(goalsConceded)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <span>{sumNumbers(assists)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <span>{sumNumbers(cleanSheets)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <span>{sumNumbers(ownGoals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <span>{sumNumbers(saves)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <span>{thousandsSeparator(sumNumbers(minutes))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <span>{sumNumbers(penaltiesMissed)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <span>{sumNumbers(penaltiesSaved)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <span>{sumNumbers(inDreamteam)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <span>{thousandsSeparator(sumNumbers(bps))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <span>{thousandsSeparator(sumNumbers(bonus))}</span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            {(tc.points || 0) / 3} pts\n                            (\n                                <SiteLink event={tc.event.id} />\n                            )\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            {bbPoints} pts\n                            (\n                                <SiteLink event={Number(bbWeek)} />\n                            )\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalPoints, initialCaps, round, sort, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\nimport './TeamsWidget.scss'\n\nconst TeamsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget title=\"Teams\" />\n        )\n    }\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = sort(bootstrap.teams, el => counts[el.id] || 0)\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget title=\"Teams\">\n            <ul className=\"widget__list\">\n                {teams.map(team => {\n                    const players = allPlayers.filter(player => player.element.team === team.id)\n                    const points = sumNumbers(players.map(player => getTotalPoints(player)))\n\n                    const positions: Record<string, number> = bootstrap.element_types\n                        .reduce((acc, curr) => ({\n                            ...acc,\n                            [curr.id]: players.filter(player => player.element.element_type === curr.id).length,\n                        }), {})\n\n                    return (\n                        <li className=\"widget__list__item\" key={team.id}>\n                            <Team team={team} />\n                            <div>\n                                <div>\n                                    <b>{counts[team.id] || 0}</b>\n                                    {' '}\n                                    (\n                                        {points} pts, {players.length ? round(points / players.length) : 0}\n                                        {' '}\n                                        <Metric metric=\"ppp\" />\n                                    )\n                                </div>\n                                <div>\n                                    {Object.entries(positions).filter(([ type, count ]) => count > 0).map(([ type, count ]) => (\n                                        <span className=\"teams-widget__position\" key={type}>\n                                            {count} {initialCaps(bootstrap.element_types.find(el => el.id === Number(type))?.plural_name_short || '')}\n                                        </span>\n                                    ))}\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default TeamsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getNonBlankStreak, round } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst NonBlankStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Highest Non-Blank Streaks\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getNonBlankStreak(a)\n        const bStreak = getNonBlankStreak(b)\n\n        const aStreakLength = getNonBlankStreak(a)?.length || 0\n        const bStreakLength = getNonBlankStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget title=\"Highest Non-Blank Streaks\">\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getNonBlankStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\" key={streaker.element.id}>\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <SiteLink event={streak.start.id} />\n                                    {' – '}\n                                    <SiteLink event={streak.end.id} />\n                                </div>\n                                <div>\n                                    ({streak.length} GWs, {streak.points} pts, {round((streak.points || 0) / streak.length)} <Metric metric=\"ppg\" />)\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default NonBlankStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getSelectionStreak, round } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst SelectionStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Highest Selection Streaks\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getSelectionStreak(a)\n        const bStreak = getSelectionStreak(b)\n\n        const aStreakLength = getSelectionStreak(a)?.length || 0\n        const bStreakLength = getSelectionStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget title=\"Highest Selection Streaks\">\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getSelectionStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\" key={streaker.element.id}>\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <SiteLink event={streak.start.id} />\n                                    {' – '}\n                                    <SiteLink event={streak.end.id} />\n                                </div>\n                                <div>\n                                    (\n                                        {streak.length} GWs, {streak.points} pts, {round((streak.points || 0) / streak.length)} <Metric metric=\"ppg\" />\n                                    )\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SelectionStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getStartStreak, round } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst StartStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Highest Start Streaks\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = allPlayers.sort((a, b) => {\n        const aStreak = getStartStreak(a)\n        const bStreak = getStartStreak(b)\n\n        const aStreakLength = getStartStreak(a)?.length || 0\n        const bStreakLength = getStartStreak(b)?.length || 0\n\n        if (bStreakLength - aStreakLength === 0) {\n            return (bStreak?.points || 0) - (aStreak?.points || 0)\n        }\n\n        return bStreakLength - aStreakLength\n    }).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget title=\"Highest Start Streaks\">\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getStartStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\" key={streaker.element.id}>\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <SiteLink event={streak.start.id} />\n                                    {' – '}\n                                    <SiteLink event={streak.end.id} />\n                                </div>\n                                <div>\n                                    (\n                                        {streak.length} GWs, {streak.points} pts, {round((streak.points || 0) / streak.length)} <Metric metric=\"ppg\" />\n                                    )\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default StartStreakWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getBenchStreak, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { SiteLink } from '../SiteLink'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst BenchStreakWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Highest Bench Appearance Streaks\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const streakers = sort(allPlayers, el => getBenchStreak(el)?.length || 0).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget title=\"Highest Bench Appearance Streaks\">\n            <ul className=\"widget__list\">\n                {streakers.map(streaker => {\n                    const streak = getBenchStreak(streaker)\n\n                    if (!streak) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\" key={streaker.element.id}>\n                            <Player id={streaker.element.id} />\n                            <div>\n                                <div>\n                                    <SiteLink event={streak.start.id} />\n                                    {' – '}\n                                    <SiteLink event={streak.end.id} />\n                                </div>\n                                <div>\n                                    ({streak.length} GWs)\n                                </div>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default BenchStreakWidget","import React from 'react'\n\nconst SwapIcon: React.FC = () => {\n    return (\n        <svg width=\"32\" height=\"20\" viewBox=\"0 0 32 20\" fill=\"#94968C\" className=\"swap-icon\">\n            <path fillRule=\"evenodd\" d=\"M53.6485838,32.0017628 L50.0028805,32.002243 L44.1795487,32.002243 L42.8449352,32.002243 C42.2448392,32.002243 41.6106577,32.2648846 41.1853096,32.6869358 C40.7782045,33.0941023 40.4723956,33.7595891 40.5007201,34.3468117 C40.5285646,34.9508394 40.7258761,35.5807952 41.1853096,36.0066875 C41.6447432,36.4287387 42.2069131,36.6913803 42.8449352,36.6913803 L46.4978397,36.6913803 L47.9851176,36.6913803 L45.4666347,39.209763 C43.6044167,41.0722619 41.7383581,42.9386019 39.8780605,44.7991802 C38.2707633,46.4067198 36.6673068,48.0104182 35.0585694,49.6193983 C34.2803649,50.3977202 33.4867979,51.1722009 32.7181949,51.9601258 L32.6845895,51.9937362 C32.2568411,52.4215492 32,53.0481439 32,53.6536121 C32,54.2317118 32.2530005,54.9140038 32.6845895,55.313488 C33.1305809,55.7206545 33.7157945,56.0265096 34.3442151,55.9981808 C34.9721555,55.9703321 35.5592895,55.7600268 36.0038406,55.313488 L37.931349,53.3856888 L42.5261642,48.7906607 L48.1147384,43.2007634 C49.1805089,42.1348321 50.2462794,41.0689008 51.3115699,40.0034497 L51.3115699,43.8239971 L51.3115699,45.1597723 C51.3115699,45.7599588 51.5741719,46.3937558 51.9961594,46.8196481 C52.4032645,47.2263345 53.068651,47.5321896 53.6557849,47.5038608 C54.2597216,47.4760121 54.8895823,47.279151 55.3154105,46.8196481 C55.7316371,46.3582247 56,45.7954898 56,45.1597723 L56,41.5058366 L56,35.6821067 L56,34.3468117 C56,34.0073461 55.9183869,33.6846859 55.781085,33.3893941 C55.6649064,33.1209907 55.5084013,32.8717932 55.3082093,32.6864556 C54.8617379,32.2792891 54.2770043,31.9739142 53.6485838,32.0017628 Z\" transform=\"rotate(45 71.042 -6.799)\"></path>\n        </svg>\n    )\n}\n\nexport default SwapIcon","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, head, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { SwapIcon } from '../SwapIcon'\nimport { SiteLink } from '../SiteLink'\nimport './CaptainOpportunityWidget.scss'\n\nconst CaptainOpportunityWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return (\n            <Widget title=\"Missed Captaincies\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys()).map((el, index) => ({\n        top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n        captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n    }))\n\n    return (\n        <Widget title=\"Missed Captaincies\">\n            <ul className=\"widget__list\">\n                {improvements.map((improvement, index) => {\n                    if (!improvement.captain || !improvement.top) {\n                        return null\n                    }\n\n                    const captainData = improvement.captain.data[index]\n                    const topData = improvement.top.data[index]\n\n                    if (captainData.rawPoints === topData.rawPoints) {\n                        return null\n                    }\n\n                    return (\n                        <li className=\"widget__list__item\" key={captainData.event.id}>\n                            <div>\n                                <Player id={improvement.captain.element.id} suffix=\"C\" />\n                                <Player id={improvement.top.element.id} />\n                            </div>\n                            <div className=\"captain-opportunity-widget__swap-info\">\n                                {(captainData.rawPoints || 0) * 2} <SwapIcon /> {(topData.rawPoints || 0) * 2}\n                                {' '}\n                                (\n                                    <SiteLink event={captainData.event.id} />\n                                )\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default CaptainOpportunityWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalSelections, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst MAX_ITEMS = 10\n\nconst TeamsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Top Selections\" />\n        )\n    }\n\n    const elements = sort(getAllPlayers(stats), el => getTotalSelections(el))\n\n    return (\n        <Widget title=\"Top Selections\">\n            <ul className=\"widget__list\">\n                {elements.slice(0, MAX_ITEMS).map(element => (\n                    <li className=\"widget__list__item\" key={element.element.id}>\n                        <Player id={element.element.id} />\n                        {getTotalSelections(element)}\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default TeamsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalStarts, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst MAX_ITEMS = 10\n\nconst StarterWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Top Starters\" />\n        )\n    }\n\n    const elements = sort(getAllPlayers(stats), el => getTotalStarts(el))\n\n    return (\n        <Widget title=\"Top Starters\">\n            <ul className=\"widget__list\">\n                {elements.slice(0, MAX_ITEMS).map(element => (\n                    <li className=\"widget__list__item\" key={element.element.id}>\n                        <Player id={element.element.id} />\n                        {getTotalStarts(element)}\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default StarterWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalBenched, sort } from '../../utilities'\nimport { Player } from '../Player'\n\nconst MAX_ITEMS = 10\n\nconst BenchWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title=\"Top Bench Players\" />\n        )\n    }\n\n    const elements = sort(getAllPlayers(stats), el => getTotalBenched(el))\n\n    return (\n        <Widget title=\"Top Bench Players\">\n            <ul className=\"widget__list\">\n                {elements.slice(0, MAX_ITEMS).map(element => (\n                    <li className=\"widget__list__item\" key={element.element.id}>\n                        <Player id={element.element.id} />\n                        {getTotalBenched(element)}\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default BenchWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalBenched, getTotalSelections, getTotalStarts, round } from '../../utilities'\nimport { Player } from '../Player'\n\ntype Props = {\n    title: string\n    top?: boolean\n}\n\nconst MAX_ITEMS = 10\n\nconst DifferenceWidget: React.FC<Props> = (props: Props) => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    if (!stats) {\n        return (\n            <Widget title={props.title} />\n        )\n    }\n\n    const elements = getAllPlayers(stats)\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <Widget title={props.title}>\n            <ul className=\"widget__list\">\n                {props.top && topStarters.slice(0, MAX_ITEMS).map(element => (\n                    <li className=\"widget__list__item\" key={element.element.id}>\n                        <Player id={element.element.id} />\n                        <span>{round(element.startsPercentage)}% ({element.starts})</span>\n                    </li>\n                ))}\n                {!props.top && topBenchwarmers.slice(0, MAX_ITEMS).map(element => (\n                    <li className=\"widget__list__item\" key={element.element.id}>\n                        <Player id={element.element.id} />\n                        <span>{round(element.benchedPercentage)}% ({element.benched})</span>\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default DifferenceWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, head, sort, thousandsSeparator, thousandsShorthand } from '../../utilities'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget title=\"Overall Rank Evolution\" />\n        )\n    }\n\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = (head(sort([ ...data ], el => el.value))?.value || 0) * 1.05\n\n    data = [ ...data ].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <Widget title=\"Overall Rank Evolution\">\n            <div className=\"chart chart--reversed\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#ffffff\" fillOpacity=\"1\" />\n                        <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} domain={[1, max]} interval=\"preserveStartEnd\" tickCount={10} />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip isAnimationActive={false} formatter={(value, name) => name === 'max' ? [undefined, undefined] : [ thousandsSeparator(Number(value)), 'Rank' ]} separator=\": \" />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst OverallRankWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget title=\"Gameweek Points\" />\n        )\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <Widget title=\"Gameweek Points\">\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                        <YAxis interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, initialCaps(name) ]} separator=\": \" />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default OverallRankWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { getShortName, initialCaps } from '../../utilities'\n\nconst ValueWidget: React.FC = () => {\n    const history = useSelector((state: RootState) => state.history.data)\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget title=\"Team Value Evolution\" />\n        )\n    }\n\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <Widget title=\"Team Value Evolution\">\n            <div className=\"chart\">\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                        <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                        <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} interval=\"preserveStartEnd\" />\n                        <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                        <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                        <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, initialCaps(name) ]} separator=\": \" />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        </Widget>\n    )\n}\n\nexport default ValueWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, head, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst WrongCaptainWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n\n    const history = useSelector((state: RootState) => state.history.data)\n\n    if (!stats || !history) {\n        return (\n            <Widget title=\"Wrong Captains\" />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n    const weeks = history.current.length\n\n    const improvements = Array.from(Array(weeks).keys())\n        .map((el, index) => ({\n            top: head(sort(allPlayers, el => el.data[index].rawPoints || 0)),\n            captain: allPlayers.find(player => (player.data[index].multiplier || 0) > 1),\n        }))\n        .filter((element, index) => (element.top?.data[index].rawPoints || 0) > (element.captain?.data[index].rawPoints || 0))\n        .reduce((acc, curr) => curr.captain ? ({\n            ...acc,\n            [curr.captain.element.id]: acc[curr.captain.element.id] ? acc[curr.captain.element.id] + 1 : 1,\n        }) : acc, {} as Record<number, number>)\n\n    const timesUsed = allPlayers.reduce((acc, curr) => {\n        return {\n            ...acc,\n            [curr.element.id]: curr.data.filter(data => (data.multiplier || 0) > 1).length,\n        }\n    }, {} as Record<number, number>)\n\n    return (\n        <Widget title=\"Wrong Captains\">\n            <ul className=\"widget__list\">\n                {sort(Object.entries(improvements), el => el[1]).map(([ player, count ]) => (\n                    <li className=\"widget__list__item\" key={player}>\n                        <Player id={Number(player)} />\n                        <span>{count} out of {timesUsed[Number(player)]}{timesUsed[Number(player)] > 0 && ` (${round(count / timesUsed[Number(player)] * 100, 1)}%)`}</span>\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default WrongCaptainWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getTotalPoints, round, sort } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst MAX_ITEMS = 10\n\nconst ContributionWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    if (!stats || !entry) {\n        return (\n            <Widget title=\"Total Points Contribution\" />\n        )\n    }\n\n    const contributions = sort(getAllPlayers(stats), getTotalPoints).slice(0, MAX_ITEMS)\n\n    return (\n        <Widget title=\"Total Points Contribution\">\n            <ul className=\"widget__list\">\n                {contributions.map(player => (\n                    <li className=\"widget__list__item\" key={player.element.id}>\n                        <Player id={player.element.id} />\n                        {entry.summary_overall_points > 0 && (\n                            <span>{round(getTotalPoints(player) / entry.summary_overall_points * 100)}% ({getTotalPoints(player)} pts)</span>\n                        )}\n                    </li>\n                ))}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default ContributionWidget","import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport { Bootstrap, StatData, Stats } from '../../types'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, getTotalPoints, round, sort } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport { fetchHistory } from '../../reducers/history'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { fetchEntry } from '../../reducers/entry'\nimport { Metric } from '../Metric'\nimport { SeasonWidget } from '../SeasonWidget'\nimport { TeamsWidget } from '../TeamsWidget'\nimport { NonBlankStreakWidget } from '../NonBlankStreakWidget'\nimport { SelectionStreakWidget } from '../SelectionStreakWidget'\nimport { StartStreakWidget } from '../StartStreakWidget'\nimport { BenchStreakWidget } from '../BenchStreakWidget'\nimport { CaptainOpportunityWidget } from '../CaptainOpportunityWidget'\nimport { SelectionWidget } from '../SelectionWidget'\nimport { StarterWidget } from '../StarterWidget'\nimport { BenchWidget } from '../BenchWidget'\nimport { DifferenceWidget } from '../DifferenceWidget'\nimport { OverallRankWidget } from '../OverallRankWidget'\nimport { PointsWidget } from '../PointsWidget'\nimport { ValueWidget } from '../ValueWidget'\nimport { SiteLink } from '../SiteLink'\nimport { WrongCaptainWidget } from '../WrongCaptainWidget'\nimport { ContributionWidget } from '../ContributionWidget'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    points: getTotalPoints,\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderPlayerList = (stats: Stats, bootstrap: Bootstrap, sorting: OptionType): JSX.Element[] => Object.entries(stats).map(([ elementType, statData ]) => (\n    <div key={elementType}>\n        <li className=\"dashboard__category\">\n            <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n            <span>{statData.length}</span>\n        </li>\n        {sort(statData.filter(element => element.data.filter(pick => pick.multiplier !== null).length), el => sortings[sorting.value](el))\n            .map(element => (\n                <li key={element.element.id} className=\"dashboard__item\">\n                    <div className=\"dashboard__player\">\n                        <Player id={element.element.id} />\n                    </div>\n                    <div className=\"dashboard__stats\">\n                        {element.data.map(item => (\n                            <span\n                                key={item.event.id}\n                                className={classNames('dashboard__stat', {\n                                    'dashboard__stat--benched': item.multiplier === 0,\n                                    'dashboard__stat--triple': item.multiplier === 3,\n                                    'dashboard__stat--started': item.multiplier,\n                                })}\n                            />\n                        ))}\n                    </div>\n                    <div className=\"dashboard__totals\">\n                        <span className=\"dashboard__stat\">\n                            {getTotalSelections(element)} ({round(getTotalSelections(element) / element.data.length * 100)}%)\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            {getTotalStarts(element)} ({round(getTotalStarts(element) / element.data.length * 100)}%)\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            {getTotalBenched(element)} ({round(getTotalBenched(element) / element.data.length * 100)}%)\n                        </span>\n                        <span className=\"dashboard__stat\">\n                            <span>\n                                {getTotalPoints(element)} ({getTotalStarts(element) > 0 ? round(getTotalPoints(element) / getTotalStarts(element)) : 0} <Metric metric=\"ppg\" />)\n                            </span>\n                        </span>\n                    </div>\n                </li>\n            ))\n        }\n    </div>\n))\n\nconst Dashboard: React.FC = () => {\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const isLoading = useSelector((state: RootState) => state.loading > 0)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n            dispatch(fetchEntry(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoading,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <SiteLink label={entry.name} />\n                                <div className=\"small\">{entry.summary_overall_points} pts — Rank {thousandsSeparator(entry.summary_overall_rank)}</div>\n                            </h1>\n                            {id !== undefined && (\n                                <Button\n                                    onClick={() => setIsModalOpen(true)}\n                                    label=\"Change Team\"\n                                />\n                            )}\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <PlayerStatsWidget />\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Points\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && bootstrap && renderPlayerList(stats, bootstrap, sort as OptionType)}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <SelectionWidget />\n                    <StarterWidget />\n                    <BenchWidget />\n                    <DifferenceWidget title=\"Most Consistent Starters\" top />\n                    <DifferenceWidget title=\"Most Consistent Bench Players\" />\n                    <TeamsWidget />\n                    <PositionsWidget />\n                    <HistoryWidget />\n                    <FormationWidget />\n                    <CaptainWidget />\n                    <GameweekWidget />\n                    <SeasonWidget />\n                    <NonBlankStreakWidget />\n                    <SelectionStreakWidget />\n                    <StartStreakWidget />\n                    <BenchStreakWidget />\n                    <CaptainOpportunityWidget />\n                    <WrongCaptainWidget />\n                    <ContributionWidget />\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <OverallRankWidget />\n                    <PointsWidget />\n                    <ValueWidget />\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport { Bootstrap, Stats, History, Entry } from '../types'\nimport history from './history'\nimport loading from './loading'\n\nexport type RootState = {\n    loading: number\n    bootstrap: {\n        data: Bootstrap | undefined\n    }\n    stats: {\n        data: Stats | undefined\n        chips: {\n            [key: number]: string\n        } | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n    }\n    history: {\n        data: History | undefined\n    }\n    entry: {\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    loading,\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}