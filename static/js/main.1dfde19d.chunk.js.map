{"version":3,"sources":["serviceWorker.ts","reducers/bootstrap.ts","components/Player/Player.tsx","components/Spinner/Spinner.tsx","components/Widget/Widget.tsx","utilities/settings.ts","utilities/stats.ts","utilities/numbers.ts","utilities/events.ts","utilities/chips.ts","reducers/settings.ts","components/Button/Button.tsx","hooks/useClickOutside.ts","hooks/useMeanLabel.ts","hooks/useMeanValue.ts","components/Modal/Modal.tsx","reducers/stats.ts","reducers/history.ts","components/HistoryWidget/HistoryWidget.tsx","components/TotsPlayer/TotsPlayer.tsx","components/TotsWidget/TotsWidget.tsx","components/Metric/Metric.tsx","components/PlayerStatsWidget/PlayerStatsWidget.tsx","components/FormationWidget/FormationWidget.tsx","components/CaptainWidget/CaptainWidget.tsx","components/GameweekWidget/GameweekWidget.tsx","components/PositionsWidget/PositionsWidget.tsx","reducers/entry.ts","components/SeasonWidget/SeasonWidget.tsx","components/Team/Team.tsx","components/TeamsWidget/TeamsWidget.tsx","components/Dashboard/Dashboard.tsx","reducers/index.ts","index.tsx","store.ts"],"names":["Boolean","window","location","hostname","match","bootstrap","createSlice","name","initialState","loading","data","undefined","reducers","fetchBootstrapStart","state","fetchBootstrapSuccess","action","payload","actions","Player","props","useSelector","player","elements","find","el","id","team","teams","position","element_types","element_type","className","condensed","src","code","singular_name_short","alt","web_name","suffix","title","short_name","Spinner","Widget","classNames","cloaked","children","validateTeamId","value","number","Number","isNaN","isInteger","getTotalSelections","statData","filter","pick","multiplier","length","getTotalStarts","getTotalBenched","getTotalPoints","reduce","acc","points","getAllPlayers","stats","Object","values","curr","concat","aggregateStats","players","key","map","sort","a","b","getTopStatAggregate","thousandsSeparator","toString","replace","sumNumbers","series","direction","getPastEvents","events","timestamp","Date","now","event","deadline_time_epoch","getShortName","split","pop","chips","bboost","freehit","wildcard","settings","localStorage","getItem","meanStrategy","setId","setItem","removeItem","setMeanStrategy","Button","secondary","type","onClick","disabled","label","useClickOutside","callback","element","React","useRef","useEffect","listener","e","target","Node","current","contains","document","addEventListener","removeEventListener","useMeanLabel","strategy","useMeanValue","average","sorted","mid","Math","ceil","median","Modal","useState","setValue","dispatch","useDispatch","close","useCallback","cancel","onClose","ref","onSubmit","preventDefault","placeholder","onChange","buildDataStart","buildDataSuccess","fetchPicks","entry","fetch","encodeURIComponent","response","json","fetchEvent","fetchGameweekInformation","Promise","all","live","history","fetchHistoryStart","fetchHistorySuccess","HistoryWidget","isLoadingHistory","meanLabel","meanValue","pastSeasonsByRank","past","rank","pastSeasonsByPoints","total_points","bestRankedSeason","worstRankedSeason","bestPointSeason","worstPointSeason","top1k","season","top10k","top100k","top1m","season_name","round","TotsPlayer","TotsWidget","isLoadingStats","gk","slice","def","fwd","top","rest","xi","bench","explanations","Metric","metric","PlayerStatsWidget","allPlayers","reds","yellows","goals","assists","cleanSheets","goalsConceded","ownGoals","saves","minutes","penaltiesMissed","penaltiesSaved","inDreamteam","bps","bonus","mostCaptaincies","captaincies","topReturner","topSeasonReturner","href","rel","toFixed","red_cards","yellow_cards","goals_scored","clean_sheets","goals_conceded","own_goals","penalties_missed","penalties_saved","in_dreamteam","FormationWidget","weeks","formations","selections","Array","from","keys","index","val","entries","join","formation","count","information","formatFormation","CaptainWidget","captains","captain","sum","GameweekWidget","isLoadingBootstrap","differences","week","average_entry_score","sortedRanks","gws","bestGW","worstGW","diff","PositionsWidget","positions","elementType","totalPoints","plural_name","fetchEntryStart","fetchEntrySuccess","SeasonWidget","stat","totalTransfers","event_transfers","totalHits","event_transfers_cost","totalBenched","points_on_bench","tc","findIndex","bbWeek","bbPoints","Team","counts","sortings","selection","start","alphabet","toLowerCase","charCodeAt","sortOptions","renderDifferenceWidget","benched","starts","benchedPercentage","startsPercentage","topStarters","percentageDiff","topBenchwarmers","Dashboard","isModalOpen","setIsModalOpen","setSort","dashboardRef","query","queryString","parse","hash","setTimeout","scrollTo","scrollWidth","gameweeks","forEach","gw","active_chip","entry_history","picks","item","rawPoints","buildData","fetchHistory","fetchEntry","stringify","summary_overall_points","summary_overall_rank","options","option","styles","container","provided","width","menu","zIndex","top_element_info","plural_name_short","renderSelectionWidget","renderStartersWidget","renderBenchWidget","TeamsWidget","overall_rank","max","height","margin","bottom","left","right","dataKey","fill","fillOpacity","stroke","reversed","tickFormatter","thousandsShorthand","domain","interval","tickCount","angle","textAnchor","strokeDasharray","isAnimationActive","formatter","separator","renderOverallRankWidget","charAt","toUpperCase","renderPointsWidget","bank","renderValueWidget","combineReducers","ReactDOM","render","StrictMode","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dfde19d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap } from '../types'\n\nconst bootstrap = createSlice({\n    name: 'bootstrap',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchBootstrapStart(state) {\n            state.loading = true\n        },\n        fetchBootstrapSuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchBootstrapStart, fetchBootstrapSuccess } = bootstrap.actions\n\nexport const fetchBootstrap = (): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchBootstrapStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent('https://fantasy.premierleague.com/api/bootstrap-static/')}`)\n\n    const data = await response.json()\n\n    dispatch(fetchBootstrapSuccess(data))\n}\n\nexport default bootstrap.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './Player.scss'\n\ntype Props = {\n    id: number\n    condensed?: boolean\n    suffix?: string | (() => JSX.Element)\n}\n\nconst Player: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className={`player ${props.condensed ? 'player--condensed' : ''}`}>\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"player__shirt\"\n            />\n            <div className=\"player__detail\">\n                <div className=\"player__name\">\n                    <span>{player?.web_name}{typeof props.suffix === 'string' ? ` (${props.suffix})` : props.suffix ? props.suffix() : null}</span>\n                </div>\n                <div className=\"player__info\">\n                    <span className=\"player__team\" title={team?.name}>{team?.short_name}</span>\n                    <span className=\"player__position\">{position?.singular_name_short}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\nimport './Spinner.scss'\n\nconst Spinner: React.FC = () => (\n    <div className=\"spinner\">\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n        <div className=\"spinner__item\"></div>\n    </div>\n)\n\nexport default Spinner","import React from 'react'\nimport './Widget.scss'\nimport { Spinner } from '../Spinner'\nimport classNames from 'classnames'\n\ntype Props = {\n    title?: string\n    children?: React.ReactNode\n    loading?: boolean\n    cloaked?: boolean\n}\n\nconst Widget: React.FC<Props> = (props: Props) => (\n    <div className={classNames('widget', {\n        'widget--cloaked': props.cloaked,\n    })}>\n        {props.title && (\n            <h2 className=\"widget__title\">{props.title}</h2>\n        )}\n        <div className=\"widget__content\">\n            {props.loading && <div className=\"widget__loading\">\n                <Spinner />\n            </div>}\n            {props.children}\n        </div>\n    </div>\n)\n\nexport default Widget","export const validateTeamId = (value: string) => {\n    const number = Number(value)\n    return value && !Number.isNaN(number) && Number.isInteger(number)\n}","import { ElementStats, StatData, Stats } from '../types'\n\nexport const getTotalSelections = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier !== null).length\n}\n\nexport const getTotalStarts = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier && pick.multiplier > 0).length\n}\n\nexport const getTotalBenched = (statData: StatData): number => {\n    return statData.data.filter(pick => pick.multiplier === 0).length\n}\n\nexport const getTotalPoints = (statData: StatData): number => {\n    return statData.data.reduce((acc, pick) => acc + (pick.points || 0), 0)\n}\n\nexport const getAllPlayers = (stats: Stats): StatData[] => {\n    return Object.values(stats).reduce((acc, curr) => acc.concat(curr), [])\n}\n\nexport const aggregateStats = (players: StatData[], key: keyof ElementStats) => players.map(player => ({\n    player,\n    [key]: player.data.reduce((acc, data) => {\n        if (typeof data.stats?.[key] === 'number') {\n            return ((data.stats?.[key] as number) || 0) + acc\n        }\n\n        if (typeof data.stats?.[key] === 'boolean') {\n            return (+(data.stats?.[key] as boolean) || 0) + acc\n        }\n\n        return acc\n    }, 0)\n})).sort((a, b) => (b[key] as number) - (a[key] as number))\n\nexport const getTopStatAggregate = (players: StatData[], key: keyof ElementStats) => aggregateStats(players, key)[0]","export const thousandsSeparator = (value: number): string => {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nexport const thousandsShorthand = (value: number): string => {\n    return value > 999999 ? `${(value / 1000000).toFixed(1)}M` : value > 999 ? `${(value / 1000).toFixed(0)}K` : `${value}`\n}\n\nexport const sumNumbers = (series: number[]): number => {\n    return series.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport const average = (series: number[]): number => {\n    return sumNumbers(series) / series.length\n}\n\nexport const median = (series: number[]): number => {\n    const sorted = sort(series)\n    const mid = Math.ceil(series.length / 2)\n\n    if (sorted.length % 2 === 0) {\n        return (sorted[mid] + sorted[mid + 1]) / 2\n    }\n\n    return sorted[mid - 1]\n}\n\nexport const sort = (series: number[], direction: 'asc' | 'desc' = 'desc'): number[] => {\n    if (direction === 'asc') {\n        return [ ...series ].sort((a, b) => a - b)\n    }\n\n    return [ ...series ].sort((a, b) => b - a)\n}","import { Event } from '../types'\n\nexport const getPastEvents = (events: Event[]): Event[] => {\n    const timestamp = Date.now()\n    return events.filter(event => event.deadline_time_epoch * 1000 < timestamp)\n}\n\nexport const getShortName = (event: Event): string => {\n    return event.name.split(' ').pop() || ''\n}","const chips: { [key: string]: string } = {\n    '3xc': 'TC',\n    bboost: 'BB',\n    freehit: 'FH',\n    wildcard: 'WC',\n}\n\nexport const getChipAbbreviation = (key: string): string | null => chips[key] || null","import { createSlice } from '@reduxjs/toolkit'\n\nconst settings = createSlice({\n    name: 'settings',\n    initialState: {\n        id: localStorage.getItem('id') || undefined,\n        meanStrategy: localStorage.getItem('meanStrategy') || 'average',\n    },\n    reducers: {\n        setId(state, action) {\n            state.id = action.payload\n\n            if (state.id) {\n                localStorage.setItem('id', state.id)\n            } else {\n                localStorage.removeItem('id')\n            }\n        },\n        setMeanStrategy(state, action) {\n            state.meanStrategy = action.payload\n            localStorage.setItem('meanStrategy', state.meanStrategy)\n        }\n    },\n})\n\nexport const { setId, setMeanStrategy } = settings.actions\n\nexport default settings.reducer","import React from 'react'\nimport classNames from 'classnames'\nimport './Button.scss'\n\ntype Props = {\n    label: string\n    type?: 'reset' | 'submit' | 'button'\n    disabled?: boolean\n    secondary?: boolean\n    onClick?: () => void\n}\n\nconst Button: React.FC<Props> = (props: Props) => (\n    <button\n        className={classNames('button', { 'button--secondary': props.secondary })}\n        type={props.type || 'button'}\n        onClick={props.onClick}\n        disabled={props.disabled}\n    >\n        {props.label}\n    </button>\n)\n\nexport default Button","import React from 'react'\n\nconst useClickOutside = <T extends HTMLElement>(callback: () => void): React.RefObject<T> => {\n  const element = React.useRef<T>(null)\n\n  React.useEffect(() => {\n    const listener = (e: MouseEvent): void => {\n      if (e.target instanceof Node && element.current && !element.current.contains(e.target)) {\n        callback()\n      }\n    }\n\n    if (element.current) {\n      document.addEventListener('click', listener)\n    } else {\n      document.removeEventListener('click', listener)\n    }\n\n    return () => document.removeEventListener('click', listener)\n  }, [element, callback])\n\n  return element\n}\n\nexport default useClickOutside\n","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\n\nconst useMeanLabel: () => (suffix: string) => string = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (suffix: string) => `${strategy === 'average' ? 'Average' : 'Median'} ${suffix}`\n}\n\nexport default useMeanLabel","import { useSelector } from 'react-redux'\nimport { RootState } from '../reducers'\nimport { average, median } from '../utilities'\n\nconst useMeanValue: () => (series: number[]) => number = () => {\n    const strategy = useSelector((state: RootState) => state.settings.meanStrategy)\n\n    return (series: number[]) => {\n        if (strategy === 'average') {\n            return average(series)\n        }\n\n        return median(series)\n    }\n}\n\nexport default useMeanValue","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setId } from '../../reducers/settings'\nimport { Button } from '../Button'\nimport { useClickOutside } from '../../hooks'\nimport { validateTeamId } from '../../utilities'\nimport { RootState } from '../../reducers'\nimport './Modal.scss'\n\ntype Props = {\n    onClose?: () => void\n}\n\nconst Modal: React.FC<Props> = (props: Props) => {\n    const [ value, setValue ] = useState<string>('')\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const dispatch = useDispatch()\n\n    const close = useCallback((cancel: boolean) => {\n        if (!cancel) {\n            dispatch(setId(Number(value)))\n        } else if (!id) {\n            return\n        }\n\n        if (props.onClose) {\n            props.onClose()\n        }\n    }, [ dispatch, props, value, id ])\n\n    const ref = useClickOutside<HTMLDivElement>(() => close(true))\n\n    useEffect(() => {\n        const listener = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') {\n                close(true)\n            }\n        }\n\n        document.addEventListener('keyup', listener)\n\n        return () => document.removeEventListener('keyup', listener)\n    }, [ close ])\n\n    return (\n        <form onSubmit={e => { close(false); e.preventDefault() }}>\n            <div className=\"modal\">\n                <div className=\"modal__element\" ref={ref}>\n                    <header className=\"modal__header\">\n                        Enter Your Team ID\n                    </header>\n                    <div className=\"modal__body\">\n                        <input\n                            className=\"modal__input\"\n                            type=\"text\"\n                            placeholder=\"e.g. 4654486\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <footer className=\"modal__footer\">\n                        <Button\n                            label=\"Show Stats\"\n                            type=\"submit\"\n                            disabled={!validateTeamId(value)}\n                        />\n                    </footer>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Modal\n","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { Bootstrap, Picks, Stats, StatData, LiveEvent } from '../types'\nimport { getPastEvents } from '../utilities'\n\nconst stats = createSlice({\n    name: 'stats',\n    initialState: {\n        loading: true,\n        data: undefined,\n        chips: undefined,\n    },\n    reducers: {\n        buildDataStart(state) {\n            state.loading = true\n            state.data = undefined\n            state.chips = undefined\n        },\n        buildDataSuccess(state, action) {\n            state.data = action.payload.data\n            state.chips = action.payload.chips\n            state.loading = false\n        },\n    },\n})\n\nexport const { buildDataStart, buildDataSuccess } = stats.actions\n\nconst fetchPicks = async (event: number, entry: number): Promise<Picks> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/event/${event}/picks/`)}`)\n    return await response.json()\n}\n\nconst fetchEvent = async (event: number): Promise<LiveEvent> => {\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/event/${event}/live/`)}`)\n    return await response.json()\n}\n\nconst fetchGameweekInformation = async (event: number, entry: number): Promise<{ pick: Picks, live: LiveEvent }> => {\n    const [ pick, live ] = await Promise.all([\n        fetchPicks(event, entry),\n        fetchEvent(event),\n    ])\n\n    return {\n        pick,\n        live,\n    }\n}\n\nexport const buildData = (bootstrap: Bootstrap, entry: number): ThunkAction<void, Bootstrap, unknown, Action<string>> => async dispatch => {\n    dispatch(buildDataStart())\n\n    const gameweeks = await Promise.all(\n        getPastEvents(bootstrap.events).map(async event => await fetchGameweekInformation(event.id, entry))\n    )\n\n    const stats: { [key: number]: StatData } = {}\n    const chips: { [key: number]: string } = {}\n\n    gameweeks.forEach(gw => {\n        if (gw.pick.active_chip) {\n            chips[gw.pick.entry_history.event] = gw.pick.active_chip\n        }\n\n        gw.pick.picks.forEach(item => {\n            if (!stats[item.element]) {\n                stats[item.element] = {\n                    element: bootstrap.elements.find(el => el.id === item.element)!,\n                    data: bootstrap.events.filter(event => event.id < gw.pick.entry_history.event).map(event => ({\n                        event,\n                        multiplier: null,\n                        points: null,\n                        rawPoints: null,\n                        stats: null,\n                        position: null,\n                    })),\n                }\n            }\n\n            const points = gw.live.elements.find(el => el.id === item.element)?.stats.total_points || null\n\n            stats[item.element] = {\n                ...stats[item.element],\n                data: [\n                    ...stats[item.element].data,\n                    {\n                        event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                        multiplier: item.multiplier,\n                        points: points !== null ? points * item.multiplier : points,\n                        rawPoints: points,\n                        stats: gw.live.elements.find(el => el.id === item.element)?.stats || null,\n                        position: item.position,\n                    }\n                ]\n            }\n        })\n\n        Object.keys(stats).forEach(player => {\n            const index = Number(player)\n\n            if (stats[index].data.length < gw.pick.entry_history.event) {\n                stats[index] = {\n                    ...stats[index],\n                    data: [\n                        ...stats[index].data,\n                        {\n                            event: bootstrap.events.find(event => event.id === gw.pick.entry_history.event)!,\n                            multiplier: null,\n                            points: null,\n                            rawPoints: null,\n                            stats: null,\n                            position: null,\n                        },\n                    ],\n                }\n            }\n        })\n    })\n\n    dispatch(buildDataSuccess({\n        data: Object.values(stats).reduce((acc: Stats, curr) => ({\n            ...acc,\n            [curr.element.element_type]: [\n                ...(acc[curr.element.element_type] || []),\n                curr,\n            ],\n        }), {}),\n        chips,\n    }))\n}\n\nexport default stats.reducer","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst history = createSlice({\n    name: 'history',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchHistoryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchHistorySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchHistoryStart, fetchHistorySuccess } = history.actions\n\nexport const fetchHistory = (entry: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchHistoryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${entry}/history/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchHistorySuccess(data))\n}\n\nexport default history.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { useMeanValue, useMeanLabel } from '../../hooks'\n\nconst HistoryWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history) {\n        return (\n            <Widget\n                title=\"Historical Data\"\n                loading={isLoadingHistory}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const pastSeasonsByRank = [ ...history.past ].sort((a, b) => a.rank - b.rank)\n    const pastSeasonsByPoints = [ ...history.past ].sort((a, b) => b.total_points - a.total_points)\n\n    const bestRankedSeason = pastSeasonsByRank[0]\n    const worstRankedSeason = pastSeasonsByRank[pastSeasonsByRank.length - 1]\n\n    const bestPointSeason = pastSeasonsByPoints[0]\n    const worstPointSeason = pastSeasonsByPoints[pastSeasonsByPoints.length - 1]\n\n    const top1k = pastSeasonsByRank.filter(season => season.rank <= 1000).length\n    const top10k = pastSeasonsByRank.filter(season => season.rank <= 10000).length\n    const top100k = pastSeasonsByRank.filter(season => season.rank <= 100000).length\n    const top1m = pastSeasonsByRank.filter(season => season.rank <= 1000000).length\n\n    return (\n        <Widget\n            title=\"Historical Data\"\n            loading={isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Best Season Rank</span>\n                    <span>{thousandsSeparator(bestRankedSeason.rank)} ({bestRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Points Finish</span>\n                    <span>{thousandsSeparator(bestPointSeason.total_points)} ({bestPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Season Rank</span>\n                    <span>{thousandsSeparator(worstRankedSeason.rank)} ({worstRankedSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Points Finish</span>\n                    <span>{thousandsSeparator(worstPointSeason.total_points)} ({worstPointSeason.season_name})</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByRank.map((season) => season.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Points')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(pastSeasonsByPoints.map((season) => season.total_points))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1K Finishes</span>\n                    <span>{top1k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 10K Finishes</span>\n                    <span>{top10k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 100K Finishes</span>\n                    <span>{top100k}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top 1M Finishes</span>\n                    <span>{top1m}</span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default HistoryWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport './TotsPlayer.scss'\n\ntype Props = {\n    id: number\n    points: number\n}\n\nconst TotsPlayer: React.FC<Props> = (props: Props) => {\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n\n    const player = bootstrap?.elements.find(el => el.id === props.id)\n    const team = bootstrap?.teams.find(el => el.id === player?.team)\n    const position = bootstrap?.element_types.find(el => el.id === player?.element_type)\n\n    return (\n        <div className=\"tots-player\">\n            <img\n                src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${team?.code}${position?.singular_name_short === 'GKP' ? '_1' : ''}-66.png`}\n                alt={player?.web_name}\n                className=\"tots-player__shirt\"\n            />\n            <div className=\"tots-player__detail\">\n                <div className=\"tots-player__name\">\n                    <span>{player?.web_name}</span>\n                </div>\n                <div className=\"tots-player__points\">\n                    {props.points}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TotsPlayer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints } from '../../utilities'\nimport { TotsPlayer } from '../TotsPlayer'\nimport { Widget } from '../Widget'\nimport './TotsWidget.scss'\n\nconst MIN_GK = 1\nconst MAX_GK = 2\n\nconst MIN_DEF = 3\nconst MAX_DEF = 5\n\nconst MIN_MID = 2\nconst MAX_MID = 5\n\nconst MIN_FWD = 1\nconst MAX_FWD = 3\n\nconst TotsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Team of the Season\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            ></Widget>\n        )\n    }\n\n    const gk = [ ...stats[1] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_GK)\n    const def = [ ...stats[2] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_DEF)\n    const mid = [ ...stats[3] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_MID)\n    const fwd = [ ...stats[4] ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a)).slice(0, MAX_FWD)\n\n    const top = [ ...gk.slice(0, MIN_GK), ...def.slice(0, MIN_DEF), ...mid.slice(0, MIN_MID), ...fwd.slice(0, MIN_FWD) ]\n    const rest = [ ...def.slice(MIN_DEF), ...mid.slice(MIN_MID), ...fwd.slice(MIN_FWD) ].sort((a, b) => getTotalPoints(b) - getTotalPoints(a))\n\n    const xi = [ ...top, ...rest.slice(0, 4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n    const bench = [ ...gk.slice(MIN_GK), ...rest.slice(4) ].sort((a, b) => a.element.element_type - b.element.element_type)\n\n    return (\n        <Widget\n            title=\"Team of the Season\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <div className=\"tots\">\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 1).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 2).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 3).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row\">\n                    {xi.filter(el => el.element.element_type === 4).map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n                <div className=\"tots__row tots__row--bench\">\n                    {bench.map(player => (\n                        <TotsPlayer\n                            id={player.element.id}\n                            points={getTotalPoints(player)}\n                        />\n                    ))}\n                </div>\n            </div>\n        </Widget>\n    )\n}\n\nexport default TotsWidget","import React from 'react'\nimport './Metric.scss'\n\nconst explanations = {\n    'ppg': 'Points per Game',\n    'ppp': 'Points per Player',\n}\n\ntype Props = {\n    metric: 'ppg' | 'ppp'\n}\n\nconst Metric: React.FC<Props> = (props: Props) => {\n    return (\n        <abbr className=\"metric\" title={explanations[props.metric]}>{props.metric}</abbr>\n    )\n}\n\nexport default Metric","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { getAllPlayers, getTopStatAggregate, getTotalPoints, getTotalStarts, thousandsSeparator } from '../../utilities'\nimport { Metric } from '../Metric'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\n\nconst PlayerStatsWidget: React.FC = () => {\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!history || !stats) {\n        return (\n            <Widget\n                title=\"Player Stats\"\n                loading={isLoadingHistory || isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = getTopStatAggregate(allPlayers, 'red_cards')\n    const yellows = getTopStatAggregate(allPlayers, 'yellow_cards')\n    const goals = getTopStatAggregate(allPlayers, 'goals_scored')\n    const assists = getTopStatAggregate(allPlayers, 'assists')\n    const cleanSheets = getTopStatAggregate(allPlayers, 'clean_sheets')\n    const goalsConceded = getTopStatAggregate(allPlayers, 'goals_conceded')\n    const ownGoals = getTopStatAggregate(allPlayers, 'own_goals')\n    const saves = getTopStatAggregate(allPlayers, 'saves')\n    const minutes = getTopStatAggregate(allPlayers, 'minutes')\n    const penaltiesMissed = getTopStatAggregate(allPlayers, 'penalties_missed')\n    const penaltiesSaved = getTopStatAggregate(allPlayers, 'penalties_saved')\n    const inDreamteam = getTopStatAggregate(allPlayers, 'in_dreamteam')\n    const bps = getTopStatAggregate(allPlayers, 'bps')\n    const bonus = getTopStatAggregate(allPlayers, 'bonus')\n\n    const mostCaptaincies = allPlayers.map(player => ({\n        player,\n        captaincies: player.data.filter(data => data.multiplier && data.multiplier > 1).length,\n    })).sort((a, b) => b.captaincies - a.captaincies)[0]\n\n    const topReturner = allPlayers\n        .map(player => ({\n            ...player,\n            data: [ ...player.data ].sort((a, b) => (b.points || 0) - (a.points || 0)),\n        }))\n        .sort((a, b) => (b.data[0].points || 0) - (a.data[0].points || 0))[0]\n\n    const topSeasonReturner = allPlayers.sort((a, b) => getTotalPoints(b) - getTotalPoints(a))[0]\n\n    return (\n        <Widget\n            title=\"Player Stats\"\n            loading={isLoadingHistory || isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Top GW Returner</span>\n                    <span>\n                        <Player\n                            id={topReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {topReturner.data[0].points} pts,\n                                        {' '}\n                                        <a href={`https://fantasy.premierleague.com/entry/${id}/event/${topReturner.data[0].event.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            GW {topReturner.data[0].event.id}\n                                        </a>\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Top Season Returner</span>\n                    <span>\n                        <Player\n                            id={topSeasonReturner.element.id}\n                            suffix={() => (\n                                <>\n                                    {' '}\n                                    (\n                                        {getTotalPoints(topSeasonReturner)} pts,\n                                        {' '}\n                                        {(getTotalPoints(topSeasonReturner) / getTotalStarts(topSeasonReturner)).toFixed(1)}\n                                        {' '}\n                                        <Metric metric=\"ppg\" />\n                                    )\n                                </>\n                            )}\n                            condensed\n                        />\n                    </span>\n                </li>\n                {reds.red_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Red Cards</span>\n                        <Player id={reds.player.element.id} suffix={`${reds.red_cards}`} condensed />\n                    </li>\n                )}\n                {yellows.yellow_cards > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Yellow Cards</span>\n                        <Player id={yellows.player.element.id} suffix={`${yellows.yellow_cards}`} condensed />\n                    </li>\n                )}\n                {goals.goals_scored > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Top Scorer</span>\n                        <Player id={goals.player.element.id} suffix={`${goals.goals_scored}`} condensed />\n                    </li>\n                )}\n                {assists.assists > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Assists</span>\n                        <Player id={assists.player.element.id} suffix={`${assists.assists}`} condensed />\n                    </li>\n                )}\n                {bonus.bonus > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Bonus Points</span>\n                        <Player id={bonus.player.element.id} suffix={`${bonus.bonus}`} condensed />\n                    </li>\n                )}\n                {bps.bps > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Highest Total BPS</span>\n                        <Player id={bps.player.element.id} suffix={`${bps.bps}`} condensed />\n                    </li>\n                )}\n                {cleanSheets.clean_sheets > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Clean Sheets</span>\n                        <Player id={cleanSheets.player.element.id} suffix={`${cleanSheets.clean_sheets}`} condensed />\n                    </li>\n                )}\n                {goalsConceded.goals_conceded > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Goals Conceded</span>\n                        <Player id={goalsConceded.player.element.id} suffix={`${goalsConceded.goals_conceded}`} condensed />\n                    </li>\n                )}\n                {saves.saves > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Saves</span>\n                        <Player id={saves.player.element.id} suffix={`${saves.saves}`} condensed />\n                    </li>\n                )}\n                {ownGoals.own_goals > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Own Goals</span>\n                        <Player id={ownGoals.player.element.id} suffix={`${ownGoals.own_goals}`} condensed />\n                    </li>\n                )}\n                {penaltiesMissed.penalties_missed > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Missed</span>\n                        <Player id={penaltiesMissed.player.element.id} suffix={`${penaltiesMissed.penalties_missed}`} condensed />\n                    </li>\n                )}\n                {penaltiesSaved.penalties_saved > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Penalties Saved</span>\n                        <Player id={penaltiesSaved.player.element.id} suffix={`${penaltiesSaved.penalties_saved}`} condensed />\n                    </li>\n                )}\n                {minutes.minutes > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Minutes</span>\n                        <Player id={minutes.player.element.id} suffix={`${thousandsSeparator(minutes.minutes as number)}`} condensed />\n                    </li>\n                )}\n                {inDreamteam.in_dreamteam > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Times in Dreamteam</span>\n                        <Player id={inDreamteam.player.element.id} suffix={`${inDreamteam.in_dreamteam}`} condensed />\n                    </li>\n                )}\n                {mostCaptaincies.captaincies > 0 && (\n                    <li className=\"widget__list__item\">\n                        <span>Most Captaincies</span>\n                        <Player id={mostCaptaincies.player.element.id} suffix={`${mostCaptaincies.captaincies}`} condensed />\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PlayerStatsWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\n\ntype FormationInformation = {\n    count: number\n    points: number\n}\n\nconst formatFormation = (formation: string) => sumNumbers(formation.split('-').map(position => Number(position))) > 10 ? 'Bench Boost' : formation\n\nconst FormationWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!stats || !history) {\n        return (\n            <Widget\n                title=\"Formations\"\n                loading={isLoadingStats || isLoadingHistory}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const weeks = history.current.length\n\n    const formations = Object\n        .values(stats)\n        .map(position => {\n            const selections = position.map(player => player.data.map(data => data.multiplier))\n\n            return Array.from(Array(weeks).keys()).map((el, index) => selections\n                .map(player => (player[index] || 0) > 0)\n                .filter(val => !!val)\n                .length\n            )\n        })\n        .slice(1)\n\n    const data = Array\n        .from(Array(weeks).keys())\n        .map((el, index) => formations\n            .map(entries => entries[index])\n            .join('-')\n        )\n        .reduce((acc, formation, index) => {\n            if (acc[formation]) {\n                return {\n                    ...acc,\n                    [formation]: {\n                        count: acc[formation].count + 1,\n                        points: acc[formation].points + history.current[index].points,\n                    }\n                }\n            }\n\n            return {\n                ...acc,\n                [formation]: {\n                    count: 1,\n                    points: history.current[index].points,\n                }\n            }\n        }, {} as Record<string, FormationInformation>)\n\n    return (\n        <Widget\n            title=\"Formations\"\n            loading={isLoadingStats || isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {Object.entries(data).sort((a, b) => b[1].count - a[1].count).map(([ formation, information ]) => {\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{formatFormation(formation)}</span>\n                            <span>{information.count} ({thousandsSeparator(information.points)} pts, {(information.points / information.count).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default FormationWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst CaptainWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    if (!stats) {\n        return (\n            <Widget\n                title=\"Captains\"\n                loading={isLoadingStats}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const captains = Object\n        .values(stats)\n        .map(position => {\n            return position\n                .map(player => ({\n                    player,\n                    data: player.data.filter(data => (data.multiplier || 0) > 1),\n                }))\n                .filter(player => player.data.length > 0)\n        })\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => b.data.length - a.data.length)\n\n    return (\n        <Widget\n            title=\"Captains\"\n            loading={isLoadingStats}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {captains.map(captain => {\n                    const sum = sumNumbers(captain.data.map(data => data.points || 0))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Player id={captain.player.element.id} />\n                            <span>{captain.data.length} ({thousandsSeparator(sum)} pts, {(sum / captain.data.length).toFixed(1)} <Metric metric=\"ppg\" />)</span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default CaptainWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanLabel, useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { thousandsSeparator } from '../../utilities'\n\nconst GameweekWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanLabel = useMeanLabel()\n    const meanValue = useMeanValue()\n\n    if (!history || !bootstrap) {\n        return (\n            <Widget\n                title=\"Gameweeks\"\n                loading={isLoadingHistory || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const differences = history.current.map((week, index) => week.points - bootstrap.events[index].average_entry_score)\n    const sortedRanks = [ ...history.current ].sort((a, b) => a.rank - b.rank)\n\n    const gws = [ ...history.current ].sort((a, b) => b.points - a.points)\n\n    const bestGW = gws[0]\n    const worstGW = gws[gws.length - 1]\n\n    return (\n        <Widget\n            title=\"Gameweeks\"\n            loading={isLoadingHistory || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('Difference to GW Average')}</span>\n                    <span>{meanValue(differences).toFixed(1)} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Above GW Average</span>\n                    <span>{differences.filter(diff => diff >= 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Times Below GW Average</span>\n                    <span>{differences.filter(diff => diff < 0).length}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>{meanLabel('GW Rank')}</span>\n                    <span>{thousandsSeparator(Math.round(meanValue(history.current.map(week => week.rank))))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best Gameweek</span>\n                    <span>\n                        {bestGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bestGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {bestGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst Gameweek</span>\n                    <span>\n                        {worstGW.points} pts\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${worstGW.event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {worstGW.event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Best GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[0].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[0].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[0].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Worst GW Rank</span>\n                    <span>\n                        {thousandsSeparator(sortedRanks[sortedRanks.length - 1].rank)}\n                        {' '}\n                        (\n                            <a href={`https://fantasy.premierleague.com/entry/${id}/event/${sortedRanks[sortedRanks.length - 1].event}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                GW {sortedRanks[sortedRanks.length - 1].event}\n                            </a>\n                        )\n                    </span>\n                </li>\n            </ul>\n        </Widget>\n    )\n}\n\nexport default GameweekWidget","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useMeanValue } from '../../hooks'\nimport { RootState } from '../../reducers'\nimport { getTotalPoints, thousandsSeparator, sumNumbers } from '../../utilities'\nimport { Widget } from '../Widget'\nimport { Metric } from '../Metric';\n\nconst PositionsWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const meanValue = useMeanValue()\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget\n                title=\"Positions\"\n                loading={isLoadingStats || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const positions: Record<string, number> = Object.entries(stats)\n        .reduce((acc, [ elementType, elements ]) => ({\n            ...acc,\n            [elementType]: elements.length,\n        }), {})\n\n    return (\n        <Widget\n            title=\"Positions\"\n            loading={isLoadingStats || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total</span>\n                    <span>{Object.values(positions).reduce((acc, curr) => acc + curr, 0)}</span>\n                </li>\n                {Object.entries(positions).map(([ elementType, elements ]) => {\n                    const totalPoints = stats[Number(elementType)].map(player => getTotalPoints(player))\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <span>{bootstrap.element_types.find(el => el.id === Number(elementType))?.plural_name}</span>\n                            <span>\n                                {elements}\n                                {' '}\n                                ({thousandsSeparator(sumNumbers(totalPoints))} pts, {meanValue(totalPoints).toFixed(1)} <Metric metric=\"ppp\" />)\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default PositionsWidget","import { createSlice, ThunkAction, Action } from '@reduxjs/toolkit'\nimport { History } from '../types'\n\nconst entry = createSlice({\n    name: 'entry',\n    initialState: {\n        loading: true,\n        data: undefined,\n    },\n    reducers: {\n        fetchEntryStart(state) {\n            state.loading = true\n            state.data = undefined\n        },\n        fetchEntrySuccess(state, action) {\n            state.data = action.payload\n            state.loading = false\n        },\n    },\n})\n\nexport const { fetchEntryStart, fetchEntrySuccess } = entry.actions\n\nexport const fetchEntry = (id: number): ThunkAction<void, History, unknown, Action<string>> => async dispatch => {\n    dispatch(fetchEntryStart())\n\n    const response = await fetch(`https://jsonp.afeld.me/?url=${encodeURIComponent(`https://fantasy.premierleague.com/api/entry/${id}/`)}`)\n\n    const data = await response.json()\n\n    dispatch(fetchEntrySuccess(data))\n}\n\nexport default entry.reducer","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Widget } from '../Widget'\nimport { aggregateStats, getAllPlayers, thousandsSeparator } from '../../utilities'\nimport { sumNumbers } from '../../utilities/numbers';\n\nconst SeasonWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    if (!stats || !history || !chips) {\n        return (\n            <Widget\n                title=\"Season\"\n                loading={isLoadingStats || isLoadingHistory}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const allPlayers = getAllPlayers(stats)\n\n    const reds = aggregateStats(allPlayers, 'red_cards').map(stat => stat['red_cards'] as number)\n    const yellows = aggregateStats(allPlayers, 'yellow_cards').map(stat => stat['yellow_cards'] as number)\n    const goals = aggregateStats(allPlayers, 'goals_scored').map(stat => stat['goals_scored'] as number)\n    const assists = aggregateStats(allPlayers, 'assists').map(stat => stat['assists'] as number)\n    const cleanSheets = aggregateStats(allPlayers, 'clean_sheets').map(stat => stat['clean_sheets'] as number)\n    const goalsConceded = aggregateStats(allPlayers, 'goals_conceded').map(stat => stat['goals_conceded'] as number)\n    const ownGoals = aggregateStats(allPlayers, 'own_goals').map(stat => stat['own_goals'] as number)\n    const saves = aggregateStats(allPlayers, 'saves').map(stat => stat['saves'] as number)\n    const minutes = aggregateStats(allPlayers, 'minutes').map(stat => stat['minutes'] as number)\n    const penaltiesMissed = aggregateStats(allPlayers, 'penalties_missed').map(stat => stat['penalties_missed'] as number)\n    const penaltiesSaved = aggregateStats(allPlayers, 'penalties_saved').map(stat => stat['penalties_saved'] as number)\n    const inDreamteam = aggregateStats(allPlayers, 'in_dreamteam').map(stat => stat['in_dreamteam'] as number)\n    const bps = aggregateStats(allPlayers, 'bps').map(stat => stat['bps'] as number)\n    const bonus = aggregateStats(allPlayers, 'bonus').map(stat => stat['bonus'] as number)\n\n    const totalTransfers = history.current.reduce((acc,event) => acc + event.event_transfers, 0)\n    const totalHits = history.current.reduce((acc,event) => acc + event.event_transfers_cost / 4, 0)\n    const totalBenched = history.current.reduce((acc,event) => acc + event.points_on_bench, 0)\n\n    const tc = allPlayers\n        .find(player => player.data.findIndex(data => data.multiplier === 3) !== -1)\n        ?.data\n        .find(data => data.multiplier === 3)\n\n    const bbWeek = Object.entries(chips).find(([ gw, chip ]) => chip === 'bboost')?.[0]\n\n    const bbPoints = bbWeek\n        ? sumNumbers(allPlayers\n            .filter(player => (player.data[Number(bbWeek) - 1].position || 0) > 11)\n            .map(player => player.data[Number(bbWeek) - 1].points || 0))\n        : null\n\n    return (\n        <Widget\n            title=\"Season\"\n            loading={isLoadingStats || isLoadingHistory}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                <li className=\"widget__list__item\">\n                    <span>Total Transfers Made</span>\n                    <span>\n                        <a href={`https://fantasy.premierleague.com/entry/${id}/transfers`} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {totalTransfers}\n                        </a>\n                    </span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Hits Taken</span>\n                    <span>{totalHits} ({totalHits * -4} pts)</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Points on Bench</span>\n                    <span>{totalBenched} pts</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Red Cards</span>\n                    <span>{sumNumbers(reds)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Yellow Cards</span>\n                    <span>{sumNumbers(yellows)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Scored</span>\n                    <span>{sumNumbers(goals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Goals Conceded</span>\n                    <span>{sumNumbers(goalsConceded)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Assists</span>\n                    <span>{sumNumbers(assists)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Clean Sheets</span>\n                    <span>{sumNumbers(cleanSheets)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Own Goals</span>\n                    <span>{sumNumbers(ownGoals)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Saves</span>\n                    <span>{sumNumbers(saves)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Minutes Played</span>\n                    <span>{thousandsSeparator(sumNumbers(minutes))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Missed</span>\n                    <span>{sumNumbers(penaltiesMissed)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Penalties Saved</span>\n                    <span>{sumNumbers(penaltiesSaved)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Times in Dreamteam</span>\n                    <span>{sumNumbers(inDreamteam)}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total BPS</span>\n                    <span>{thousandsSeparator(sumNumbers(bps))}</span>\n                </li>\n                <li className=\"widget__list__item\">\n                    <span>Total Bonus Points</span>\n                    <span>{thousandsSeparator(sumNumbers(bonus))}</span>\n                </li>\n                {tc !== undefined && (\n                    <li className=\"widget__list__item\">\n                        <span>Triple Captain Points Gained</span>\n                        <span>\n                            {(tc.points || 0) / 3} pts\n                            (\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/event/${tc.event.id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    GW {tc.event.id}\n                                </a>\n                            )\n                        </span>\n                    </li>\n                )}\n                {bbPoints !== null && (\n                    <li className=\"widget__list__item\">\n                        <span>Bench Boost Points Gained</span>\n                        <span>\n                            {bbPoints} pts\n                            (\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/event/${bbWeek}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    GW {bbWeek}\n                                </a>\n                            )\n                        </span>\n                    </li>\n                )}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget","import React from 'react'\nimport { Team as TeamType } from '../../types'\nimport './Team.scss'\n\ntype Props = {\n    team: TeamType\n}\n\nconst Team: React.FC<Props> = (props: Props) => (\n    <div className=\"team\">\n        <img\n            src={`https://fantasy.premierleague.com/dist/img/shirts/special/shirt_${props.team.code}-66.png`}\n            alt={props.team.short_name}\n            className=\"player__shirt\"\n        />\n        <span className=\"team__name\">{props.team.name}</span>\n    </div>\n)\n\nexport default Team","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../../reducers'\nimport { Team } from '../Team'\nimport { Widget } from '../Widget'\nimport { getAllPlayers, getTotalPoints, sumNumbers } from '../../utilities'\nimport { Metric } from '../Metric'\n\nconst SeasonWidget: React.FC = () => {\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    if (!stats || !bootstrap) {\n        return (\n            <Widget\n                title=\"Teams\"\n                loading={isLoadingStats || isLoadingBootstrap}\n                cloaked={!id}\n            />\n        )\n    }\n\n    const counts = Object.values(stats)\n        .reduce((acc: number[], curr) => [ ...acc, ...curr.map(el => el.element.team) ], [])\n        .reduce((acc: { [key: number]: number }, curr) => ({ ...acc, [curr]: (acc[Number(curr)] || 0) + 1 }), {})\n\n    const teams = [ ...bootstrap.teams ].sort((a, b) => (counts[b.id] || 0) - (counts[a.id] || 0))\n\n    const allPlayers = getAllPlayers(stats)\n\n    return (\n        <Widget\n            title=\"Teams\"\n            loading={isLoadingStats || isLoadingBootstrap}\n            cloaked={!id}\n        >\n            <ul className=\"widget__list\">\n                {teams.map(team => {\n                    const players = allPlayers.filter(player => player.element.team === team.id)\n                    const points = sumNumbers(players.map(player => getTotalPoints(player)))\n\n                    const positions: Record<string, number> = bootstrap.element_types\n                        .reduce((acc, curr) => ({\n                            ...acc,\n                            [curr.id]: players.filter(player => player.element.element_type === curr.id).length,\n                        }), {})\n\n                    return (\n                        <li className=\"widget__list__item\">\n                            <Team team={team} />\n                            <span>\n                                {counts[team.id] || 0}\n                                {' '}\n                                (\n                                    {Object.values(positions).join('-')},\n                                    {' '}\n                                    {points} pts, {players.length ? (points / players.length).toFixed(1) : 0}\n                                    {' '}\n                                    <Metric metric=\"ppp\" />\n                                )\n                            </span>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Widget>\n    )\n}\n\nexport default SeasonWidget","import React, { useState, useEffect, useRef } from 'react'\nimport { Bootstrap, StatData, Stats, History } from '../../types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchBootstrap } from '../../reducers/bootstrap'\nimport { RootState } from '../../reducers'\nimport { Player } from '../Player'\nimport { Widget } from '../Widget'\nimport { Spinner } from '../Spinner'\nimport { getPastEvents, getTotalSelections, getTotalStarts, getTotalBenched, getChipAbbreviation, thousandsSeparator, getShortName, validateTeamId, thousandsShorthand, getTotalPoints } from '../../utilities'\nimport { Modal } from '../Modal'\nimport { setId } from '../../reducers/settings'\nimport { buildData } from '../../reducers/stats'\nimport { Button } from '../Button'\nimport classNames from 'classnames'\nimport { fetchHistory } from '../../reducers/history'\nimport { AreaChart, Area, XAxis, YAxis, ResponsiveContainer, CartesianGrid, Tooltip } from 'recharts'\nimport Select, { ValueType } from 'react-select'\nimport queryString from 'query-string'\nimport { HistoryWidget } from '../HistoryWidget'\nimport { TotsWidget } from '../TotsWidget'\nimport { PlayerStatsWidget } from '../PlayerStatsWidget'\nimport { FormationWidget } from '../FormationWidget'\nimport { CaptainWidget } from '../CaptainWidget'\nimport { GameweekWidget } from '../GameweekWidget'\nimport { PositionsWidget } from '../PositionsWidget'\nimport { fetchEntry } from '../../reducers/entry'\nimport { Metric } from '../Metric'\nimport { SeasonWidget } from '../SeasonWidget';\nimport { TeamsWidget } from '../TeamsWidget'\nimport './Dashboard.scss'\n\ntype OptionType = {\n    value: string\n    label: string\n}\n\ntype QueryString = {\n    team?: string\n}\n\nconst sortings: { [ key: string ]: (statData: StatData) => number } = {\n    points: getTotalPoints,\n    selection: getTotalSelections,\n    start: getTotalStarts,\n    bench: getTotalBenched,\n    alphabet: (statData: StatData): number => {\n        return statData.element.web_name.toLowerCase().charCodeAt(0) * -1\n    }\n}\n\nconst sortOptions = [\n    { value: 'points', label: 'Total Points' },\n    { value: 'selection', label: 'Most Selected' },\n    { value: 'start', label: 'Most Started' },\n    { value: 'bench', label: 'Most Benched' },\n    { value: 'alphabet', label: 'Alphabetically' },\n]\n\nconst renderSelectionWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalSelections(b) - getTotalSelections(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalSelections(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderStartersWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalStarts(b) - getTotalStarts(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalStarts(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderBenchWidget = (stats: Stats): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .sort((a, b) => getTotalBenched(b) - getTotalBenched(a))\n\n    return (\n        <ul className=\"widget__list\">\n            {elements.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    {getTotalBenched(element)}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderDifferenceWidget = (stats: Stats, top: boolean = false): JSX.Element => {\n    const elements = Object.values(stats)\n        .reduce((acc, curr) => acc.concat(curr), [])\n        .map(element => {\n            const selections = getTotalSelections(element)\n            const benched = getTotalBenched(element)\n            const starts = getTotalStarts(element)\n\n            return {\n                ...element,\n                benched,\n                benchedPercentage: benched / selections * 100,\n                starts,\n                startsPercentage: starts / selections * 100,\n            }\n        })\n\n    const topStarters = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.startsPercentage - a.startsPercentage\n        return percentageDiff === 0 ? b.starts - a.starts : percentageDiff\n    })\n\n    const topBenchwarmers = [ ...elements ].sort((a, b) => {\n        const percentageDiff = b.benchedPercentage - a.benchedPercentage\n        return percentageDiff === 0 ? b.benched - a.benched : percentageDiff\n    })\n\n    return (\n        <ul className=\"widget__list\">\n            {top && topStarters.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.startsPercentage.toFixed(1)}% ({element.starts})</span>\n                </li>\n            ))}\n            {!top && topBenchwarmers.slice(0, 5).map(element => (\n                <li className=\"widget__list__item\">\n                    <Player id={element.element.id} />\n                    <span>{element.benchedPercentage.toFixed(1)}% ({element.benched})</span>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nconst renderOverallRankWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    let data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.overall_rank,\n        }\n    })\n\n    const max = [ ...data ].sort((a, b) => b.value - a.value)[0].value * 1.05\n\n    data = [ ...data ].map(element => ({\n        ...element,\n        max,\n    }))\n\n    return (\n        <div className=\"chart chart--reversed\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"max\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#ffffff\" fillOpacity=\"1\" />\n                    <YAxis reversed={true} tickFormatter={value => thousandsShorthand(value)} domain={[1, max]} interval=\"preserveStartEnd\" tickCount={10} />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => name === 'max' ? [undefined, undefined] : [ thousandsSeparator(Number(value)), 'Rank' ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderPointsWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            points: entry.points,\n            bench: entry.points_on_bench,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"points\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <Area type=\"monotone\" dataKey=\"bench\" stroke=\"#00FF87\" fill=\"#00FF87\" fillOpacity=\"1\" />\n                    <YAxis interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ value, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst renderValueWidget = (history: History, bootstrap: Bootstrap): JSX.Element => {\n    const data = history.current.map(entry => {\n        const event = bootstrap.events.find(event => event.id === entry.event)\n\n        return {\n            name: `GW ${event ? getShortName(event) : entry.event}`,\n            value: entry.value + entry.bank,\n        }\n    })\n\n    return (\n        <div className=\"chart\">\n            <ResponsiveContainer height={300} width=\"100%\">\n                <AreaChart data={data} margin={{ bottom: 45, left: 15, right: 15 }}>\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#177B47\" fill=\"#177B47\" fillOpacity=\"1\" />\n                    <YAxis tickFormatter={value => `£${value / 10}`} domain={[ 'auto', 'auto' ]} interval=\"preserveStartEnd\" />\n                    <XAxis dataKey=\"name\" angle={-90} textAnchor=\"end\" interval=\"preserveStartEnd\" />\n                    <CartesianGrid stroke=\"rgba(192, 192, 192, 0.5)\" strokeDasharray=\"3 3\" />\n                    <Tooltip isAnimationActive={false} formatter={(value, name) => [ `£${Number(value) / 10}`, name.charAt(0).toUpperCase() + name.slice(1) ]} separator=\": \" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst Dashboard: React.FC = () => {\n    const [ isModalOpen, setIsModalOpen ] = useState(true)\n    const [ sort, setSort ] = useState<ValueType<OptionType>>(sortOptions[0])\n\n    const bootstrap = useSelector((state: RootState) => state.bootstrap.data)\n    const isLoadingBootstrap = useSelector((state: RootState) => state.bootstrap.loading)\n\n    const stats = useSelector((state: RootState) => state.stats.data)\n    const chips = useSelector((state: RootState) => state.stats.chips)\n    const isLoadingStats = useSelector((state: RootState) => state.stats.loading)\n\n    const id = useSelector((state: RootState) => state.settings.id)\n\n    const history = useSelector((state: RootState) => state.history.data)\n    const isLoadingHistory = useSelector((state: RootState) => state.history.loading)\n\n    const entry = useSelector((state: RootState) => state.entry.data)\n\n    const dashboardRef = useRef<HTMLDivElement>(null)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchBootstrap())\n\n        const query: QueryString = queryString.parse(window.location.hash)\n\n        if (query.team && validateTeamId(query.team)) {\n            dispatch(setId(query.team))\n        }\n    }, [ dispatch ])\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (dashboardRef && dashboardRef.current) {\n                dashboardRef.current.scrollTo(dashboardRef.current.scrollWidth, 0)\n            }\n        }, 1)\n    }, [ stats ])\n\n    useEffect(() => {\n        setIsModalOpen(!id)\n\n        if (bootstrap && id) {\n            dispatch(buildData(bootstrap, id))\n            dispatch(fetchHistory(id))\n            dispatch(fetchEntry(id))\n\n            window.location.hash = queryString.stringify({ team: id })\n        }\n    }, [ id, dispatch, bootstrap ])\n\n    return (\n        <div className=\"app\">\n            {isModalOpen && (\n                <Modal onClose={() => setIsModalOpen(false)} />\n            )}\n            <div className={classNames('app__loading', {\n                'app__loading--hidden': !isLoadingBootstrap,\n            })}>\n                <Spinner />\n            </div>\n            <div className=\"app__content\">\n                {entry && (\n                    <header className=\"dashboard__entry\">\n                        <Widget>\n                            <h1 className=\"dashboard__title\">\n                                <a href={`https://fantasy.premierleague.com/entry/${id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {entry.name}\n                                </a>\n                                <div className=\"small\">{entry.summary_overall_points} pts — Rank {thousandsSeparator(entry.summary_overall_rank)}</div>\n                            </h1>\n                            {id !== undefined && (\n                                <Button\n                                    onClick={() => setIsModalOpen(true)}\n                                    label=\"Change Team\"\n                                />\n                            )}\n                        </Widget>\n                    </header>\n                )}\n                <div className=\"dashboard__widgets dashboard__widgets--split\">\n                    <TotsWidget />\n                    <PlayerStatsWidget />\n                </div>\n                <div className=\"app__meta\">\n                    <label className=\"app__meta__label\">\n                        Sort by\n                    </label>\n                    <Select\n                        options={sortOptions}\n                        value={sort}\n                        onChange={option => setSort(option)}\n                        styles={{\n                            container: (provided) => ({ ...provided, width: '100%' }),\n                            menu: (provided) => ({ ...provided, zIndex: 20 })\n                        }}\n                    />\n                    <div className=\"app__legend\">\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--started\"></div>\n                            Started\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--benched\"></div>\n                            Benched\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator app__color__indicator--triple\"></div>\n                            TC\n                        </div>\n                        <div className=\"app__color\">\n                            <div className=\"app__color__indicator\"></div>\n                            Not Selected\n                        </div>\n                    </div>\n                </div>\n                <div className={classNames('dashboard', {\n                    'dashboard--cloaked': !id,\n                })}>\n                    {isLoadingStats && (\n                        <div className=\"dashboard__loading\">\n                            <Spinner />\n                        </div>\n                    )}\n                    <div className=\"dashboard__container\" ref={dashboardRef}>\n                        <header className=\"dashboard__header\">\n                            <span className=\"dashboard__heading\">\n                                Player\n                            </span>\n                            {bootstrap?.events && getPastEvents(bootstrap.events).filter(event => event.top_element_info.points > 0).map(event => (\n                                <span className=\"dashboard__stat\" key={event.id}>\n                                    {getShortName(event)}\n                                    {chips && chips[event.id] && (\n                                        <div>{getChipAbbreviation(chips[event.id])}</div>\n                                    )}\n                                </span>\n                            ))}\n                            <div className=\"dashboard__totals\">\n                                <span className=\"dashboard__stat\">\n                                    Selected\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Starting\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Benched\n                                </span>\n                                <span className=\"dashboard__stat\">\n                                    Points\n                                </span>\n                            </div>\n                        </header>\n                        <ul className=\"dashboard__list\">\n                            {stats && Object.entries(stats).map(([ elementType, statData ]) => (\n                                <div key={elementType}>\n                                    <li className=\"dashboard__category\">\n                                        <span>{bootstrap?.element_types.find(el => el.id === Number(elementType))?.plural_name_short}</span>\n                                        <span>{statData.length}</span>\n                                    </li>\n                                    {statData\n                                        .filter(element => element.data.filter(pick => pick.multiplier !== null).length)\n                                        .sort((a, b) => sortings[(sort as OptionType).value](b) - sortings[(sort as OptionType).value](a))\n                                        .map(element => (\n                                            <li key={element.element.id} className=\"dashboard__item\">\n                                                <div className=\"dashboard__player\">\n                                                    <Player id={element.element.id} />\n                                                </div>\n                                                <div className=\"dashboard__stats\">\n                                                    {element.data.map(item => (\n                                                        <span\n                                                            key={item.event.id}\n                                                            className={classNames('dashboard__stat', {\n                                                                'dashboard__stat--benched': item.multiplier === 0,\n                                                                'dashboard__stat--triple': item.multiplier === 3,\n                                                                'dashboard__stat--started': item.multiplier,\n                                                            })}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div className=\"dashboard__totals\">\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalSelections(element)} ({(getTotalSelections(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalStarts(element)} ({(getTotalStarts(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        {getTotalBenched(element)} ({(getTotalBenched(element) / element.data.length * 100).toFixed(1)}%)\n                                                    </span>\n                                                    <span className=\"dashboard__stat\">\n                                                        <span>\n                                                            {getTotalPoints(element)} ({getTotalStarts(element) > 0 ? (getTotalPoints(element) / getTotalStarts(element)).toFixed(1) : 0} <Metric metric=\"ppg\" />)\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </li>\n                                        ))\n                                    }\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"dashboard__widgets\">\n                    <Widget\n                        title=\"Top Selections\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderSelectionWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderStartersWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Top Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderBenchWidget(stats)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Starters\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats, true)}\n                    </Widget>\n                    <Widget\n                        title=\"Most Consistent Benchwarmers\"\n                        loading={isLoadingStats}\n                        cloaked={!id}\n                    >\n                        {stats && renderDifferenceWidget(stats)}\n                    </Widget>\n                    <TeamsWidget />\n                    <PositionsWidget />\n                    <HistoryWidget />\n                    <FormationWidget />\n                    <CaptainWidget />\n                    <GameweekWidget />\n                    <SeasonWidget />\n                </div>\n                <div className=\"dashboard__graphs\">\n                    <Widget\n                        title=\"Overall Rank Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderOverallRankWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Gameweek Points\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderPointsWidget(history, bootstrap)}\n                    </Widget>\n                    <Widget\n                        title=\"Team Value Evolution\"\n                        loading={isLoadingHistory}\n                        cloaked={!id}\n                    >\n                        {history && bootstrap && renderValueWidget(history, bootstrap)}\n                    </Widget>\n                </div>\n                <div className=\"app__legal\">\n                    <p>FPL Stats uses data from the official Premier League Fantasy API. This site is not affiliated with the Premier League.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","import { combineReducers } from 'redux'\nimport bootstrap from './bootstrap'\nimport stats from './stats'\nimport settings from './settings'\nimport entry from './entry'\nimport { Bootstrap, Stats, History, Entry } from '../types'\nimport history from './history'\n\nexport type RootState = {\n    bootstrap: {\n        loading: boolean\n        data: Bootstrap | undefined\n    }\n    stats: {\n        loading: boolean\n        data: Stats | undefined\n        chips: {\n            [key: number]: string\n        } | undefined\n    }\n    settings: {\n        id: number | undefined\n        meanStrategy: 'average' | 'median'\n    }\n    history: {\n        loading: boolean\n        data: History | undefined\n    }\n    entry: {\n        loading: boolean\n        data: Entry | undefined\n    }\n}\n\nexport default combineReducers({\n    bootstrap,\n    stats,\n    settings,\n    history,\n    entry,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Dashboard } from './components/Dashboard'\nimport configureAppStore from './store'\nimport { Provider } from 'react-redux'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureAppStore()}>\n      <Dashboard />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport rootReducer from './reducers'\n\nexport default function configureAppStore() {\n    const store = configureStore({\n        reducer: rootReducer,\n        middleware: [ ...getDefaultMiddleware() ],\n    })\n\n    return store\n}"],"sourceRoot":""}